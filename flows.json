[
    {
        "id": "f6f2187d.f17ca8",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "df04831a8742eac0",
        "type": "tab",
        "label": "流程 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a8c13c8811cc5927",
        "type": "tab",
        "label": "小爱tts",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0143542654182c64",
        "type": "tab",
        "label": "信息",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2d47d0348f062886",
        "type": "tab",
        "label": "节点订阅",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5646dda1b303b00d",
        "type": "tab",
        "label": "自动备份",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f936bcfefd29972a",
        "type": "tab",
        "label": "流程 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e3562182c0530220",
        "type": "tab",
        "label": "流程 3",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e7cf0672145a47bb",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c292e8482b433009",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 24,
                "sy": 24,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "c7879eafe39970e1",
        "type": "ui_group",
        "name": "ui",
        "tab": "e7cf0672145a47bb",
        "order": 1,
        "disp": true,
        "width": 30,
        "collapse": false,
        "className": ""
    },
    {
        "id": "a5e643a4b8a035cf",
        "type": "server",
        "name": "Home Assistant",
        "version": 2,
        "addon": false,
        "rejectUnauthorizedCerts": true,
        "ha_boolean": "y|yes|true|on|home|open",
        "connectionDelay": true,
        "cacheJson": true,
        "heartbeat": false,
        "heartbeatInterval": "30"
    },
    {
        "id": "6f14ecd03b27c329",
        "type": "ui_tab",
        "name": "语音消息",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "3208b3404cb0f2e8",
        "type": "ui_group",
        "name": "语音输入",
        "tab": "6f14ecd03b27c329",
        "order": 1,
        "disp": true,
        "width": 26,
        "collapse": false,
        "className": ""
    },
    {
        "id": "e240b90a46e74024",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "3208b3404cb0f2e8",
        "order": 2,
        "width": 7,
        "height": 1
    },
    {
        "id": "51caaf99a7073072",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "3208b3404cb0f2e8",
        "order": 4,
        "width": 21,
        "height": 1
    },
    {
        "id": "0785acda9e7d35ec",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "3208b3404cb0f2e8",
        "order": 5,
        "width": 21,
        "height": 1
    },
    {
        "id": "be7b5c90f1475b0c",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "3208b3404cb0f2e8",
        "order": 8,
        "width": 23,
        "height": 1
    },
    {
        "id": "67c6371daa66df58",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "3208b3404cb0f2e8",
        "order": 9,
        "width": 23,
        "height": 1
    },
    {
        "id": "82bda1b4c940dbec",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "3208b3404cb0f2e8",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "01015a60b6fc6070",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "3208b3404cb0f2e8",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "13f8346cb05f89c3",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "3208b3404cb0f2e8",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "b87e74205debcbdc",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "3208b3404cb0f2e8",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "6cc77c3b10ad94ff",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "3208b3404cb0f2e8",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "fb03a4fd817ac80c",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "3208b3404cb0f2e8",
        "order": 16,
        "width": 1,
        "height": 1
    },
    {
        "id": "896b4449bfe53246",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "3208b3404cb0f2e8",
        "order": 17,
        "width": 1,
        "height": 1
    },
    {
        "id": "efc43f8860e88473",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "3208b3404cb0f2e8",
        "order": 18,
        "width": 1,
        "height": 1
    },
    {
        "id": "0d17e9f95a8de665",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "3208b3404cb0f2e8",
        "order": 19,
        "width": 1,
        "height": 1
    },
    {
        "id": "c6ac438104a0d0c7",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "3208b3404cb0f2e8",
        "order": 20,
        "width": 1,
        "height": 1
    },
    {
        "id": "58ee2527146daf65",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "3208b3404cb0f2e8",
        "order": 21,
        "width": 1,
        "height": 1
    },
    {
        "id": "6f1b9311eeedc5b1",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "3208b3404cb0f2e8",
        "order": 22,
        "width": 1,
        "height": 1
    },
    {
        "id": "5691fe30ab4f71e1",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "3208b3404cb0f2e8",
        "order": 23,
        "width": 1,
        "height": 1
    },
    {
        "id": "b5debb292335794f",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "c7879eafe39970e1",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "7890eb0d4f10ac6d",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "c7879eafe39970e1",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "4f321dda01cf524c",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "c7879eafe39970e1",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "e9f53ffb5d6a6849",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "c7879eafe39970e1",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "4333890357ad7fd6",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "c7879eafe39970e1",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "e6800b85d208c4b8",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "c7879eafe39970e1",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "94720abc65a406c2",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "c7879eafe39970e1",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "e350829c7fe60efb",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "c7879eafe39970e1",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "0e4e9d875bb54945",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "c7879eafe39970e1",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "6314deb7d19beccd",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "c7879eafe39970e1",
        "order": 11,
        "width": 30,
        "height": 1
    },
    {
        "id": "935d1f5fb4b66421",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "c7879eafe39970e1",
        "order": 12,
        "width": 30,
        "height": 1
    },
    {
        "id": "916286f47bc889e9",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "c7879eafe39970e1",
        "order": 13,
        "width": 30,
        "height": 1
    },
    {
        "id": "57d74e9f89a4a86b",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "c7879eafe39970e1",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "aaef0ac0c72a1244",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "c7879eafe39970e1",
        "order": 16,
        "width": 30,
        "height": 1
    },
    {
        "id": "f5530eba314fc749",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "c7879eafe39970e1",
        "order": 17,
        "width": 30,
        "height": 1
    },
    {
        "id": "ae82f3df4467717b",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "c7879eafe39970e1",
        "order": 18,
        "width": 30,
        "height": 1
    },
    {
        "id": "7692529095db29b7",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "c7879eafe39970e1",
        "order": 22,
        "width": 15,
        "height": 1
    },
    {
        "id": "76891b272d11bdc4",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "c7879eafe39970e1",
        "order": 23,
        "width": 15,
        "height": 1
    },
    {
        "id": "7ca7d2c80701802d",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "c7879eafe39970e1",
        "order": 24,
        "width": 15,
        "height": 1
    },
    {
        "id": "6d726a50d0eb7b70",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "c7879eafe39970e1",
        "order": 25,
        "width": 15,
        "height": 1
    },
    {
        "id": "374b258d7a09710f",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "c7879eafe39970e1",
        "order": 26,
        "width": 15,
        "height": 1
    },
    {
        "id": "3cc11d24.ff01a2",
        "type": "comment",
        "z": "f6f2187d.f17ca8",
        "name": "WARNING: please check you have started this container with a volume that is mounted to /data\\n otherwise any flow changes are lost when you redeploy or upgrade the container\\n (e.g. upgrade to a more recent node-red docker image).\\n  If you are using named volumes you can ignore this warning.\\n Double click or see info side panel to learn how to start Node-RED in Docker to save your work",
        "info": "\nTo start docker with a bind mount volume (-v option), for example:\n\n```\ndocker run -it -p 1880:1880 -v /home/user/node_red_data:/data --name mynodered nodered/node-red\n```\n\nwhere `/home/user/node_red_data` is a directory on your host machine where you want to store your flows.\n\nIf you do not do this then you can experiment and redploy flows, but if you restart or upgrade the container the flows will be disconnected and lost. \n\nThey will still exist in a hidden data volume, which can be recovered using standard docker techniques, but that is much more complex than just starting with a named volume as described above.",
        "x": 350,
        "y": 80,
        "wires": []
    },
    {
        "id": "c0d10a18619bb4d1",
        "type": "ui_template",
        "z": "df04831a8742eac0",
        "d": true,
        "group": "c7879eafe39970e1",
        "name": "网易云音乐",
        "order": 21,
        "width": 15,
        "height": 5,
        "format": "<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=1894007406&auto=1&height=66\"></iframe>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 310,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "109fbc1aa77f7f25",
        "type": "ui_template",
        "z": "df04831a8742eac0",
        "group": "c7879eafe39970e1",
        "name": "视频",
        "order": 1,
        "width": 29,
        "height": 9,
        "format": "<iframe src=\"//player.bilibili.com/player.html?aid=466835972&bvid=BV1JL411T7rt&cid=515423527&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 290,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "81754fd5eee7ac6e",
        "type": "inject",
        "z": "df04831a8742eac0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"uid\":513305949}",
        "payloadType": "json",
        "x": 170,
        "y": 180,
        "wires": [
            [
                "dd93ab1a3f4a0cb7"
            ]
        ]
    },
    {
        "id": "dd93ab1a3f4a0cb7",
        "type": "http request",
        "z": "df04831a8742eac0",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://api.bilibili.com/x/relation/stat?vmid=513305949&jsonp=jsonp",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 360,
        "y": 180,
        "wires": [
            [
                "ba53d6aebd8b6ed5",
                "0fc79b4f9955b139",
                "71642892bdbab4a8",
                "b039aeaece4a1572"
            ]
        ]
    },
    {
        "id": "ba53d6aebd8b6ed5",
        "type": "ui_text",
        "z": "df04831a8742eac0",
        "group": "c7879eafe39970e1",
        "order": 19,
        "width": 30,
        "height": 1,
        "name": "",
        "label": "粉丝数",
        "format": "{{msg.payload.data.follower}}",
        "layout": "row-spread",
        "className": "",
        "x": 530,
        "y": 240,
        "wires": []
    },
    {
        "id": "a6b7a5862e2fdd0a",
        "type": "ui_chart",
        "z": "df04831a8742eac0",
        "name": "",
        "group": "c7879eafe39970e1",
        "order": 20,
        "width": 30,
        "height": 16,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 750,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "0fc79b4f9955b139",
        "type": "change",
        "z": "df04831a8742eac0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "follower",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "msg.payload.data.follower",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 120,
        "wires": [
            [
                "a6b7a5862e2fdd0a",
                "0993bde1fbc370af"
            ]
        ]
    },
    {
        "id": "71642892bdbab4a8",
        "type": "switch",
        "z": "df04831a8742eac0",
        "name": "",
        "property": "payload.data.follower",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "762450",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 530,
        "y": 180,
        "wires": [
            [
                "5ab480824c920fab"
            ]
        ]
    },
    {
        "id": "5ab480824c920fab",
        "type": "change",
        "z": "df04831a8742eac0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "粉丝数大于762450",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 180,
        "wires": [
            [
                "259bf8db6345e7bf"
            ]
        ]
    },
    {
        "id": "259bf8db6345e7bf",
        "type": "ui_audio",
        "z": "df04831a8742eac0",
        "d": true,
        "name": "",
        "group": "c7879eafe39970e1",
        "voice": "",
        "always": "",
        "x": 940,
        "y": 180,
        "wires": []
    },
    {
        "id": "e99c6c5e658c2273",
        "type": "ha-entity",
        "z": "df04831a8742eac0",
        "name": "小说",
        "server": "a5e643a4b8a035cf",
        "version": 2,
        "debugenabled": false,
        "outputs": 1,
        "entityType": "sensor",
        "config": [
            {
                "property": "name",
                "value": "小说"
            },
            {
                "property": "device_class",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            },
            {
                "property": "unit_of_measurement",
                "value": ""
            },
            {
                "property": "state_class",
                "value": ""
            },
            {
                "property": "last_reset",
                "value": ""
            }
        ],
        "state": "payload[0]",
        "stateType": "msg",
        "attributes": [],
        "resend": true,
        "outputLocation": "payload",
        "outputLocationType": "none",
        "inputOverride": "allow",
        "outputOnStateChange": false,
        "outputPayload": "",
        "outputPayloadType": "str",
        "x": 930,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "11bffdca9f45d452",
        "type": "inject",
        "z": "df04831a8742eac0",
        "name": "小说更新",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 440,
        "wires": [
            [
                "34abacb74a4ff1cd"
            ]
        ]
    },
    {
        "id": "34abacb74a4ff1cd",
        "type": "http request",
        "z": "df04831a8742eac0",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://book.qidian.com/info/1027368101/",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 320,
        "y": 440,
        "wires": [
            [
                "b52fcb31a58e90f7"
            ]
        ]
    },
    {
        "id": "e397dd2d51fc3342",
        "type": "html",
        "z": "df04831a8742eac0",
        "name": "",
        "property": "payload",
        "outproperty": "payload",
        "tag": ".update .detail a",
        "ret": "text",
        "as": "single",
        "x": 740,
        "y": 440,
        "wires": [
            [
                "e99c6c5e658c2273",
                "7eaed87968638b08",
                "dcb6cec1d1afb4fd"
            ]
        ]
    },
    {
        "id": "4eb9dbc293017cbf",
        "type": "ui_text",
        "z": "df04831a8742eac0",
        "group": "c7879eafe39970e1",
        "order": 14,
        "width": 29,
        "height": 1,
        "name": "",
        "label": "最新章节",
        "format": "《万相之王》{{msg.title}} 更新时间：{{msg.payload[0]}}",
        "layout": "row-left",
        "className": "",
        "x": 720,
        "y": 580,
        "wires": []
    },
    {
        "id": "0fce05d6f7e03c0f",
        "type": "html",
        "z": "df04831a8742eac0",
        "name": "",
        "property": "payload",
        "outproperty": "payload",
        "tag": ".detail .time",
        "ret": "text",
        "as": "single",
        "x": 550,
        "y": 520,
        "wires": [
            [
                "e0866f717803c6d3",
                "4eb9dbc293017cbf"
            ]
        ]
    },
    {
        "id": "0993bde1fbc370af",
        "type": "debug",
        "z": "df04831a8742eac0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 80,
        "wires": []
    },
    {
        "id": "7eaed87968638b08",
        "type": "function",
        "z": "df04831a8742eac0",
        "name": "",
        "func": "var count = context.get('count')||\"\";\nif(msg.payload[0] == count||typeof msg.payload[0] == \"undefined\"){\n    return null\n}else{\n    count = msg.payload[0]\n    msg.topic = \"刚刚更新了小说\"\n    msg.payload = \"\"\n    msg.payload = \"《万相之王》：\"+count\n    context.set('count',count);\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 520,
        "wires": [
            [
                "636a5a7274fea306"
            ]
        ]
    },
    {
        "id": "636a5a7274fea306",
        "type": "e-mail",
        "z": "df04831a8742eac0",
        "server": "smtp.qq.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "1784162089@qq.com",
        "dname": "发邮件",
        "x": 890,
        "y": 580,
        "wires": []
    },
    {
        "id": "491160702d33bf50",
        "type": "http request",
        "z": "df04831a8742eac0",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://api.bilibili.com/x/space/arc/search?mid=513305949&ps=30&tid=0&pn=1&keyword=&order=pubdate&jsonp=jsonp",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 240,
        "y": 980,
        "wires": [
            [
                "fd69d6b6805bfbc1",
                "abb785b16890a2e2",
                "f09686b1b9084c7d",
                "ad5665b64c256a15",
                "26d6e432615b49bb",
                "c049d16d5fd3025d"
            ]
        ]
    },
    {
        "id": "fd69d6b6805bfbc1",
        "type": "ui_text",
        "z": "df04831a8742eac0",
        "group": "3208b3404cb0f2e8",
        "order": 20,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "播放量",
        "format": "{{msg.payload.data.list.vlist[0].play}}",
        "layout": "row-spread",
        "className": "",
        "x": 410,
        "y": 920,
        "wires": []
    },
    {
        "id": "cd81b6937b019a6f",
        "type": "inject",
        "z": "df04831a8742eac0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 980,
        "wires": [
            [
                "491160702d33bf50"
            ]
        ]
    },
    {
        "id": "abb785b16890a2e2",
        "type": "debug",
        "z": "df04831a8742eac0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 980,
        "wires": []
    },
    {
        "id": "b039aeaece4a1572",
        "type": "debug",
        "z": "df04831a8742eac0",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 300,
        "wires": []
    },
    {
        "id": "f09686b1b9084c7d",
        "type": "ui_text",
        "z": "df04831a8742eac0",
        "group": "3208b3404cb0f2e8",
        "order": 20,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "描述",
        "format": "{{msg.payload.data.list.vlist[0].description}}",
        "layout": "row-spread",
        "className": "",
        "x": 410,
        "y": 1040,
        "wires": []
    },
    {
        "id": "ad5665b64c256a15",
        "type": "ui_text",
        "z": "df04831a8742eac0",
        "group": "3208b3404cb0f2e8",
        "order": 20,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "标题",
        "format": "{{msg.payload.data.list.vlist[0].title}}",
        "layout": "row-spread",
        "className": "",
        "x": 410,
        "y": 1100,
        "wires": []
    },
    {
        "id": "26d6e432615b49bb",
        "type": "ui_text",
        "z": "df04831a8742eac0",
        "group": "3208b3404cb0f2e8",
        "order": 23,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "弹幕",
        "format": "{{msg.payload.data.list.vlist[0].video_review}}",
        "layout": "row-spread",
        "className": "",
        "x": 410,
        "y": 1160,
        "wires": []
    },
    {
        "id": "c049d16d5fd3025d",
        "type": "ui_text",
        "z": "df04831a8742eac0",
        "group": "3208b3404cb0f2e8",
        "order": 24,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "发布时间",
        "format": "{{msg.payload.data.list.vlist[0].created}}",
        "layout": "row-spread",
        "className": "",
        "x": 420,
        "y": 1220,
        "wires": []
    },
    {
        "id": "d758c7693aa4f2f3",
        "type": "http request",
        "z": "df04831a8742eac0",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://api.bilibili.com/x/space/arc/search?mid=513305949&ps=30&tid=0&pn=1&keyword=&order=pubdate&jsonp=jsonp",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 240,
        "y": 1400,
        "wires": [
            [
                "e03249819502f0eb",
                "54fc9d18e04ea1f7",
                "1f5671749ed7a78c",
                "349c6d598fd41cc4",
                "a9988113e9cc992c",
                "0da1b951de461264"
            ]
        ]
    },
    {
        "id": "e03249819502f0eb",
        "type": "ui_text",
        "z": "df04831a8742eac0",
        "group": "3208b3404cb0f2e8",
        "order": 20,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "播放量",
        "format": "{{msg.payload.data.list.vlist[0].play}}",
        "layout": "row-spread",
        "className": "",
        "x": 410,
        "y": 1340,
        "wires": []
    },
    {
        "id": "1994e9cdde80b71e",
        "type": "inject",
        "z": "df04831a8742eac0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 1400,
        "wires": [
            [
                "d758c7693aa4f2f3"
            ]
        ]
    },
    {
        "id": "54fc9d18e04ea1f7",
        "type": "debug",
        "z": "df04831a8742eac0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 1400,
        "wires": []
    },
    {
        "id": "1f5671749ed7a78c",
        "type": "ui_text",
        "z": "df04831a8742eac0",
        "group": "3208b3404cb0f2e8",
        "order": 20,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "描述",
        "format": "{{msg.payload.data.list.vlist[0].description}}",
        "layout": "row-spread",
        "className": "",
        "x": 410,
        "y": 1460,
        "wires": []
    },
    {
        "id": "349c6d598fd41cc4",
        "type": "ui_text",
        "z": "df04831a8742eac0",
        "group": "3208b3404cb0f2e8",
        "order": 20,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "标题",
        "format": "{{msg.payload.data.list.vlist[0].title}}",
        "layout": "row-spread",
        "className": "",
        "x": 410,
        "y": 1520,
        "wires": []
    },
    {
        "id": "a9988113e9cc992c",
        "type": "ui_text",
        "z": "df04831a8742eac0",
        "group": "3208b3404cb0f2e8",
        "order": 23,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "弹幕",
        "format": "{{msg.payload.data.list.vlist[0].video_review}}",
        "layout": "row-spread",
        "className": "",
        "x": 410,
        "y": 1580,
        "wires": []
    },
    {
        "id": "0da1b951de461264",
        "type": "ui_text",
        "z": "df04831a8742eac0",
        "group": "3208b3404cb0f2e8",
        "order": 24,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "发布时间",
        "format": "{{msg.payload.data.list.vlist[0].created}}",
        "layout": "row-spread",
        "className": "",
        "x": 420,
        "y": 1640,
        "wires": []
    },
    {
        "id": "3c2207eb6d1ea1cd",
        "type": "e-mail",
        "z": "df04831a8742eac0",
        "server": "smtp.qq.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "2720699551@qq.com",
        "dname": "发邮件",
        "x": 750,
        "y": 1880,
        "wires": []
    },
    {
        "id": "f87cfff4869a17f9",
        "type": "http request",
        "z": "df04831a8742eac0",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 420,
        "y": 1800,
        "wires": [
            [
                "05174b61cf555fb6"
            ]
        ]
    },
    {
        "id": "fcd9e04e6d4c4ca0",
        "type": "inject",
        "z": "df04831a8742eac0",
        "name": "小说更新",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 110,
        "y": 1920,
        "wires": [
            [
                "01b0bc6b977cadcd",
                "e83ed39fc9ff1f2d"
            ]
        ]
    },
    {
        "id": "2ff3955845e120b6",
        "type": "html",
        "z": "df04831a8742eac0",
        "name": "",
        "property": "payload",
        "outproperty": "payload",
        "tag": "#content",
        "ret": "text",
        "as": "single",
        "x": 280,
        "y": 1880,
        "wires": [
            [
                "8a51300b5a0e1d73"
            ]
        ]
    },
    {
        "id": "8a51300b5a0e1d73",
        "type": "function",
        "z": "df04831a8742eac0",
        "name": "",
        "func": "//var str = msg.payload.toString()\n//str = str.replace(/(^\\s*)/,\"\")\n//ret = str.replace(/\\s{2}/g, \"\\n    \")\n//msg.payload = msg.topic + \"\\n\" + \"    \" + ret\n\nvar count = context.get('count')||\"\";\nif(msg.time == count||typeof msg.time == \"undefined\"){\n    return null\n}else{\n    count = msg.time\n    context.set('count',count);\n    msg.payload = msg.topic + msg.payload\n    msg.topic = '小说更新(《万相之王》)' + '(' + msg.time + ')'\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 1880,
        "wires": [
            [
                "ded2bf4be4999fab",
                "3c2207eb6d1ea1cd"
            ]
        ]
    },
    {
        "id": "ded2bf4be4999fab",
        "type": "e-mail",
        "z": "df04831a8742eac0",
        "server": "smtp.qq.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "1784162089@qq.com",
        "dname": "发邮件",
        "x": 590,
        "y": 1880,
        "wires": []
    },
    {
        "id": "01b0bc6b977cadcd",
        "type": "function",
        "z": "df04831a8742eac0",
        "name": "",
        "func": "msg.url = 'https://www.biqudu.net/13_13233/'\nmsg.headers = {\n  //'Content-Type': 'application/x-www-form-urlencoded'\n  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.74 Safari/537.36 Edg/99.0.1150.46'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 1800,
        "wires": [
            [
                "f87cfff4869a17f9"
            ]
        ]
    },
    {
        "id": "05174b61cf555fb6",
        "type": "function",
        "z": "df04831a8742eac0",
        "name": "",
        "func": "reg = /<p>最后更新：(.*?)<\\/p>/\nmsg.time = reg.exec(msg.payload)[1]\nreg = /<dd> <a style=\"\"  href=\"(.*?)\">(.*?)<\\/a><\\/dd>/\nret = reg.exec(msg.payload)\nmsg.url = 'https://www.biqudu.net'+ret[1]\nmsg.headers = {\n  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.74 Safari/537.36 Edg/99.0.1150.46'\n}\nmsg.topic = ret[2]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1800,
        "wires": [
            [
                "fe9ea89af088171e"
            ]
        ]
    },
    {
        "id": "fe9ea89af088171e",
        "type": "http request",
        "z": "df04831a8742eac0",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 720,
        "y": 1800,
        "wires": [
            [
                "2ff3955845e120b6"
            ]
        ]
    },
    {
        "id": "e83ed39fc9ff1f2d",
        "type": "function",
        "z": "df04831a8742eac0",
        "name": "",
        "func": "msg.url = 'https://www.bige3.com/book/627/'\nmsg.headers = {\n  //'Content-Type': 'application/x-www-form-urlencoded'\n  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.74 Safari/537.36 Edg/99.0.1150.46'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 1980,
        "wires": [
            [
                "5dd89cb717802e77"
            ]
        ]
    },
    {
        "id": "5aae1a80f39547f2",
        "type": "function",
        "z": "df04831a8742eac0",
        "name": "",
        "func": "reg = /<span class=\"last\">更新：(.*?)<\\/span>/\nmsg.time = reg.exec(msg.payload)[1]\nreg = /<a href=\"\\/book\\/(.*?)\">(.*?)<\\/a>/g\nret = reg.exec(msg.payload)\nmsg.url = 'https://www.bige3.com/book/' + ret[1]\nmsg.title = ret[2]\nmsg.headers = {\n  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.74 Safari/537.36 Edg/99.0.1150.46'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1980,
        "wires": [
            [
                "1c7d73d8e74cf1f8"
            ]
        ]
    },
    {
        "id": "5dd89cb717802e77",
        "type": "http request",
        "z": "df04831a8742eac0",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "persist": false,
        "authType": "",
        "senderr": false,
        "x": 420,
        "y": 1980,
        "wires": [
            [
                "5aae1a80f39547f2"
            ]
        ]
    },
    {
        "id": "1c7d73d8e74cf1f8",
        "type": "http request",
        "z": "df04831a8742eac0",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "persist": false,
        "authType": "",
        "senderr": false,
        "x": 720,
        "y": 1980,
        "wires": [
            [
                "26b756b404c74900"
            ]
        ]
    },
    {
        "id": "26b756b404c74900",
        "type": "html",
        "z": "df04831a8742eac0",
        "name": "",
        "property": "payload",
        "outproperty": "payload",
        "tag": "#chaptercontent",
        "ret": "text",
        "as": "single",
        "x": 300,
        "y": 2060,
        "wires": [
            [
                "3437c517c028d6df"
            ]
        ]
    },
    {
        "id": "3437c517c028d6df",
        "type": "function",
        "z": "df04831a8742eac0",
        "name": "",
        "func": "var count = context.get('count')||\"\";\nif(msg.time == count||typeof msg.time == \"undefined\"){\n    return null\n}else{\n    count = msg.time\n    context.set('count',count);\n    msg.payload = msg.title + msg.payload[0]\n    msg.topic = '小说更新(《天唐锦绣》)' + '(' + msg.time + ')'\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 2060,
        "wires": [
            [
                "ded2bf4be4999fab",
                "3c2207eb6d1ea1cd"
            ]
        ]
    },
    {
        "id": "b52fcb31a58e90f7",
        "type": "change",
        "z": "df04831a8742eac0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "html_data",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 440,
        "wires": [
            [
                "e397dd2d51fc3342"
            ]
        ]
    },
    {
        "id": "dcb6cec1d1afb4fd",
        "type": "change",
        "z": "df04831a8742eac0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "title",
                "pt": "msg",
                "to": "payload[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "html_data",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 520,
        "wires": [
            [
                "0fce05d6f7e03c0f"
            ]
        ]
    },
    {
        "id": "e0866f717803c6d3",
        "type": "debug",
        "z": "df04831a8742eac0",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 520,
        "wires": []
    },
    {
        "id": "4c21ef519ea65406",
        "type": "api-call-service",
        "z": "a8c13c8811cc5927",
        "name": "",
        "server": "a5e643a4b8a035cf",
        "version": 5,
        "debugenabled": false,
        "domain": "xiaomi_miot_raw",
        "service": "speak_text",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "media_player.l05c_cloud_671277"
        ],
        "data": "",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 620,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "1e7dbd0b7150d96c",
        "type": "function",
        "z": "a8c13c8811cc5927",
        "name": "推送内容处理",
        "func": "var a = msg.payload\nmsg.payload = {}\nmsg.payload.data = {\"text\":a};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 120,
        "wires": [
            [
                "aec42c02fa10e73a",
                "4c21ef519ea65406"
            ]
        ]
    },
    {
        "id": "aec42c02fa10e73a",
        "type": "debug",
        "z": "a8c13c8811cc5927",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 180,
        "wires": []
    },
    {
        "id": "c6c8a537b84428f6",
        "type": "ui_toast",
        "z": "a8c13c8811cc5927",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 360,
        "y": 200,
        "wires": []
    },
    {
        "id": "f34c670953e66af3",
        "type": "ui_button",
        "z": "a8c13c8811cc5927",
        "name": "",
        "group": "3208b3404cb0f2e8",
        "order": 3,
        "width": 5,
        "height": 2,
        "passthru": false,
        "label": "button",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "123",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 170,
        "y": 200,
        "wires": [
            [
                "c6c8a537b84428f6"
            ]
        ]
    },
    {
        "id": "9a74671bbcd5bca4",
        "type": "ui_text_input",
        "z": "a8c13c8811cc5927",
        "name": "",
        "label": "语音消息输入",
        "tooltip": "",
        "group": "3208b3404cb0f2e8",
        "order": 1,
        "width": 19,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 140,
        "y": 120,
        "wires": [
            [
                "1e7dbd0b7150d96c",
                "c6c8a537b84428f6",
                "aec42c02fa10e73a"
            ]
        ]
    },
    {
        "id": "4dba106a4bc01a7b",
        "type": "api-current-state",
        "z": "0143542654182c64",
        "name": "",
        "server": "a5e643a4b8a035cf",
        "version": 3,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "switch.cp2_cloud_460494",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 380,
        "y": 180,
        "wires": [
            [
                "7d9a2f0e9a7534ad",
                "87b24f458884d9a7",
                "89f98002b259b124",
                "f708af4e4078808f",
                "35539877ad8863d6"
            ]
        ]
    },
    {
        "id": "387b0e77ad351a95",
        "type": "inject",
        "z": "0143542654182c64",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 180,
        "wires": [
            [
                "b8e29557b95b46b0",
                "4dba106a4bc01a7b"
            ]
        ]
    },
    {
        "id": "5cbaef3caf0a9f2e",
        "type": "debug",
        "z": "0143542654182c64",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 300,
        "wires": []
    },
    {
        "id": "7d9a2f0e9a7534ad",
        "type": "ui_text",
        "z": "0143542654182c64",
        "group": "c7879eafe39970e1",
        "order": 27,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "开关状态",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 820,
        "y": 100,
        "wires": []
    },
    {
        "id": "87b24f458884d9a7",
        "type": "ui_text",
        "z": "0143542654182c64",
        "group": "c7879eafe39970e1",
        "order": 28,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "用电量",
        "format": "{{msg.data.attributes.power_cons_power_consumption}}",
        "layout": "row-spread",
        "className": "",
        "x": 810,
        "y": 140,
        "wires": []
    },
    {
        "id": "89f98002b259b124",
        "type": "ui_text",
        "z": "0143542654182c64",
        "group": "c7879eafe39970e1",
        "order": 29,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "当前电压",
        "format": "{{msg.data.attributes.power_cons_voltage}}",
        "layout": "row-spread",
        "className": "",
        "x": 820,
        "y": 180,
        "wires": []
    },
    {
        "id": "f708af4e4078808f",
        "type": "ui_text",
        "z": "0143542654182c64",
        "group": "c7879eafe39970e1",
        "order": 30,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "当前电流",
        "format": "{{msg.data.attributes.power_cons_electric_current}}",
        "layout": "row-spread",
        "className": "",
        "x": 820,
        "y": 220,
        "wires": []
    },
    {
        "id": "b8e29557b95b46b0",
        "type": "api-current-state",
        "z": "0143542654182c64",
        "name": "",
        "server": "a5e643a4b8a035cf",
        "version": 3,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "switch.212a01_cloud_147486",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 390,
        "y": 260,
        "wires": [
            [
                "35539877ad8863d6"
            ]
        ]
    },
    {
        "id": "a5517bbb0af4189a",
        "type": "ui_text",
        "z": "0143542654182c64",
        "group": "c7879eafe39970e1",
        "order": 31,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "灯泡状态",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 940,
        "y": 340,
        "wires": []
    },
    {
        "id": "96c55c3ed3dcef72",
        "type": "function",
        "z": "0143542654182c64",
        "name": "",
        "func": "var a = \"\"\na = \"开关状态:\"+msg.payload+\" \\r \"+\"色温:\"+msg.data.attributes.light_color_temperature\nmsg.payload = {}\nmsg.payload = a\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 340,
        "wires": [
            [
                "a5517bbb0af4189a"
            ]
        ]
    },
    {
        "id": "2f4857a4b0c7b899",
        "type": "ui_text",
        "z": "0143542654182c64",
        "group": "c7879eafe39970e1",
        "order": 32,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "text",
        "format": "灯泡状态:{{msg.payload}}色温:{{msg.data.attributes.light_color_temperature}}",
        "layout": "row-left",
        "className": "",
        "x": 810,
        "y": 380,
        "wires": []
    },
    {
        "id": "35539877ad8863d6",
        "type": "function",
        "z": "0143542654182c64",
        "name": "",
        "func": "var d = new Date();\nif(d.getHours()>=22 || d.getHours()<=10){\n    if(msg.payload == \"on\"){\n        msg.topic = \"提醒\"\n        if(msg.data.entity_id == \"switch.212a01_cloud_147486\"){\n            id = \"电视\"\n        }else{\n            id = \"热水器\"\n        }\n        msg.payload = id + \"还没关闭\"\n        return msg;\n    }else{\n        //msg.payload=d.getHours()\n        return null\n    }\n}else{\n    return null\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 260,
        "wires": [
            [
                "8571391314c20527"
            ]
        ]
    },
    {
        "id": "8571391314c20527",
        "type": "e-mail",
        "z": "0143542654182c64",
        "server": "smtp.qq.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "1784162089@qq.com",
        "dname": "发邮件",
        "x": 970,
        "y": 260,
        "wires": []
    },
    {
        "id": "fe8f7bc3750d2135",
        "type": "debug",
        "z": "0143542654182c64",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 300,
        "wires": []
    },
    {
        "id": "b944fb4e914dc9c8",
        "type": "html",
        "z": "2d47d0348f062886",
        "name": "",
        "property": "payload",
        "outproperty": "payload",
        "tag": ".blog-posts h2 a",
        "ret": "attr",
        "as": "single",
        "x": 420,
        "y": 80,
        "wires": [
            [
                "9d3583c7caca0d38"
            ]
        ]
    },
    {
        "id": "a4191da274d39c2d",
        "type": "inject",
        "z": "2d47d0348f062886",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "21600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 80,
        "wires": [
            [
                "7a89fddc8e005960"
            ]
        ]
    },
    {
        "id": "1e83c289636e591e",
        "type": "debug",
        "z": "2d47d0348f062886",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 80,
        "wires": []
    },
    {
        "id": "7a89fddc8e005960",
        "type": "http request",
        "z": "2d47d0348f062886",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://www.cfmem.com/search/label/free",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 240,
        "y": 80,
        "wires": [
            [
                "b944fb4e914dc9c8"
            ]
        ]
    },
    {
        "id": "0cd4b5175782a796",
        "type": "html",
        "z": "2d47d0348f062886",
        "name": "",
        "property": "payload",
        "outproperty": "payload",
        "tag": "[role] div [face]",
        "ret": "html",
        "as": "single",
        "x": 420,
        "y": 180,
        "wires": [
            [
                "d3618b7dff124e43"
            ]
        ]
    },
    {
        "id": "c284e9c359a786e5",
        "type": "debug",
        "z": "2d47d0348f062886",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 180,
        "wires": []
    },
    {
        "id": "9ed2fd8641f07fef",
        "type": "http request",
        "z": "2d47d0348f062886",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 240,
        "y": 180,
        "wires": [
            [
                "0cd4b5175782a796"
            ]
        ]
    },
    {
        "id": "d3618b7dff124e43",
        "type": "function",
        "z": "2d47d0348f062886",
        "name": " 获取yaml的url地址",
        "func": "var a = msg.payload[1];\n//寻找字符\nvar n = a.indexOf(\"https\")\n//取出字符\nvar b = a.substr(n);\n//msg.payload = \"\";\n//msg.payload = b;\nmsg.url = b;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 180,
        "wires": [
            [
                "c284e9c359a786e5",
                "f70e8d02ea9e8f48"
            ]
        ]
    },
    {
        "id": "9d3583c7caca0d38",
        "type": "function",
        "z": "2d47d0348f062886",
        "name": "更新页面地址",
        "func": "msg.url = msg.payload[0].href;\nmsg.payload = \"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 80,
        "wires": [
            [
                "1e83c289636e591e",
                "9ed2fd8641f07fef"
            ]
        ]
    },
    {
        "id": "f70e8d02ea9e8f48",
        "type": "http request",
        "z": "2d47d0348f062886",
        "name": "http获取yaml数据",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 250,
        "y": 260,
        "wires": [
            [
                "4409fabb0e57f7d5"
            ]
        ]
    },
    {
        "id": "4ba894f18eae7272",
        "type": "debug",
        "z": "2d47d0348f062886",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 260,
        "wires": []
    },
    {
        "id": "4409fabb0e57f7d5",
        "type": "function",
        "z": "2d47d0348f062886",
        "name": "put 数据",
        "func": "var yaml = msg.payload\nmsg.headers = {};\nmsg.headers = {\n  'Authorization': 'Bearer glpat-bix9rWK6svSw7qEzB-tS'\n}\nmsg.url = \"https://gitlab.com/api/v4/projects/34199133/repository/files/data%2Fv2ray%2F123.yaml\"\nmsg.payload = {};\nmsg.payload={'branch': 'main',\n    'content': yaml,\n    'commit_message': 'update file'\n    \n};\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 260,
        "wires": [
            [
                "ce66ea369c0dfbdf"
            ]
        ]
    },
    {
        "id": "ce66ea369c0dfbdf",
        "type": "http request",
        "z": "2d47d0348f062886",
        "name": "update file",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 650,
        "y": 260,
        "wires": [
            [
                "4ba894f18eae7272"
            ]
        ]
    },
    {
        "id": "a70bce6f21ed1df8",
        "type": "function",
        "z": "2d47d0348f062886",
        "name": "判断变化",
        "func": "if(context.flow.get('justChanged')==msg.payload){\n    //msg.payload = 1;\n    return\n}\n\ncontext.flow.set('justChanged',msg.payload);\nvar yaml = msg.payload\nmsg.headers = {};\nmsg.headers = {\n  'Authorization': 'Bearer glpat-bix9rWK6svSw7qEzB-tS'\n}\nmsg.url = \"https://gitlab.com/api/v4/projects/34199133/repository/files/data%2Fv2ray%2F123.yaml\"\nmsg.payload = {};\nmsg.payload={'branch': 'main',\n    'content': yaml,\n    'commit_message': 'update file'\n    \n};\n\n//https://raw.githubusercontent.com/changfengoss/pub/main/data/2022_03_06/GHI1Ag.yaml\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 340,
        "wires": [
            [
                "4ba894f18eae7272"
            ]
        ]
    },
    {
        "id": "c290fefea23eca97",
        "type": "ui_template",
        "z": "2d47d0348f062886",
        "group": "3208b3404cb0f2e8",
        "name": "",
        "order": 30,
        "width": 0,
        "height": 0,
        "format": "<script>\nfunction  create() {\n    var input = document.getElementById('content');\n    var kd = document.getElementById('kd');\n    var filepath = document.getElementById('filepath');\n    var subtype = document.getElementById('subtype');\n    if (filepath.value===\"\"){\n        alert(\"本地节点文件路径不能为空！\");\n        return false;\n    }\n    kd.href = 'http://192.168.0.210:25500/sub?target='+subtype.value+'&url='+encodeURIComponent((filepath.value).replace(/\\n/g,\"|\"))+'&insert=false&config=https%3A%2F%2Fraw.githubusercontent.com%2FACL4SSR%2FACL4SSR%2Fmaster%2FClash%2Fconfig%2FACL4SSR_Online_Mini_MultiMode.ini&emoji=true&list=false&udp=false&tfo=false&scv=false&fdn=false&sort=false'; \n    kd.style = ''; \n    kd.innerText = 'http://192.168.0.210:25500/sub?target='+subtype.value+'&url='+encodeURIComponent((filepath.value).replace(/\\n/g,\"|\"))+'&insert=false&config=https%3A%2F%2Fraw.githubusercontent.com%2FACL4SSR%2FACL4SSR%2Fmaster%2FClash%2Fconfig%2FACL4SSR_Online_Mini_MultiMode.ini&emoji=true&list=false&udp=false&tfo=false&scv=false&fdn=false&sort=false'; \n    var value = 'http://192.168.0.210:25500/sub?target='+subtype.value+'&url='+encodeURIComponent((filepath.value).replace(/\\n/g,\"|\"))+'&insert=false'\n    //alert(value)\n    return value;\n    //send({payload:'value'})\n}\n</script>\n\n\n\n<script>\n    function action() {\n        var input = document.getElementById('content');\n        var filepath = document.getElementById('filepath');\n        var subtype = document.getElementById('subtype');\n        if (filepath.value===\"\"){\n        alert(\"本地节点文件路径不能为空！\");\n        return false;\n        }\n        var value = 'http://192.168.0.210:25500/sub?target='+subtype.value+'&url='+encodeURIComponent((filepath.value).replace(/\\n/g,\"|\"))+'&insert=false'\n        return value; \n        \n    }\n</script>\n<md-button ng-click=\"send({payload:action()})\">\n    Click me to send a hello world\n</md-button>\n\n\n\n<div id=\"pagewrap\">\n   1.节点文件路径：<br><textarea placeholder=\"支持单个节点、多个节点、直链和本地文件路径\" id=\"filepath\" cols=\"50\" rows=\"10\"></textarea><br>\n   2.将格式转换为：<select id=\"subtype\">\n  <option value=\"clash\">clash</option>\n  <option value=\"mixed\">Base64通用</option>\n</select><br>\n   <input type=\"button\" value=\"生成链接\" onclick=\"create();\"> <br> <br>\n   <a id=\"kd\" style=\"pointer-events: none;\">请先生成链接！</a><br><br>\n\n</div>\n\n\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 240,
        "y": 400,
        "wires": [
            [
                "a347121adb196bcc"
            ]
        ]
    },
    {
        "id": "a347121adb196bcc",
        "type": "debug",
        "z": "2d47d0348f062886",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 400,
        "wires": []
    },
    {
        "id": "f46ed1740693c99c",
        "type": "http request",
        "z": "2d47d0348f062886",
        "name": "http获取yaml数据",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 250,
        "y": 480,
        "wires": [
            [
                "06ac68aa7eb3b234"
            ]
        ]
    },
    {
        "id": "06ac68aa7eb3b234",
        "type": "function",
        "z": "2d47d0348f062886",
        "name": "put 数据",
        "func": "var yaml = msg.payload\nmsg.headers = {};\nmsg.headers = {\n  'Authorization': 'Bearer glpat-bix9rWK6svSw7qEzB-tS'\n}\nmsg.url = \"https://gitlab.com/api/v4/projects/34199133/repository/files/data%2Fv2ray%2F123.yaml\"\nmsg.payload = {};\nmsg.payload={'branch': 'main',\n    'content': yaml,\n    'commit_message': 'update file'\n    \n};\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 480,
        "wires": [
            [
                "1680f6187b56eb48"
            ]
        ]
    },
    {
        "id": "1680f6187b56eb48",
        "type": "http request",
        "z": "2d47d0348f062886",
        "name": "update file",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 650,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "17e7c93fb2cab104",
        "type": "inject",
        "z": "5646dda1b303b00d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 80,
        "wires": [
            [
                "7189ec697aaf600f"
            ]
        ]
    },
    {
        "id": "7189ec697aaf600f",
        "type": "exec",
        "z": "5646dda1b303b00d",
        "command": "ls -l /data/flows.json",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "文件时间戳",
        "x": 290,
        "y": 80,
        "wires": [
            [
                "1cfd2da6a38e2d4f"
            ],
            [],
            []
        ]
    },
    {
        "id": "1cfd2da6a38e2d4f",
        "type": "function",
        "z": "5646dda1b303b00d",
        "name": "判断变化",
        "func": "if(context.flow.get('justChanged')==msg.payload){\n    msg.payload = 1;\n    return msg;\n}\n\ncontext.flow.set('justChanged',msg.payload);\nmsg.payload = 2;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 480,
        "y": 80,
        "wires": [
            [
                "0af429e2eba91ca9"
            ]
        ]
    },
    {
        "id": "0af429e2eba91ca9",
        "type": "switch",
        "z": "5646dda1b303b00d",
        "name": "修改过",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 110,
        "y": 180,
        "wires": [
            [
                "b061ae01129df64a"
            ]
        ]
    },
    {
        "id": "b061ae01129df64a",
        "type": "exec",
        "z": "5646dda1b303b00d",
        "command": "cd /data;git add .;git commit -m 'auto commit';git push",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "提交git",
        "x": 270,
        "y": 180,
        "wires": [
            [],
            [
                "153d9ffa6d1cbe04"
            ],
            []
        ]
    },
    {
        "id": "153d9ffa6d1cbe04",
        "type": "debug",
        "z": "5646dda1b303b00d",
        "name": "记录日志",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 180,
        "wires": []
    },
    {
        "id": "fe13f538af391a71",
        "type": "function",
        "z": "f936bcfefd29972a",
        "name": "数据解密",
        "func": "/*\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.1 Copyright (C) Paul Johnston 1999 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\n\n/*\n * Configurable variables. You may need to tweak these to be compatible with\n * the server-side, but the defaults work in most cases.\n */\nvar hexcase = 0;  /* hex output format. 0 - lowercase; 1 - uppercase        */\nvar b64pad  = \"\"; /* base-64 pad character. \"=\" for strict RFC compliance   */\nvar chrsz   = 8;  /* bits per input character. 8 - ASCII; 16 - Unicode      */\n\n/*\n * These are the functions you'll usually want to call\n * They take string arguments and return either hex or base-64 encoded strings\n */\nfunction hex_md5(s){ return binl2hex(core_md5(str2binl(s), s.length * chrsz));}\nfunction b64_md5(s){ return binl2b64(core_md5(str2binl(s), s.length * chrsz));}\nfunction str_md5(s){ return binl2str(core_md5(str2binl(s), s.length * chrsz));}\nfunction hex_hmac_md5(key, data) { return binl2hex(core_hmac_md5(key, data)); }\nfunction b64_hmac_md5(key, data) { return binl2b64(core_hmac_md5(key, data)); }\nfunction str_hmac_md5(key, data) { return binl2str(core_hmac_md5(key, data)); }\n\n/*\n * Perform a simple self-test to see if the VM is working\n */\nfunction md5_vm_test()\n{\n  return hex_md5(\"abc\") == \"900150983cd24fb0d6963f7d28e17f72\";\n}\n\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length\n */\nfunction core_md5(x, len)\n{\n  /* append padding */\n  x[len >> 5] |= 0x80 << ((len) % 32);\n  x[(((len + 64) >>> 9) << 4) + 14] = len;\n\n  var a =  1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d =  271733878;\n\n  for(var i = 0; i < x.length; i += 16)\n  {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n\n    a = md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936);\n    d = md5_ff(d, a, b, c, x[i+ 1], 12, -389564586);\n    c = md5_ff(c, d, a, b, x[i+ 2], 17,  606105819);\n    b = md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330);\n    a = md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897);\n    d = md5_ff(d, a, b, c, x[i+ 5], 12,  1200080426);\n    c = md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341);\n    b = md5_ff(b, c, d, a, x[i+ 7], 22, -45705983);\n    a = md5_ff(a, b, c, d, x[i+ 8], 7 ,  1770035416);\n    d = md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417);\n    c = md5_ff(c, d, a, b, x[i+10], 17, -42063);\n    b = md5_ff(b, c, d, a, x[i+11], 22, -1990404162);\n    a = md5_ff(a, b, c, d, x[i+12], 7 ,  1804603682);\n    d = md5_ff(d, a, b, c, x[i+13], 12, -40341101);\n    c = md5_ff(c, d, a, b, x[i+14], 17, -1502002290);\n    b = md5_ff(b, c, d, a, x[i+15], 22,  1236535329);\n\n    a = md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510);\n    d = md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632);\n    c = md5_gg(c, d, a, b, x[i+11], 14,  643717713);\n    b = md5_gg(b, c, d, a, x[i+ 0], 20, -373897302);\n    a = md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691);\n    d = md5_gg(d, a, b, c, x[i+10], 9 ,  38016083);\n    c = md5_gg(c, d, a, b, x[i+15], 14, -660478335);\n    b = md5_gg(b, c, d, a, x[i+ 4], 20, -405537848);\n    a = md5_gg(a, b, c, d, x[i+ 9], 5 ,  568446438);\n    d = md5_gg(d, a, b, c, x[i+14], 9 , -1019803690);\n    c = md5_gg(c, d, a, b, x[i+ 3], 14, -187363961);\n    b = md5_gg(b, c, d, a, x[i+ 8], 20,  1163531501);\n    a = md5_gg(a, b, c, d, x[i+13], 5 , -1444681467);\n    d = md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784);\n    c = md5_gg(c, d, a, b, x[i+ 7], 14,  1735328473);\n    b = md5_gg(b, c, d, a, x[i+12], 20, -1926607734);\n\n    a = md5_hh(a, b, c, d, x[i+ 5], 4 , -378558);\n    d = md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463);\n    c = md5_hh(c, d, a, b, x[i+11], 16,  1839030562);\n    b = md5_hh(b, c, d, a, x[i+14], 23, -35309556);\n    a = md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060);\n    d = md5_hh(d, a, b, c, x[i+ 4], 11,  1272893353);\n    c = md5_hh(c, d, a, b, x[i+ 7], 16, -155497632);\n    b = md5_hh(b, c, d, a, x[i+10], 23, -1094730640);\n    a = md5_hh(a, b, c, d, x[i+13], 4 ,  681279174);\n    d = md5_hh(d, a, b, c, x[i+ 0], 11, -358537222);\n    c = md5_hh(c, d, a, b, x[i+ 3], 16, -722521979);\n    b = md5_hh(b, c, d, a, x[i+ 6], 23,  76029189);\n    a = md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487);\n    d = md5_hh(d, a, b, c, x[i+12], 11, -421815835);\n    c = md5_hh(c, d, a, b, x[i+15], 16,  530742520);\n    b = md5_hh(b, c, d, a, x[i+ 2], 23, -995338651);\n\n    a = md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844);\n    d = md5_ii(d, a, b, c, x[i+ 7], 10,  1126891415);\n    c = md5_ii(c, d, a, b, x[i+14], 15, -1416354905);\n    b = md5_ii(b, c, d, a, x[i+ 5], 21, -57434055);\n    a = md5_ii(a, b, c, d, x[i+12], 6 ,  1700485571);\n    d = md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606);\n    c = md5_ii(c, d, a, b, x[i+10], 15, -1051523);\n    b = md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799);\n    a = md5_ii(a, b, c, d, x[i+ 8], 6 ,  1873313359);\n    d = md5_ii(d, a, b, c, x[i+15], 10, -30611744);\n    c = md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380);\n    b = md5_ii(b, c, d, a, x[i+13], 21,  1309151649);\n    a = md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070);\n    d = md5_ii(d, a, b, c, x[i+11], 10, -1120210379);\n    c = md5_ii(c, d, a, b, x[i+ 2], 15,  718787259);\n    b = md5_ii(b, c, d, a, x[i+ 9], 21, -343485551);\n\n    a = safe_add(a, olda);\n    b = safe_add(b, oldb);\n    c = safe_add(c, oldc);\n    d = safe_add(d, oldd);\n  }\n  return Array(a, b, c, d);\n\n}\n\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\nfunction md5_cmn(q, a, b, x, s, t)\n{\n  return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s),b);\n}\nfunction md5_ff(a, b, c, d, x, s, t)\n{\n  return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);\n}\nfunction md5_gg(a, b, c, d, x, s, t)\n{\n  return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);\n}\nfunction md5_hh(a, b, c, d, x, s, t)\n{\n  return md5_cmn(b ^ c ^ d, a, b, x, s, t);\n}\nfunction md5_ii(a, b, c, d, x, s, t)\n{\n  return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);\n}\n\n/*\n * Calculate the HMAC-MD5, of a key and some data\n */\nfunction core_hmac_md5(key, data)\n{\n  var bkey = str2binl(key);\n  if(bkey.length > 16) bkey = core_md5(bkey, key.length * chrsz);\n\n  var ipad = Array(16), opad = Array(16);\n  for(var i = 0; i < 16; i++)\n  {\n    ipad[i] = bkey[i] ^ 0x36363636;\n    opad[i] = bkey[i] ^ 0x5C5C5C5C;\n  }\n\n  var hash = core_md5(ipad.concat(str2binl(data)), 512 + data.length * chrsz);\n  return core_md5(opad.concat(hash), 512 + 128);\n}\n\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\nfunction safe_add(x, y)\n{\n  var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return (msw << 16) | (lsw & 0xFFFF);\n}\n\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\nfunction bit_rol(num, cnt)\n{\n  return (num << cnt) | (num >>> (32 - cnt));\n}\n\n/*\n * Convert a string to an array of little-endian words\n * If chrsz is ASCII, characters >255 have their hi-byte silently ignored.\n */\nfunction str2binl(str)\n{\n  var bin = Array();\n  var mask = (1 << chrsz) - 1;\n  for(var i = 0; i < str.length * chrsz; i += chrsz)\n    bin[i>>5] |= (str.charCodeAt(i / chrsz) & mask) << (i%32);\n  return bin;\n}\n\n/*\n * Convert an array of little-endian words to a string\n */\nfunction binl2str(bin)\n{\n  var str = \"\";\n  var mask = (1 << chrsz) - 1;\n  for(var i = 0; i < bin.length * 32; i += chrsz)\n    str += String.fromCharCode((bin[i>>5] >>> (i % 32)) & mask);\n  return str;\n}\n\n/*\n * Convert an array of little-endian words to a hex string.\n */\nfunction binl2hex(binarray)\n{\n  var hex_tab = hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\n  var str = \"\";\n  for(var i = 0; i < binarray.length * 4; i++)\n  {\n    str += hex_tab.charAt((binarray[i>>2] >> ((i%4)*8+4)) & 0xF) +\n           hex_tab.charAt((binarray[i>>2] >> ((i%4)*8  )) & 0xF);\n  }\n  return str;\n}\n\n/*\n * Convert an array of little-endian words to a base-64 string\n */\nfunction binl2b64(binarray)\n{\n  var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n  var str = \"\";\n  for(var i = 0; i < binarray.length * 4; i += 3)\n  {\n    var triplet = (((binarray[i   >> 2] >> 8 * ( i   %4)) & 0xFF) << 16)\n                | (((binarray[i+1 >> 2] >> 8 * ((i+1)%4)) & 0xFF) << 8 )\n                |  ((binarray[i+2 >> 2] >> 8 * ((i+2)%4)) & 0xFF);\n    for(var j = 0; j < 4; j++)\n    {\n      if(i * 8 + j * 6 > binarray.length * 32) str += b64pad;\n      else str += tab.charAt((triplet >> 6*(3-j)) & 0x3F);\n    }\n  }\n  return str;\n}\n\n\n\n\n\n//获取CODE\nfunction abc(id1,id2) {\n    var _pr = id1;\n    var _pu = id2;\n    var _puArr = [];\n    var _newArr = [];\n    var _code = '';\n\n    for (var i = 0; i < _pu.length; i++) {\n        _puArr.push({'id': _pu[i], 'text': _pr[i]});//将新元素添加到数组的末尾，并返回新的长度。\n    }\n//对密钥重新进行排序\n    _newArr = _puArr.sort(compare(\"id\"));\n    for (var n = 0; n < _newArr.length; n++) {\n\n        _code += _newArr[n]['text'];\n    }\n    return _code\n}\n\nfunction compare(_0x209a13) {\n    var _0x2b0a5b = {\n        'hupwx': function(_0x28592c, _0x5c0aae) {\n            return _0x28592c - _0x5c0aae;\n        }\n    };\n    return function(_0x4490c6, _0x47bde8) {\n        var _0x11d139 = _0x4490c6[_0x209a13];\n        var _0x2b383f = _0x47bde8[_0x209a13];\n        return _0x2b0a5b['hupwx'](_0x11d139, _0x2b383f);\n    }\n        ;\n}\n\n//通过加密的URL和abc函数获取的CODE，进行AES解密\nfunction secret(enStr, code) {\n    code = hex_md5(code); //32位md5  //修改\n    var iv = code.substring(0, 16);  //取前16位\n    var key = code.substring(16);    //取后16位\n    //return CryptoJS['AES']['decrypt'](enStr, key, {\n    //    'iv': iv,\n    //    'padding': CryptoJS['pad']['Pkcs7']\n    //})['toString'](CryptoJS['enc']['Utf8']);\n    msg.iv = iv\n    msg.key = key\n    //msg.payload = enStr\n    return msg\n}\n\n\n//var id1 = \"STjYY8dGUW\"\n//var id2 = \"1023469758\"\n//var code1 = abc(id1,id2)\n//var enurl = \"Nz84DMyw9UfIWXLWhcnJtjho0ZbUnA+3Hsa+4ohVAPu4ClmQy7O/EgCfdfn0uP67GJnEqxxKPIUierd/0DEeacbYkvK2euLMISNBYplmWUqEiDMVx5D3+qPfbgImdTPjoYToH0l07kw/rtEHdCGJLR/TEcdm/wF6auf/hiPUxjUYesZL6mr39Z0B67z2TIReqKZWIAcN5jNDqg2wd3xvD3MJ7U4xtJr+A35j/SGTQrhOAh2WguPQrigc0zDsKyVBvhP45fP8ChxFt/wfjFPF/mKRiX737g+7s5anW6E+4D+BkhcJHtkrZxalsMwQPdP6u7IXj+o3SvB5MSCY1hiBdIKWcq62QoDk/x7H/9Z0K5Ec1OFDDuado/1qgRt+TW7YhR3M51F3hE+qurn9w+jm9n7HIAu4DPh3ptWclDzR8/5CEYWhBL4KmxPTJNWA1oPkpsUvwu3JV3V+OXxQVOs8tpeciqBL6Ffjmm9717uEGdVlBnVAvKBgJw3TaCEVIXve1npGE8jO02z32Zp1KG4Qxw==\"\n//msg.ab = secret(enurl, code1)\n\nvar id1 = msg.id1\nvar id2 = msg.id2\nvar code1 = abc(id1,id2)\n//msg.payload = \"\"\nvar enurl = msg.enurl\n//msg.code1=code1\nsecret(enurl, code1)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 100,
        "y": 340,
        "wires": [
            [
                "ac0ba2fd437ac44c"
            ]
        ]
    },
    {
        "id": "9468455c333c2f37",
        "type": "function",
        "z": "f936bcfefd29972a",
        "name": "解析地址",
        "func": "//url = \"https://v.qq.com/x/cover/m441e3rjq9kwpsc/h00426dqsjd.html\"\nurl = msg.hurl[msg.count]\nmsg.url = \"https://jx.parwix.com:4433/player/analysis.php?v=\"+url\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 240,
        "wires": [
            [
                "21af72c8b35f1a0d"
            ]
        ]
    },
    {
        "id": "21af72c8b35f1a0d",
        "type": "http request",
        "z": "f936bcfefd29972a",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "persist": false,
        "authType": "",
        "senderr": false,
        "x": 440,
        "y": 240,
        "wires": [
            [
                "5a0c7f92b542e8db"
            ]
        ]
    },
    {
        "id": "5a0c7f92b542e8db",
        "type": "function",
        "z": "f936bcfefd29972a",
        "name": "",
        "func": "var html = msg.payload\nvar id1 = /id=\"vod_(.*?)\"/.exec(html);\nvar id2 = /id=\"vod_([0-9]{10})\"/.exec(html);\nvar enurl = /\"url\": \"(.*?)\"/.exec(html);\nmsg.id1 = id1[1]\nmsg.id2=id2[1]\nmsg.enurl = enurl[1]\nmsg.payload = []\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 240,
        "wires": [
            [
                "fe13f538af391a71"
            ]
        ]
    },
    {
        "id": "2e679043967dd87b",
        "type": "function",
        "z": "f936bcfefd29972a",
        "name": "发送数据",
        "func": "\n//msg.payload='O7Hbb8RzGxfLcTZM0vRPOtUFWktElIzDbmnnNlosqN9h21mqvM0TEXiTwrjAwvzhEYUl9L7OWr9VFTYcIxwBheYS6xQEXlnt6bW2qndHrKIhIhAuApryK6ltIRXjnqaBYxJK9%2BRrBjROl4Uo8lUcJfzSThkJUr3WZ6wLLNXWeJhCz0IS7i1e35M55tvChQGu7NHNXDdtLifilsbWqAHjYs%2BJz4X0d0PfgIN5w3%2FAE83ymZ2j2TWBeKXLfBSmxUKfdqCDzXXNG8pcYuwX3rWmQwKvqiLk4ZrBH7LHFAMbrK5NWO%2BKAxErdWdos6skmpUBpKsmJQ%2FeZQCqD759b4iD167Scj9soaR2u5rUl6peslIHnl7lrFSA549WgywDq6b78S3LyU7IS5s%2Fsrzeom54iMKvLjHsscH0n%2Fr9nw7ryAfQ9TngtEb27%2FOt9l6G5SsL0HeUmtl5HmQaXgmLzqgb4ZlWPN7obuu3DothARVbXhkWNwzRa7SFBrC1pHzPPdQAK2mzIdSENugVlvaZkHNYlG7S%2FBMrjHFPGGMh7ASnPj93maVaOQf6%2Fxk540gD%2B1KV39uSCRE%2BlZwe3Ri%2BxQGyDkQJb5TKvUyTbuSQNqT1baw%3D'\nmsg.payload='data='+msg.payload+'&type=aes_decrypt&encode=Base64&key='+msg.key+'&digit=128&mode=CBC&pad=Pkcs5Padding&iv='+msg.iv\nmsg.headers = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n}\nmsg.url = \"\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 340,
        "wires": [
            [
                "615772126df71e14"
            ]
        ]
    },
    {
        "id": "615772126df71e14",
        "type": "http request",
        "z": "f936bcfefd29972a",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://www.mklab.cn/utils/handle",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 580,
        "y": 340,
        "wires": [
            [
                "88266a1091e85134"
            ]
        ]
    },
    {
        "id": "9057e80b4dfa1328",
        "type": "debug",
        "z": "f936bcfefd29972a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 340,
        "wires": []
    },
    {
        "id": "ac0ba2fd437ac44c",
        "type": "function",
        "z": "f936bcfefd29972a",
        "name": "编码",
        "func": "var enurl = msg.enurl\n\nvar a = enurl.replace(/=/g, \"%3D\")\nvar b = a.replace(/\\//g, \"%2F\")\nmsg.payload = b.replace(/\\+/g, \"%2B\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 340,
        "wires": [
            [
                "2e679043967dd87b"
            ]
        ]
    },
    {
        "id": "95c6912954269256",
        "type": "function",
        "z": "f936bcfefd29972a",
        "name": "",
        "func": "//msg.payload={\"url\":\"https://om.tc.qq.com/gzc_1000102_0b537aaaeaaawuahjsrlinrmb6gdal7aabsa.f10218.mp4?vkey=EA074FA79C1491CF3F4911110422CA19FCFF9528388E9D8536C3E4924D32FCBC947BB6E0D15ED4688774ADC8BD5E3984F10E59556D2BBAA83DA1CDBA4B9D98D6C51F6C76985A2E012849C54F272107B0D29019F1CE3A017683771536AEBD5C0B2E74F435FBD1C5A6D50D4C6D7C00AC6B5D04E3D1AD40E6C98179104A372B11F8CE695EF4D5D284C7&sdtfrom=v1080&type=mp4&platform=10201&br=117&fmt=hd&sp=0&guid=1F78117BB3DD94210EC924D61BBE1F21FD660D84\"}\n\nvar url = msg.payload.result\nvar name = (msg.count+1).toString()+\".mp4\"\nvar dir = \"/downloads/\"+msg.name1\nmsg.payload = {}\n\nmsg.payload = {\n    \"jsonrpc\":\"2.0\",\n    \"method\":\"aria2.addUri\",\n    \"id\":\"QXJpYU5nXzE2NDcwODAyMjFfMC4wNjE0NDQxMTQ5NzI0MzA1Mg==\",\n    \"params\":[\"token:P3TERX\",[url],{\n        \"out\": name,\n        \"dir\": dir\n    }]\n}\n\nmsg.url = \"http://192.168.0.210:6800/jsonrpc\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 420,
        "wires": [
            [
                "205b5538c57fad97"
            ]
        ]
    },
    {
        "id": "205b5538c57fad97",
        "type": "http request",
        "z": "f936bcfefd29972a",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 420,
        "y": 420,
        "wires": [
            [
                "48c85de211275e0b"
            ]
        ]
    },
    {
        "id": "50d14380133b26f1",
        "type": "inject",
        "z": "f936bcfefd29972a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 420,
        "wires": [
            [
                "95c6912954269256"
            ]
        ]
    },
    {
        "id": "48c85de211275e0b",
        "type": "debug",
        "z": "f936bcfefd29972a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 420,
        "wires": []
    },
    {
        "id": "88266a1091e85134",
        "type": "json",
        "z": "f936bcfefd29972a",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 730,
        "y": 340,
        "wires": [
            [
                "9057e80b4dfa1328",
                "95c6912954269256"
            ]
        ]
    },
    {
        "id": "e0837fb8765b5415",
        "type": "function",
        "z": "f936bcfefd29972a",
        "name": "合成地址1",
        "func": "//href=\"https://v.qq.com/x/cover/\"+msg.payload[1]+\"/m00253deqqo.html\"\nmsg.url = \"https://v.qq.com/x/cover/\"+msg.payload[1]+\"/\"+msg.payload[2]+\".html\"\nmsg.vid = msg.payload[1]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 110,
        "y": 160,
        "wires": [
            [
                "5f7cf4e1acd6761c"
            ]
        ]
    },
    {
        "id": "5f7cf4e1acd6761c",
        "type": "http request",
        "z": "f936bcfefd29972a",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "persist": false,
        "authType": "",
        "senderr": false,
        "x": 280,
        "y": 160,
        "wires": [
            [
                "e442c0011415cc9e"
            ]
        ]
    },
    {
        "id": "77f5e805c783dc4d",
        "type": "inject",
        "z": "f936bcfefd29972a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "斗罗大陆",
        "payloadType": "str",
        "x": 100,
        "y": 60,
        "wires": [
            [
                "37997b3009e518a0"
            ]
        ]
    },
    {
        "id": "e442c0011415cc9e",
        "type": "function",
        "z": "f936bcfefd29972a",
        "name": "匹配地址参数",
        "func": "var url = []\nvar reg = /\"F\":\\d,\"V\":\"(.*?)\"/g\n//var text = \"\";\nvar i;\nfor (i = 0; i < 410; i++) {\n    url[i] = reg.exec(msg.payload)\n    if(reg.lastIndex==0){\n        msg.payload=url\n        return msg;\n    }\n  //text += \"The number is \" + i + \"<br>\";\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 160,
        "wires": [
            [
                "09d303c90655af90"
            ]
        ]
    },
    {
        "id": "37997b3009e518a0",
        "type": "function",
        "z": "f936bcfefd29972a",
        "name": "搜索数据",
        "func": "url = \"https://v.qq.com/x/search/?q=\"+msg.payload+\"&stag=102&smartbox_ab=\"\nmsg.url = url\nmsg.name1 = msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 60,
        "wires": [
            [
                "7fad866da316b261"
            ]
        ]
    },
    {
        "id": "7fad866da316b261",
        "type": "http request",
        "z": "f936bcfefd29972a",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "persist": false,
        "authType": "",
        "senderr": false,
        "x": 440,
        "y": 60,
        "wires": [
            [
                "191ed70ca8b1975e"
            ]
        ]
    },
    {
        "id": "191ed70ca8b1975e",
        "type": "function",
        "z": "f936bcfefd29972a",
        "name": "正则匹配地址",
        "func": "var reg=/href=\"https:\\/\\/v.qq.com\\/x\\/cover\\/(.*?)\\/(.*?).html\"/\nret = reg.exec(msg.payload)\nmsg.payload = ret\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 60,
        "wires": [
            [
                "e0837fb8765b5415"
            ]
        ]
    },
    {
        "id": "09d303c90655af90",
        "type": "function",
        "z": "f936bcfefd29972a",
        "name": "hurl地址",
        "func": "//msg.payload=url\nvar n;\nvar hurl = []\nvar rsg = msg.payload\nvar a = (rsg.length + 1)/2\nfor (n = 0; n < (rsg.length - 1)/2; n++) {\n    hurl.push(\"https://v.qq.com/x/cover/\"+msg.vid+\"/\"+msg.payload[n][1]+\".html\")\n}\nmsg.hurl = hurl\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 160,
        "wires": [
            [
                "4480ecb71d21e59e"
            ]
        ]
    },
    {
        "id": "4480ecb71d21e59e",
        "type": "function",
        "z": "f936bcfefd29972a",
        "name": "计数",
        "func": "var count = context.get('count')||190;\ncount = count + 1\nmsg.count = count - 2\ncontext.set('count',count);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 160,
        "wires": [
            [
                "18c2e27f4462868d",
                "9468455c333c2f37"
            ]
        ]
    },
    {
        "id": "18c2e27f4462868d",
        "type": "debug",
        "z": "f936bcfefd29972a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 160,
        "wires": []
    },
    {
        "id": "8863ac637c0f61ef",
        "type": "inject",
        "z": "f936bcfefd29972a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 240,
        "wires": [
            [
                "9468455c333c2f37"
            ]
        ]
    },
    {
        "id": "b4a25ca4eefb9fea",
        "type": "function",
        "z": "e3562182c0530220",
        "name": "数据解密",
        "func": "const CryptoJS = global.get('CryptoJS')\nfunction Decrypt(word,key,iv) {\n    let encryptedHexStr = CryptoJS.enc.Base64.parse(word);\n    let srcs = CryptoJS.enc.Base64.stringify(encryptedHexStr);\n    let decrypt = CryptoJS.AES.decrypt(srcs, key, { iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 });\n    let decryptedStr = decrypt.toString(CryptoJS.enc.Utf8);\n    return decryptedStr.toString();\n}\n\n\n//获取CODE\nfunction abc(id1,id2) {\n    var _pr = id1;\n    var _pu = id2;\n    var _puArr = [];\n    var _newArr = [];\n    var _code = '';\n\n    for (var i = 0; i < _pu.length; i++) {\n        _puArr.push({'id': _pu[i], 'text': _pr[i]});//将新元素添加到数组的末尾，并返回新的长度。\n    }\n//对密钥重新进行排序\n    _newArr = _puArr.sort(compare(\"id\"));\n    for (var n = 0; n < _newArr.length; n++) {\n\n        _code += _newArr[n]['text'];\n    }\n    return _code\n}\n\nfunction compare(_0x209a13) {\n    var _0x2b0a5b = {\n        'hupwx': function(_0x28592c, _0x5c0aae) {\n            return _0x28592c - _0x5c0aae;\n        }\n    };\n    return function(_0x4490c6, _0x47bde8) {\n        var _0x11d139 = _0x4490c6[_0x209a13];\n        var _0x2b383f = _0x47bde8[_0x209a13];\n        return _0x2b0a5b['hupwx'](_0x11d139, _0x2b383f);\n    }\n        ;\n}\n\n//通过加密的URL和abc函数获取的CODE，进行AES解密\nfunction secret(enStr, code) {\n    code = CryptoJS.MD5(code).toString(); //32位md5  //修改\n    var iv1 = code.substring(0, 16);  //取前16位\n    var key1 = code.substring(16);    //取后16位\n\n    const key = CryptoJS.enc.Utf8.parse(key1);\n    const iv = CryptoJS.enc.Utf8.parse(iv1);\n    return Decrypt(enStr,key,iv)\n}\n\nvar code1 = abc(msg.id1,msg.id2)\nmsg.payload = secret(msg.enurl, code1)\nreturn msg\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 340,
        "wires": [
            [
                "46eaf9476dfd7dbe"
            ]
        ]
    },
    {
        "id": "8302236d8c86173e",
        "type": "function",
        "z": "e3562182c0530220",
        "name": "解析地址",
        "func": "url = msg.hurl[msg.count]\nmsg.url = \"https://jx.parwix.com:4433/player/analysis.php?v=\"+url\nmsg.headers = {\n  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.74 Safari/537.36 Edg/99.0.1150.46'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 240,
        "wires": [
            [
                "c92aa5711b81cf1b"
            ]
        ]
    },
    {
        "id": "c92aa5711b81cf1b",
        "type": "http request",
        "z": "e3562182c0530220",
        "name": "解析请求",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 440,
        "y": 240,
        "wires": [
            [
                "2f1a688c6bd2e55c"
            ]
        ]
    },
    {
        "id": "2f1a688c6bd2e55c",
        "type": "function",
        "z": "e3562182c0530220",
        "name": "",
        "func": "var html = msg.payload\nvar id1 = /id=\"vod_(.*?)\"/.exec(html);\nvar id2 = /id=\"vod_([0-9]{10})\"/.exec(html);\nvar enurl = /\"url\": \"(.*?)\"/.exec(html);\nmsg.id1 = id1[1]\nmsg.id2=id2[1]\nmsg.enurl = enurl[1]\nmsg.payload = []\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 240,
        "wires": [
            [
                "b4a25ca4eefb9fea",
                "fb8044923bd345ae"
            ]
        ]
    },
    {
        "id": "fb8044923bd345ae",
        "type": "debug",
        "z": "e3562182c0530220",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 340,
        "wires": []
    },
    {
        "id": "46eaf9476dfd7dbe",
        "type": "function",
        "z": "e3562182c0530220",
        "name": "",
        "func": "var url = msg.payload\nvar name = (msg.count+1).toString()+\".mp4\"\nvar dir = \"/downloads/\"+msg.name1\nmsg.payload = {}\n\nmsg.payload = {\n    \"jsonrpc\":\"2.0\",\n    \"method\":\"aria2.addUri\",\n    \"id\":\"QXJpYU5nXzE2NDcwODAyMjFfMC4wNjE0NDQxMTQ5NzI0MzA1Mg==\",\n    \"params\":[\"token:P3TERX\",[url],{\n        \"out\": name,\n        \"dir\": dir\n    }]\n}\nmsg.url = \"http://192.168.0.210:6800/jsonrpc\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 340,
        "wires": [
            [
                "9ef716d8da155c8d"
            ]
        ]
    },
    {
        "id": "9ef716d8da155c8d",
        "type": "http request",
        "z": "e3562182c0530220",
        "name": "下载请求",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 620,
        "y": 340,
        "wires": [
            [
                "fb8044923bd345ae"
            ]
        ]
    },
    {
        "id": "1f258e6059572f7e",
        "type": "http request",
        "z": "e3562182c0530220",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "persist": false,
        "authType": "",
        "senderr": false,
        "x": 280,
        "y": 160,
        "wires": [
            [
                "a2ed61e0b7c1379d"
            ]
        ]
    },
    {
        "id": "46f5720d0d3d5d6f",
        "type": "inject",
        "z": "e3562182c0530220",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "斗罗大陆",
        "payloadType": "str",
        "x": 100,
        "y": 60,
        "wires": [
            [
                "e8fa4eda9cf19f98"
            ]
        ]
    },
    {
        "id": "a2ed61e0b7c1379d",
        "type": "function",
        "z": "e3562182c0530220",
        "name": "匹配地址参数合成地址",
        "func": "var url = []\nvar reg = /\"F\":\\d,\"V\":\"(.*?)\"/g\nvar i;\nfor (i = 0; i < 410; i++) {\n    url[i] = reg.exec(msg.payload)\n    if(reg.lastIndex==0){\n        msg.payload=url\n    }\n}\n\nvar n;\nvar hurl = []\nvar rsg = msg.payload\nvar a = (rsg.length + 1)/2\nfor (n = 0; n < (rsg.length - 1)/2; n++) {\n    hurl.push(\"https://v.qq.com/x/cover/\"+msg.vid+\"/\"+msg.payload[n][1]+\".html\")\n}\nmsg.hurl = hurl\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 160,
        "wires": [
            [
                "60e931fcd9adacf2"
            ]
        ]
    },
    {
        "id": "e8fa4eda9cf19f98",
        "type": "function",
        "z": "e3562182c0530220",
        "name": "搜索数据",
        "func": "url = \"https://v.qq.com/x/search/?q=\"+msg.payload+\"&stag=102&smartbox_ab=\"\nmsg.url = url\nmsg.name1 = msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 60,
        "wires": [
            [
                "8d8212f5c71789fa"
            ]
        ]
    },
    {
        "id": "8d8212f5c71789fa",
        "type": "http request",
        "z": "e3562182c0530220",
        "name": "搜索请求",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 440,
        "y": 60,
        "wires": [
            [
                "a1e7bdc073415811"
            ]
        ]
    },
    {
        "id": "a1e7bdc073415811",
        "type": "function",
        "z": "e3562182c0530220",
        "name": "正则匹配地址",
        "func": "var reg=/href=\"https:\\/\\/v.qq.com\\/x\\/cover\\/(.*?)\\/(.*?).html\"/\nret = reg.exec(msg.payload)\n//msg.payload = ret\nmsg.url = \"https://v.qq.com/x/cover/\"+ret[1]+\"/\"+ret[2]+\".html\"\nmsg.vid = ret[1]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 60,
        "wires": [
            [
                "1f258e6059572f7e"
            ]
        ]
    },
    {
        "id": "60e931fcd9adacf2",
        "type": "function",
        "z": "e3562182c0530220",
        "name": "计数",
        "func": "var count = context.get('count')||150;\ncount = count + 1\nmsg.count = count - 2\ncontext.set('count',count);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 160,
        "wires": [
            [
                "8302236d8c86173e",
                "fb8044923bd345ae"
            ]
        ]
    }
]