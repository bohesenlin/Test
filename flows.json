[
    {
        "id": "f6f2187d.f17ca8",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "df04831a8742eac0",
        "type": "tab",
        "label": "流程 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a8c13c8811cc5927",
        "type": "tab",
        "label": "小爱tts",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0143542654182c64",
        "type": "tab",
        "label": "信息",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2d47d0348f062886",
        "type": "tab",
        "label": "节点订阅",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5646dda1b303b00d",
        "type": "tab",
        "label": "自动备份",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f936bcfefd29972a",
        "type": "tab",
        "label": "流程 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e3562182c0530220",
        "type": "tab",
        "label": "流程 3",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e7cf0672145a47bb",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c292e8482b433009",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 36,
                "sy": 36,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "c7879eafe39970e1",
        "type": "ui_group",
        "name": "ui",
        "tab": "e7cf0672145a47bb",
        "order": 1,
        "disp": true,
        "width": 30,
        "collapse": false,
        "className": ""
    },
    {
        "id": "a5e643a4b8a035cf",
        "type": "server",
        "name": "Home Assistant",
        "version": 2,
        "addon": false,
        "rejectUnauthorizedCerts": true,
        "ha_boolean": "y|yes|true|on|home|open",
        "connectionDelay": true,
        "cacheJson": true,
        "heartbeat": false,
        "heartbeatInterval": "30"
    },
    {
        "id": "6f14ecd03b27c329",
        "type": "ui_tab",
        "name": "语音消息",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "3208b3404cb0f2e8",
        "type": "ui_group",
        "name": "语音输入",
        "tab": "6f14ecd03b27c329",
        "order": 1,
        "disp": true,
        "width": 26,
        "collapse": false,
        "className": ""
    },
    {
        "id": "35a5328b0ac62956",
        "type": "ui_tab",
        "name": "视频下载",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "32dbb2ecc043e986",
        "type": "ui_group",
        "name": "视频下载",
        "tab": "35a5328b0ac62956",
        "order": 1,
        "disp": true,
        "width": 20,
        "collapse": false,
        "className": ""
    },
    {
        "id": "34f6e2d8079ec952",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "c7879eafe39970e1",
        "order": 2,
        "width": 20,
        "height": 1
    },
    {
        "id": "66d068c9793f4ec7",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "c7879eafe39970e1",
        "order": 4,
        "width": 5,
        "height": 1
    },
    {
        "id": "b6f809ca56cce8e7",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "c7879eafe39970e1",
        "order": 5,
        "width": 5,
        "height": 1
    },
    {
        "id": "113edf390fecb3f7",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "c7879eafe39970e1",
        "order": 6,
        "width": 5,
        "height": 1
    },
    {
        "id": "4587c15093847162",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "c7879eafe39970e1",
        "order": 7,
        "width": 5,
        "height": 1
    },
    {
        "id": "d290bcb198b419a4",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "c7879eafe39970e1",
        "order": 8,
        "width": 5,
        "height": 1
    },
    {
        "id": "555196732cd55e19",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "c7879eafe39970e1",
        "order": 9,
        "width": 20,
        "height": 1
    },
    {
        "id": "f363535d43f8234c",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "c7879eafe39970e1",
        "order": 10,
        "width": 20,
        "height": 1
    },
    {
        "id": "b7dae6c90a4e0326",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "c7879eafe39970e1",
        "order": 11,
        "width": 20,
        "height": 1
    },
    {
        "id": "3eb4720ee8199b8b",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "c7879eafe39970e1",
        "order": 13,
        "width": 8,
        "height": 1
    },
    {
        "id": "dcddde2bf7d64c8a",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "c7879eafe39970e1",
        "order": 14,
        "width": 30,
        "height": 1
    },
    {
        "id": "0a05698c7d2a16fb",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "c7879eafe39970e1",
        "order": 15,
        "width": 30,
        "height": 1
    },
    {
        "id": "4fb266f0577b2955",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "c7879eafe39970e1",
        "order": 16,
        "width": 30,
        "height": 1
    },
    {
        "id": "9c8d5f8b39579ed5",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "c7879eafe39970e1",
        "order": 18,
        "width": 8,
        "height": 1
    },
    {
        "id": "e7f802df5cca3062",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "c7879eafe39970e1",
        "order": 20,
        "width": 14,
        "height": 1
    },
    {
        "id": "533eb52e19f6dded",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "c7879eafe39970e1",
        "order": 21,
        "width": 14,
        "height": 1
    },
    {
        "id": "acc8496aaa455fd9",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "c7879eafe39970e1",
        "order": 22,
        "width": 14,
        "height": 1
    },
    {
        "id": "0c233fea78f4fef9",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "c7879eafe39970e1",
        "order": 23,
        "width": 14,
        "height": 1
    },
    {
        "id": "cc8661c69acc026b",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "c7879eafe39970e1",
        "order": 24,
        "width": 14,
        "height": 1
    },
    {
        "id": "9929f4da3f0476d2",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "c7879eafe39970e1",
        "order": 25,
        "width": 14,
        "height": 1
    },
    {
        "id": "1e2bfd5af7fd457d",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "c7879eafe39970e1",
        "order": 26,
        "width": 14,
        "height": 1
    },
    {
        "id": "51d2c95e55724095",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "c7879eafe39970e1",
        "order": 27,
        "width": 14,
        "height": 1
    },
    {
        "id": "4c8c785999ab393e",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "c7879eafe39970e1",
        "order": 28,
        "width": 14,
        "height": 1
    },
    {
        "id": "2dd6d03a186604e9",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "c7879eafe39970e1",
        "order": 29,
        "width": 30,
        "height": 1
    },
    {
        "id": "52745faa68f518b7",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "c7879eafe39970e1",
        "order": 30,
        "width": 30,
        "height": 1
    },
    {
        "id": "161cf419641c836a",
        "type": "ui_spacer",
        "z": "df04831a8742eac0",
        "name": "spacer",
        "group": "c7879eafe39970e1",
        "order": 31,
        "width": 30,
        "height": 1
    },
    {
        "id": "c0f6e391d1d803e4",
        "type": "ui_spacer",
        "z": "2d47d0348f062886",
        "name": "spacer",
        "group": "3208b3404cb0f2e8",
        "order": 3,
        "width": 4,
        "height": 1
    },
    {
        "id": "f21386f67a2ce31c",
        "type": "ui_spacer",
        "z": "2d47d0348f062886",
        "name": "spacer",
        "group": "3208b3404cb0f2e8",
        "order": 5,
        "width": 7,
        "height": 1
    },
    {
        "id": "ae2c025d1acc8a12",
        "type": "ui_spacer",
        "z": "2d47d0348f062886",
        "name": "spacer",
        "group": "3208b3404cb0f2e8",
        "order": 6,
        "width": 7,
        "height": 1
    },
    {
        "id": "f708b269de530086",
        "type": "ui_spacer",
        "z": "2d47d0348f062886",
        "name": "spacer",
        "group": "3208b3404cb0f2e8",
        "order": 7,
        "width": 7,
        "height": 1
    },
    {
        "id": "c977e01cdc06d491",
        "type": "ui_spacer",
        "z": "2d47d0348f062886",
        "name": "spacer",
        "group": "3208b3404cb0f2e8",
        "order": 8,
        "width": 7,
        "height": 1
    },
    {
        "id": "b93d43ba03485cdd",
        "type": "ui_spacer",
        "z": "2d47d0348f062886",
        "name": "spacer",
        "group": "3208b3404cb0f2e8",
        "order": 9,
        "width": 7,
        "height": 1
    },
    {
        "id": "da8bb83cb06618b3",
        "type": "ui_spacer",
        "z": "2d47d0348f062886",
        "name": "spacer",
        "group": "3208b3404cb0f2e8",
        "order": 10,
        "width": 7,
        "height": 1
    },
    {
        "id": "37ea1b5e8f9b7c0d",
        "type": "filebrowser",
        "repositoryType": "SMB",
        "share": "\\\\192.168.0.210\\nextcloud",
        "port": "445",
        "domain": "",
        "username": "share",
        "password": "sambashare",
        "workdir": "",
        "name": "Share",
        "sshKeyPath": "",
        "additionalLftpCommands": ""
    },
    {
        "id": "5b3a2dafd7890641",
        "type": "smb config",
        "name": "",
        "share": "\\\\192.168.0.210\\jellyfin",
        "domain": ""
    },
    {
        "id": "3cc11d24.ff01a2",
        "type": "comment",
        "z": "f6f2187d.f17ca8",
        "name": "WARNING: please check you have started this container with a volume that is mounted to /data\\n otherwise any flow changes are lost when you redeploy or upgrade the container\\n (e.g. upgrade to a more recent node-red docker image).\\n  If you are using named volumes you can ignore this warning.\\n Double click or see info side panel to learn how to start Node-RED in Docker to save your work",
        "info": "\nTo start docker with a bind mount volume (-v option), for example:\n\n```\ndocker run -it -p 1880:1880 -v /home/user/node_red_data:/data --name mynodered nodered/node-red\n```\n\nwhere `/home/user/node_red_data` is a directory on your host machine where you want to store your flows.\n\nIf you do not do this then you can experiment and redploy flows, but if you restart or upgrade the container the flows will be disconnected and lost. \n\nThey will still exist in a hidden data volume, which can be recovered using standard docker techniques, but that is much more complex than just starting with a named volume as described above.",
        "x": 350,
        "y": 80,
        "wires": []
    },
    {
        "id": "c0d10a18619bb4d1",
        "type": "ui_template",
        "z": "df04831a8742eac0",
        "group": "c7879eafe39970e1",
        "name": "网易云音乐",
        "order": 3,
        "width": 15,
        "height": 5,
        "format": "<!--<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=1894007406&auto=1&height=66\"></iframe>-->\n<!--https://sy-sycdn.kuwo.cn/0a5a93b6b3ac975cc29780d61d0cc40d/624690cd/resource/n1/84/19/2974502628.mp3-->\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=500 height=86 src=\"https://sy-sycdn.kuwo.cn/0a5a93b6b3ac975cc29780d61d0cc40d/624690cd/resource/n1/84/19/2974502628.mp3\"></iframe>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 310,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "109fbc1aa77f7f25",
        "type": "ui_template",
        "z": "df04831a8742eac0",
        "group": "c7879eafe39970e1",
        "name": "视频",
        "order": 1,
        "width": 10,
        "height": 9,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 570,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "81754fd5eee7ac6e",
        "type": "inject",
        "z": "df04831a8742eac0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"uid\":513305949}",
        "payloadType": "json",
        "x": 170,
        "y": 180,
        "wires": [
            [
                "dd93ab1a3f4a0cb7"
            ]
        ]
    },
    {
        "id": "dd93ab1a3f4a0cb7",
        "type": "http request",
        "z": "df04831a8742eac0",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://api.bilibili.com/x/relation/stat?vmid=513305949&jsonp=jsonp",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 360,
        "y": 180,
        "wires": [
            [
                "ba53d6aebd8b6ed5",
                "0fc79b4f9955b139",
                "71642892bdbab4a8",
                "b039aeaece4a1572"
            ]
        ]
    },
    {
        "id": "ba53d6aebd8b6ed5",
        "type": "ui_text",
        "z": "df04831a8742eac0",
        "group": "c7879eafe39970e1",
        "order": 17,
        "width": 22,
        "height": 1,
        "name": "",
        "label": "粉丝数",
        "format": "{{msg.payload.data.follower}}",
        "layout": "row-spread",
        "className": "",
        "x": 530,
        "y": 240,
        "wires": []
    },
    {
        "id": "a6b7a5862e2fdd0a",
        "type": "ui_chart",
        "z": "df04831a8742eac0",
        "name": "",
        "group": "c7879eafe39970e1",
        "order": 19,
        "width": 16,
        "height": 9,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 750,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "0fc79b4f9955b139",
        "type": "change",
        "z": "df04831a8742eac0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "follower",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "msg.payload.data.follower",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 120,
        "wires": [
            [
                "a6b7a5862e2fdd0a"
            ]
        ]
    },
    {
        "id": "71642892bdbab4a8",
        "type": "switch",
        "z": "df04831a8742eac0",
        "name": "",
        "property": "payload.data.follower",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "762450",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 530,
        "y": 180,
        "wires": [
            [
                "5ab480824c920fab"
            ]
        ]
    },
    {
        "id": "5ab480824c920fab",
        "type": "change",
        "z": "df04831a8742eac0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "粉丝数大于762450",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 180,
        "wires": [
            [
                "259bf8db6345e7bf"
            ]
        ]
    },
    {
        "id": "259bf8db6345e7bf",
        "type": "ui_audio",
        "z": "df04831a8742eac0",
        "d": true,
        "name": "",
        "group": "c7879eafe39970e1",
        "voice": "",
        "always": "",
        "x": 940,
        "y": 180,
        "wires": []
    },
    {
        "id": "e99c6c5e658c2273",
        "type": "ha-entity",
        "z": "df04831a8742eac0",
        "name": "小说",
        "server": "a5e643a4b8a035cf",
        "version": 2,
        "debugenabled": false,
        "outputs": 1,
        "entityType": "sensor",
        "config": [
            {
                "property": "name",
                "value": "小说"
            },
            {
                "property": "device_class",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            },
            {
                "property": "unit_of_measurement",
                "value": ""
            },
            {
                "property": "state_class",
                "value": ""
            },
            {
                "property": "last_reset",
                "value": ""
            }
        ],
        "state": "payload",
        "stateType": "msg",
        "attributes": [],
        "resend": true,
        "outputLocation": "payload",
        "outputLocationType": "none",
        "inputOverride": "allow",
        "outputOnStateChange": false,
        "outputPayload": "",
        "outputPayloadType": "str",
        "x": 850,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "11bffdca9f45d452",
        "type": "inject",
        "z": "df04831a8742eac0",
        "name": "小说更新",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 440,
        "wires": [
            [
                "34abacb74a4ff1cd"
            ]
        ]
    },
    {
        "id": "34abacb74a4ff1cd",
        "type": "http request",
        "z": "df04831a8742eac0",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://book.qidian.com/info/1027368101/",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 320,
        "y": 440,
        "wires": [
            [
                "b52fcb31a58e90f7"
            ]
        ]
    },
    {
        "id": "e397dd2d51fc3342",
        "type": "html",
        "z": "df04831a8742eac0",
        "name": "",
        "property": "payload",
        "outproperty": "payload",
        "tag": ".update .detail a",
        "ret": "text",
        "as": "single",
        "x": 740,
        "y": 440,
        "wires": [
            [
                "7eaed87968638b08",
                "dcb6cec1d1afb4fd"
            ]
        ]
    },
    {
        "id": "4eb9dbc293017cbf",
        "type": "ui_text",
        "z": "df04831a8742eac0",
        "group": "c7879eafe39970e1",
        "order": 12,
        "width": 22,
        "height": 1,
        "name": "",
        "label": "最新章节",
        "format": "《万相之王》{{msg.title}} 更新时间：{{msg.payload[0]}}",
        "layout": "row-left",
        "className": "",
        "x": 720,
        "y": 520,
        "wires": []
    },
    {
        "id": "0fce05d6f7e03c0f",
        "type": "html",
        "z": "df04831a8742eac0",
        "name": "",
        "property": "payload",
        "outproperty": "payload",
        "tag": ".detail .time",
        "ret": "text",
        "as": "single",
        "x": 550,
        "y": 520,
        "wires": [
            [
                "4eb9dbc293017cbf",
                "cec39284c31b6390"
            ]
        ]
    },
    {
        "id": "7eaed87968638b08",
        "type": "function",
        "z": "df04831a8742eac0",
        "name": "",
        "func": "var count = context.get('count')||\"\";\nif(msg.payload[0] == count||typeof msg.payload[0] == \"undefined\"){\n    return null\n}else{\n    count = msg.payload[0]\n    msg.topic = \"刚刚更新了小说\"\n    msg.payload = \"\"\n    msg.payload = \"《万相之王》：\"+count\n    context.set('count',count);\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "636a5a7274fea306",
        "type": "e-mail",
        "z": "df04831a8742eac0",
        "server": "smtp.qq.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "1784162089@qq.com",
        "dname": "发邮件",
        "x": 1230,
        "y": 520,
        "wires": []
    },
    {
        "id": "491160702d33bf50",
        "type": "http request",
        "z": "df04831a8742eac0",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://api.bilibili.com/x/space/arc/search?mid=513305949&ps=30&tid=0&pn=1&keyword=&order=pubdate&jsonp=jsonp",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 240,
        "y": 980,
        "wires": [
            [
                "fd69d6b6805bfbc1",
                "abb785b16890a2e2",
                "f09686b1b9084c7d",
                "ad5665b64c256a15",
                "26d6e432615b49bb",
                "c049d16d5fd3025d",
                "3b7b4af9c0380abe"
            ]
        ]
    },
    {
        "id": "fd69d6b6805bfbc1",
        "type": "ui_text",
        "z": "df04831a8742eac0",
        "group": "3208b3404cb0f2e8",
        "order": 11,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "播放量",
        "format": "{{msg.payload.data.list.vlist[0].play}}",
        "layout": "row-spread",
        "className": "",
        "x": 410,
        "y": 920,
        "wires": []
    },
    {
        "id": "cd81b6937b019a6f",
        "type": "inject",
        "z": "df04831a8742eac0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 980,
        "wires": [
            [
                "491160702d33bf50"
            ]
        ]
    },
    {
        "id": "abb785b16890a2e2",
        "type": "debug",
        "z": "df04831a8742eac0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 980,
        "wires": []
    },
    {
        "id": "b039aeaece4a1572",
        "type": "debug",
        "z": "df04831a8742eac0",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 300,
        "wires": []
    },
    {
        "id": "f09686b1b9084c7d",
        "type": "ui_text",
        "z": "df04831a8742eac0",
        "group": "3208b3404cb0f2e8",
        "order": 12,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "描述",
        "format": "{{msg.payload.data.list.vlist[0].description}}",
        "layout": "row-spread",
        "className": "",
        "x": 410,
        "y": 1040,
        "wires": []
    },
    {
        "id": "ad5665b64c256a15",
        "type": "ui_text",
        "z": "df04831a8742eac0",
        "group": "3208b3404cb0f2e8",
        "order": 13,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "标题",
        "format": "{{msg.payload.data.list.vlist[0].title}}",
        "layout": "row-spread",
        "className": "",
        "x": 410,
        "y": 1100,
        "wires": []
    },
    {
        "id": "26d6e432615b49bb",
        "type": "ui_text",
        "z": "df04831a8742eac0",
        "group": "3208b3404cb0f2e8",
        "order": 17,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "弹幕",
        "format": "{{msg.payload.data.list.vlist[0].video_review}}",
        "layout": "row-spread",
        "className": "",
        "x": 410,
        "y": 1160,
        "wires": []
    },
    {
        "id": "c049d16d5fd3025d",
        "type": "ui_text",
        "z": "df04831a8742eac0",
        "group": "3208b3404cb0f2e8",
        "order": 19,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "发布时间",
        "format": "{{msg.payload.data.list.vlist[0].created}}",
        "layout": "row-spread",
        "className": "",
        "x": 420,
        "y": 1220,
        "wires": []
    },
    {
        "id": "d758c7693aa4f2f3",
        "type": "http request",
        "z": "df04831a8742eac0",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://api.bilibili.com/x/space/arc/search?mid=513305949&ps=30&tid=0&pn=1&keyword=&order=pubdate&jsonp=jsonp",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 240,
        "y": 1400,
        "wires": [
            [
                "e03249819502f0eb",
                "54fc9d18e04ea1f7",
                "1f5671749ed7a78c",
                "349c6d598fd41cc4",
                "a9988113e9cc992c",
                "0da1b951de461264"
            ]
        ]
    },
    {
        "id": "e03249819502f0eb",
        "type": "ui_text",
        "z": "df04831a8742eac0",
        "group": "3208b3404cb0f2e8",
        "order": 14,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "播放量",
        "format": "{{msg.payload.data.list.vlist[0].play}}",
        "layout": "row-spread",
        "className": "",
        "x": 410,
        "y": 1340,
        "wires": []
    },
    {
        "id": "1994e9cdde80b71e",
        "type": "inject",
        "z": "df04831a8742eac0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 1400,
        "wires": [
            [
                "d758c7693aa4f2f3"
            ]
        ]
    },
    {
        "id": "54fc9d18e04ea1f7",
        "type": "debug",
        "z": "df04831a8742eac0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 1400,
        "wires": []
    },
    {
        "id": "1f5671749ed7a78c",
        "type": "ui_text",
        "z": "df04831a8742eac0",
        "group": "3208b3404cb0f2e8",
        "order": 15,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "描述",
        "format": "{{msg.payload.data.list.vlist[0].description}}",
        "layout": "row-spread",
        "className": "",
        "x": 410,
        "y": 1460,
        "wires": []
    },
    {
        "id": "349c6d598fd41cc4",
        "type": "ui_text",
        "z": "df04831a8742eac0",
        "group": "3208b3404cb0f2e8",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "标题",
        "format": "{{msg.payload.data.list.vlist[0].title}}",
        "layout": "row-spread",
        "className": "",
        "x": 410,
        "y": 1520,
        "wires": []
    },
    {
        "id": "a9988113e9cc992c",
        "type": "ui_text",
        "z": "df04831a8742eac0",
        "group": "3208b3404cb0f2e8",
        "order": 18,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "弹幕",
        "format": "{{msg.payload.data.list.vlist[0].video_review}}",
        "layout": "row-spread",
        "className": "",
        "x": 410,
        "y": 1580,
        "wires": []
    },
    {
        "id": "0da1b951de461264",
        "type": "ui_text",
        "z": "df04831a8742eac0",
        "group": "3208b3404cb0f2e8",
        "order": 20,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "发布时间",
        "format": "{{msg.payload.data.list.vlist[0].created}}",
        "layout": "row-spread",
        "className": "",
        "x": 420,
        "y": 1640,
        "wires": []
    },
    {
        "id": "f87cfff4869a17f9",
        "type": "http request",
        "z": "df04831a8742eac0",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 420,
        "y": 1800,
        "wires": [
            [
                "05174b61cf555fb6"
            ]
        ]
    },
    {
        "id": "fcd9e04e6d4c4ca0",
        "type": "inject",
        "z": "df04831a8742eac0",
        "name": "小说更新",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 110,
        "y": 1920,
        "wires": [
            [
                "01b0bc6b977cadcd",
                "e83ed39fc9ff1f2d"
            ]
        ]
    },
    {
        "id": "2ff3955845e120b6",
        "type": "html",
        "z": "df04831a8742eac0",
        "name": "",
        "property": "payload",
        "outproperty": "payload",
        "tag": "#content",
        "ret": "text",
        "as": "single",
        "x": 280,
        "y": 1880,
        "wires": [
            [
                "8a51300b5a0e1d73"
            ]
        ]
    },
    {
        "id": "8a51300b5a0e1d73",
        "type": "function",
        "z": "df04831a8742eac0",
        "name": "",
        "func": "//var str = msg.payload.toString()\n//str = str.replace(/(^\\s*)/,\"\")\n//ret = str.replace(/\\s{2}/g, \"\\n    \")\n//msg.payload = msg.topic + \"\\n\" + \"    \" + ret\n\nvar count = context.get('count')||'';\nif(msg.time == count||typeof msg.time == \"undefined\"){\n    return null\n}else{\n    count = msg.time\n    context.set('count',count);\n    msg.payload = msg.topic + msg.payload\n    msg.topic = '小说更新(《万相之王》)' + '(' + msg.time + ')'\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 1880,
        "wires": [
            [
                "0630b1abbd3a5e68"
            ]
        ]
    },
    {
        "id": "01b0bc6b977cadcd",
        "type": "function",
        "z": "df04831a8742eac0",
        "name": "",
        "func": "msg.url = 'https://www.biqudu.net/13_13233/'\nmsg.headers = {\n  //'Content-Type': 'application/x-www-form-urlencoded'\n  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.74 Safari/537.36 Edg/99.0.1150.46'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 1800,
        "wires": [
            [
                "f87cfff4869a17f9"
            ]
        ]
    },
    {
        "id": "05174b61cf555fb6",
        "type": "function",
        "z": "df04831a8742eac0",
        "name": "",
        "func": "reg = /<p>最后更新：(.*?)<\\/p>/\nmsg.time = reg.exec(msg.payload)[1]\nreg = /<dd> <a style=\"\"  href=\"(.*?)\">(.*?)<\\/a><\\/dd>/\nret = reg.exec(msg.payload)\nmsg.url = 'https://www.biqudu.net'+ret[1]\nmsg.headers = {\n  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.74 Safari/537.36 Edg/99.0.1150.46'\n}\nmsg.topic = ret[2]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1800,
        "wires": [
            [
                "fe9ea89af088171e"
            ]
        ]
    },
    {
        "id": "fe9ea89af088171e",
        "type": "http request",
        "z": "df04831a8742eac0",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 720,
        "y": 1800,
        "wires": [
            [
                "2ff3955845e120b6"
            ]
        ]
    },
    {
        "id": "e83ed39fc9ff1f2d",
        "type": "function",
        "z": "df04831a8742eac0",
        "name": "",
        "func": "msg.url = 'https://www.bige3.com/book/627/'\nmsg.headers = {\n  //'Content-Type': 'application/x-www-form-urlencoded'\n  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.74 Safari/537.36 Edg/99.0.1150.46'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 1980,
        "wires": [
            [
                "5dd89cb717802e77"
            ]
        ]
    },
    {
        "id": "5aae1a80f39547f2",
        "type": "function",
        "z": "df04831a8742eac0",
        "name": "",
        "func": "reg = /<span class=\"last\">更新：(.*?)<\\/span>/\nmsg.time = reg.exec(msg.payload)[1]\nreg = /<a href=\"\\/book\\/(.*?)\">(.*?)<\\/a>/g\nret = reg.exec(msg.payload)\nmsg.url = 'https://www.bige3.com/book/' + ret[1]\nmsg.title = ret[2]\nmsg.headers = {\n  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.74 Safari/537.36 Edg/99.0.1150.46'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1980,
        "wires": [
            [
                "1c7d73d8e74cf1f8"
            ]
        ]
    },
    {
        "id": "5dd89cb717802e77",
        "type": "http request",
        "z": "df04831a8742eac0",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "persist": false,
        "authType": "",
        "senderr": false,
        "x": 420,
        "y": 1980,
        "wires": [
            [
                "5aae1a80f39547f2"
            ]
        ]
    },
    {
        "id": "1c7d73d8e74cf1f8",
        "type": "http request",
        "z": "df04831a8742eac0",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "persist": false,
        "authType": "",
        "senderr": false,
        "x": 720,
        "y": 1980,
        "wires": [
            [
                "26b756b404c74900"
            ]
        ]
    },
    {
        "id": "26b756b404c74900",
        "type": "html",
        "z": "df04831a8742eac0",
        "name": "",
        "property": "payload",
        "outproperty": "payload",
        "tag": "#chaptercontent",
        "ret": "text",
        "as": "single",
        "x": 300,
        "y": 2060,
        "wires": [
            [
                "3437c517c028d6df"
            ]
        ]
    },
    {
        "id": "3437c517c028d6df",
        "type": "function",
        "z": "df04831a8742eac0",
        "name": "",
        "func": "var count = context.get('count')||'';\nif(msg.time == count||typeof msg.time == \"undefined\"){\n    return null\n}else{\n    count = msg.time\n    context.set('count',count);\n    msg.payload = msg.title + msg.payload[0]\n    msg.topic = '小说更新(《天唐锦绣》)' + '(' + msg.time + ')'\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 2060,
        "wires": [
            [
                "0630b1abbd3a5e68"
            ]
        ]
    },
    {
        "id": "b52fcb31a58e90f7",
        "type": "change",
        "z": "df04831a8742eac0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "html_data",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 440,
        "wires": [
            [
                "e397dd2d51fc3342"
            ]
        ]
    },
    {
        "id": "dcb6cec1d1afb4fd",
        "type": "change",
        "z": "df04831a8742eac0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "title",
                "pt": "msg",
                "to": "payload[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "html_data",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 520,
        "wires": [
            [
                "0fce05d6f7e03c0f"
            ]
        ]
    },
    {
        "id": "7bcc9e0bad949cea",
        "type": "link in",
        "z": "df04831a8742eac0",
        "name": "发邮件",
        "links": [
            "6079cbc048beab4d",
            "0630b1abbd3a5e68",
            "0badc744f1b956c9"
        ],
        "x": 1125,
        "y": 520,
        "wires": [
            [
                "636a5a7274fea306"
            ]
        ]
    },
    {
        "id": "0630b1abbd3a5e68",
        "type": "link out",
        "z": "df04831a8742eac0",
        "name": "",
        "mode": "link",
        "links": [
            "7bcc9e0bad949cea"
        ],
        "x": 575,
        "y": 1920,
        "wires": []
    },
    {
        "id": "2e128cac9a212142",
        "type": "e-mail",
        "z": "df04831a8742eac0",
        "server": "smtp.qq.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "2720699551@qq.com",
        "dname": "发邮件1",
        "x": 1240,
        "y": 600,
        "wires": []
    },
    {
        "id": "183fb1400752ce18",
        "type": "link in",
        "z": "df04831a8742eac0",
        "name": "发邮件1",
        "links": [],
        "x": 1125,
        "y": 600,
        "wires": [
            [
                "2e128cac9a212142"
            ]
        ]
    },
    {
        "id": "3b7b4af9c0380abe",
        "type": "function",
        "z": "df04831a8742eac0",
        "name": "",
        "func": "url=\"//player.bilibili.com/player.html?aid=\"+msg.payload.data.list.vlist[0].aid+\"&bvid=BV14r4y1W7ar&cid=515423527&page=1\"\nmsg.payload = '<iframe src='+url+' scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>'\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 860,
        "wires": [
            [
                "abb785b16890a2e2",
                "109fbc1aa77f7f25"
            ]
        ]
    },
    {
        "id": "b88b0a0c39b12f29",
        "type": "http in",
        "z": "df04831a8742eac0",
        "name": "",
        "url": "hello",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 660,
        "wires": [
            [
                "cbcacfccb749d089",
                "19296caed6c2ca46"
            ]
        ]
    },
    {
        "id": "cbcacfccb749d089",
        "type": "template",
        "z": "df04831a8742eac0",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<html>\n    <head></head>\n    <body>\n        <h1>Hello World!</h1>\n    </body>\n</html>",
        "output": "str",
        "x": 330,
        "y": 660,
        "wires": [
            [
                "19296caed6c2ca46",
                "e58866d4cf17c85c"
            ]
        ]
    },
    {
        "id": "19296caed6c2ca46",
        "type": "debug",
        "z": "df04831a8742eac0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 720,
        "wires": []
    },
    {
        "id": "7c23d194dfc4eb65",
        "type": "http request",
        "z": "df04831a8742eac0",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.0.210:1880/hello",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 320,
        "y": 720,
        "wires": [
            [
                "19296caed6c2ca46"
            ]
        ]
    },
    {
        "id": "6c4f57521bc8abf4",
        "type": "inject",
        "z": "df04831a8742eac0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 720,
        "wires": [
            [
                "7c23d194dfc4eb65"
            ]
        ]
    },
    {
        "id": "e58866d4cf17c85c",
        "type": "http response",
        "z": "df04831a8742eac0",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 470,
        "y": 660,
        "wires": []
    },
    {
        "id": "cec39284c31b6390",
        "type": "function",
        "z": "df04831a8742eac0",
        "name": "",
        "func": "attributes = msg.payload\nmsg.payload={\n    'state': msg.title,\n    'attributes': attributes\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 580,
        "wires": [
            [
                "e99c6c5e658c2273"
            ]
        ]
    },
    {
        "id": "118caed2de8e26ca",
        "type": "http in",
        "z": "df04831a8742eac0",
        "name": "",
        "url": "hello1",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 630,
        "y": 760,
        "wires": [
            [
                "e9152c023b3cdb3f"
            ]
        ]
    },
    {
        "id": "e9152c023b3cdb3f",
        "type": "template",
        "z": "df04831a8742eac0",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\">\n<html>\n\n\t<head>\n\t\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n\t\t<title>添加删除记录练习</title>\n\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"ex_2_style/css.css\" />\n\t\t<script type=\"text/javascript\">\n\t\t\n\t\t\t/*\n\t\t\t * 删除tr的响应函数\n\t\t\t */\n\t\t\tfunction delA() {\n\n\t\t\t\t//点击超链接以后需要删除超链接所在的那行\n\t\t\t\t//这里我们点击那个超链接this就是谁\n\t\t\t\t//获取当前tr\n\t\t\t\tvar tr = this.parentNode.parentNode;\n\n\t\t\t\t//获取要删除的员工的名字\n\t\t\t\t//var name = tr.getElementsByTagName(\"td\")[0].innerHTML;\n\t\t\t\tvar name = tr.children[0].innerHTML;\n\n\t\t\t\t//删除之前弹出一个提示框\n\t\t\t\t/*\n\t\t\t\t * confirm()用于弹出一个带有确认和取消按钮的提示框\n\t\t\t\t * \t需要一个字符串作为参数，该字符串将会作为提示文字显示出来\n\t\t\t\t * 如果用户点击确认则会返回true，如果点击取消则返回false\n\t\t\t\t */\n\t\t\t\tvar flag = confirm(\"确认删除\" + name + \"吗?\");\n\n\t\t\t\t//如果用户点击确认\n\t\t\t\tif(flag) {\n\t\t\t\t\t//删除tr\n\t\t\t\t\ttr.parentNode.removeChild(tr);\n\t\t\t\t}\n\n\t\t\t\t/*\n\t\t\t\t * 点击超链接以后，超链接会跳转页面，这个是超链接的默认行为，\n\t\t\t\t * \t但是此时我们不希望出现默认行为，可以通过在响应函数的最后return false来取消默认行为\n\t\t\t\t */\n\t\t\t\treturn false;\n\t\t\t};\n\n\t\t\twindow.onload = function() {\n\n\t\t\t\t/*\n\t\t\t\t * 点击超链接以后，删除一个员工的信息\n\t\t\t\t */\n\n\t\t\t\t//获取所有额超链接\n\t\t\t\tvar allA = document.getElementsByTagName(\"a\");\n\n\t\t\t\t//为每个超链接都绑定一个单击响应函数\n\t\t\t\tfor(var i = 0; i < allA.length; i++) {\n\t\t\t\t\tallA[i].onclick = delA;\n\t\t\t\t}\n\n\t\t\t\t/*\n\t\t\t\t * 添加员工的功能\n\t\t\t\t * \t- 点击按钮以后，将员工的信息添加到表格中\n\t\t\t\t */\n\n\t\t\t\t//为提交按钮绑定一个单击响应函数\n\t\t\t\tvar addEmpButton = document.getElementById(\"addEmpButton\");\n\t\t\t\taddEmpButton.onclick = function() {\n\n\t\t\t\t\t//获取用户添加的员工信息\n\t\t\t\t\t//获取员工的名字\n\t\t\t\t\tvar name = document.getElementById(\"empName\").value;\n\t\t\t\t\t//获取员工的email和salary\n\t\t\t\t\tvar email = document.getElementById(\"email\").value;\n\t\t\t\t\tvar salary = document.getElementById(\"salary\").value;\n\n\t\t\t\t\t//alert(name+\",\"+email+\",\"+salary);\n\t\t\t\t\t/*\n\t\t\t\t\t *  <tr>\n\t\t\t\t\t\t\t<td>Tom</td>\n\t\t\t\t\t\t\t<td>tom@tom.com</td>\n\t\t\t\t\t\t\t<td>5000</td>\n\t\t\t\t\t\t\t<td><a href=\"javascript:;\">Delete</a></td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t需要将获取到的信息保存到tr中\n\t\t\t\t\t */\n\n\t\t\t\t\t//创建一个tr\n\t\t\t\t\tvar tr = document.createElement(\"tr\");\n\n\t\t\t\t\t//设置tr中的内容\n\t\t\t\t\ttr.innerHTML = \"<td>\"+name+\"</td>\"+\n\t\t\t\t\t\t\t\t\t\"<td>\"+email+\"</td>\"+\n\t\t\t\t\t\t\t\t\t\"<td>\"+salary+\"</td>\"+\n\t\t\t\t\t\t\t\t\t\"<td><a href='javascript:;'>Delete</a></td>\";\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t//获取刚刚添加的a元素，并为其绑定单击响应函数\t\t\t\t\n\t\t\t\t\tvar a = tr.getElementsByTagName(\"a\")[0];\n\t\t\t\t\ta.onclick = delA;\n\t\t\t\t\t\n\t\t\t\t\t//获取table\n\t\t\t\t\tvar employeeTable = document.getElementById(\"employeeTable\");\n\t\t\t\t\t//获取employeeTable中的tbody\n\t\t\t\t\tvar tbody = employeeTable.getElementsByTagName(\"tbody\")[0];\n\t\t\t\t\t//将tr添加到tbodye中\n\t\t\t\t\ttbody.appendChild(tr);\n\t\t\t\t\t/*tbody.innerHTML += \"<tr>\"+\n\t\t\t\t\t\n\t\t\t\t\t\"<td>\"+name+\"</td>\"+\n\t\t\t\t\t\t\t\t\t\"<td>\"+email+\"</td>\"+\n\t\t\t\t\t\t\t\t\t\"<td>\"+salary+\"</td>\"+\n\t\t\t\t\t\t\t\t\t\"<td><a href='javascript:;'>Delete</a></td>\"\n\t\t\t\t\t\n\t\t\t\t\t+\"</tr>\";*/\n\n\t\t\t\t};\n\n\t\t\t};\n\t\t</script>\n\t</head>\n\n\t<body>\n\n\t\t<table id=\"employeeTable\">\n\t\t\t<tr>\n\t\t\t\t<th>Name</th>\n\t\t\t\t<th>Email</th>\n\t\t\t\t<th>Salary</th>\n\t\t\t\t<th>&nbsp;</th>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td>Tom</td>\n\t\t\t\t<td>tom@tom.com</td>\n\t\t\t\t<td>5000</td>\n\t\t\t\t<td>\n\t\t\t\t\t<a href=\"javascript:;\">Delete</a>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td>Jerry</td>\n\t\t\t\t<td>jerry@sohu.com</td>\n\t\t\t\t<td>8000</td>\n\t\t\t\t<td>\n\t\t\t\t\t<a href=\"deleteEmp?id=002\">Delete</a>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td>Bob</td>\n\t\t\t\t<td>bob@tom.com</td>\n\t\t\t\t<td>10000</td>\n\t\t\t\t<td>\n\t\t\t\t\t<a href=\"deleteEmp?id=003\">Delete</a>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t</table>\n\n\t\t<div id=\"formDiv\">\n\n\t\t\t<h4>添加新员工</h4>\n\n\t\t\t<table>\n\t\t\t\t<tr>\n\t\t\t\t\t<td class=\"word\">name: </td>\n\t\t\t\t\t<td class=\"inp\">\n\t\t\t\t\t\t<input type=\"text\" name=\"empName\" id=\"empName\" />\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td class=\"word\">email: </td>\n\t\t\t\t\t<td class=\"inp\">\n\t\t\t\t\t\t<input type=\"text\" name=\"email\" id=\"email\" />\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td class=\"word\">salary: </td>\n\t\t\t\t\t<td class=\"inp\">\n\t\t\t\t\t\t<input type=\"text\" name=\"salary\" id=\"salary\" />\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td colspan=\"2\" align=\"center\">\n\t\t\t\t\t\t<button id=\"addEmpButton\">\n\t\t\t\t\t\tSubmit\n\t\t\t\t\t</button>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\n\t\t</div>\n\n\t</body>\n\n</html>",
        "output": "str",
        "x": 930,
        "y": 760,
        "wires": [
            [
                "ca70e17d6b996ede"
            ]
        ]
    },
    {
        "id": "ca70e17d6b996ede",
        "type": "http response",
        "z": "df04831a8742eac0",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1070,
        "y": 760,
        "wires": []
    },
    {
        "id": "54e5a7ae81ba8ff8",
        "type": "function",
        "z": "df04831a8742eac0",
        "name": "",
        "func": "msg.template = 'c3M6Ly9ZV1Z6TFRJMU5pMW5ZMjA2V1RaU09YQkJkSFo0ZUhwdFIwTUAxNjcuODguNjMuMTA4OjUwMDAjJUYwJTlGJTg3JUJBJUYwJTlGJTg3JUI4JTIwX1VTXyVFNyVCRSU4RSVFNSU5QiVCRAp2bWVzczovL2V5SjJJam9pTWlJc0luQnpJam9pOEorSHJmQ2ZoN0FnS0ZsdmRYUjFZbVV2VkVmdnZKcmt2NHJrdmJQbnA1SG1pb0FwWC9DZmg2M3duNGV3WCttbW1lYTRyMTg1T1NJc0ltRmtaQ0k2SWpBek1qQm9hemcxTnk1bVlXNXpPQzU0ZVhvaUxDSndiM0owSWpvaU5EUXpJaXdpZEhsd1pTSTZJbTV2Ym1VaUxDSnBaQ0k2SWpWak56QmtZVFZrTFdVMk5ERXRNMkptT0MxaU4yUmpMVFZpWVdKa09EUXpabVl6WXlJc0ltRnBaQ0k2SWpJaUxDSnVaWFFpT2lKM2N5SXNJbkJoZEdnaU9pSXZjbUY1SWl3aWFHOXpkQ0k2SWpBek1qQm9hemcxTnk1bVlXNXpPQzU0ZVhvaUxDSjBiSE1pT2lKMGJITWlmUT09CnZtZXNzOi8vZXlKMklqb2lNaUlzSW5Ceklqb2k4SitIdXZDZmg3Z2dLRmx2ZFhSMVltVXZWRWZ2dkpya3Y0cmt2YlBucDVIbWlvQXBYL0NmaDdyd240ZTRYK2UranVXYnZWOHlNemNpTENKaFpHUWlPaUkyTmk0ME1pNHhNRE11TWpJeklpd2ljRzl5ZENJNklqRTNORGcySWl3aWRIbHdaU0k2SW01dmJtVWlMQ0pwWkNJNklqVTFZVE5tT0RjMkxXRm1Zamd0TVRGbFl5MWlaamN3TFRVMk1EQXdNMlZrTVdabU55SXNJbUZwWkNJNklqQWlMQ0p1WlhRaU9pSjNjeUlzSW5CaGRHZ2lPaUl2V0U5TmRqVXdaV012SWl3aWFHOXpkQ0k2SWpZMkxqUXlMakV3TXk0eU1qTWlMQ0owYkhNaU9pSWlmUT09CnZtZXNzOi8vZXlKMklqb2lNaUlzSW5Ceklqb2lVbVZzWVhsZjhKK1BnVnBhTGZDZmo0RmFXbDgwT1RnaUxDSmhaR1FpT2lJd016SXdhR3MxTmpjdVptRnVjemd1ZUhsNklpd2ljRzl5ZENJNklqUTBNeUlzSW5SNWNHVWlPaUp1YjI1bElpd2lhV1FpT2lJMVl6Y3daR0UxWkMxbE5qUXhMVE5pWmpndFlqZGtZeTAxWW1GaVpEZzBNMlptTTJNaUxDSmhhV1FpT2lJeUlpd2libVYwSWpvaWQzTWlMQ0p3WVhSb0lqb2lMM0poZVNJc0ltaHZjM1FpT2lJd016SXdhR3MxTmpjdVptRnVjemd1ZUhsNklpd2lkR3h6SWpvaWRHeHpJbjA9CnZtZXNzOi8vZXlKMklqb2lNaUlzSW5Ceklqb2lYekl3SWl3aVlXUmtJam9pTVRNNUxqRTJNaTR4TWpJdU1qQTFJaXdpY0c5eWRDSTZJak00TkRVaUxDSjBlWEJsSWpvaWJtOXVaU0lzSW1sa0lqb2lOelprTldNMlpUTXRZemMwWXkwek5EQTJMV0k1WlRndE9UZzFPV1F3WVRjeFl6VTJJaXdpWVdsa0lqb2lNQ0lzSW01bGRDSTZJblJqY0NJc0luQmhkR2dpT2lJdklpd2lhRzl6ZENJNklpSXNJblJzY3lJNklpSjkKdm1lc3M6Ly9leUoySWpvaU1pSXNJbkJ6SWpvaThKK0h1dkNmaDdnZ0tGbHZkWFIxWW1VdlZFZnZ2SnJrdjRya3ZiUG5wNUhtaW9BcFgvQ2ZoN3J3bjRlNFgrZStqdVdidlY4eU5EUWlMQ0poWkdRaU9pSjRjWGN1YzNScGRtRnZMbmg1ZWlJc0luQnZjblFpT2lJME5ETWlMQ0owZVhCbElqb2libTl1WlNJc0ltbGtJam9pTWpFMk9ETmhNakF0WmpBMk5DMDBOV1U0TFdNMllqRXRPR001TXpNelpXVmhZekE0SWl3aVlXbGtJam9pTUNJc0ltNWxkQ0k2SW5SamNDSXNJbkJoZEdnaU9pSXZVM1Z3Y0c5eWRDMVFkWFJwYmkxTGFXeHNMV0ZzYkMxVmEzSmhhVzVwWVc1elgzWjNjeUlzSW1odmMzUWlPaUo0Y1hjdWMzUnBkbUZ2TG5oNWVpSXNJblJzY3lJNkluUnNjeUo5CnZtZXNzOi8vZXlKMklqb2lNaUlzSW5Ceklqb2k4SitIcVBDZmg2WWdVbVZzWVhsZjhKK0hxUENmaDZaRFFTM3duNGVvOEorSHBrTkJYekV4TlNJc0ltRmtaQ0k2SWpBek1qWnJjaTVtWVc1ek9DNTRlWG9pTENKd2IzSjBJam9pTkRReklpd2lkSGx3WlNJNkltNXZibVVpTENKcFpDSTZJalZqTnpCa1lUVmtMV1UyTkRFdE0ySm1PQzFpTjJSakxUVmlZV0prT0RRelptWXpZeUlzSW1GcFpDSTZJaklpTENKdVpYUWlPaUozY3lJc0luQmhkR2dpT2lJdmNtRjVJaXdpYUc5emRDSTZJakF6TWpacmNpNW1ZVzV6T0M1NGVYb2lMQ0owYkhNaU9pSjBiSE1pZlE9PQo='\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 800,
        "wires": [
            [
                "e9152c023b3cdb3f"
            ]
        ]
    },
    {
        "id": "6de02d7bcbdd9e14",
        "type": "filebrowser in",
        "z": "df04831a8742eac0",
        "filebrowser": "37ea1b5e8f9b7c0d",
        "repositoryType": "",
        "rules": [
            {
                "t": "37ea1b5e8f9b7c0d"
            }
        ],
        "property": "payload",
        "x": 950,
        "y": 840,
        "wires": [
            [
                "4e2373b45c095c0c"
            ]
        ]
    },
    {
        "id": "693acad5d1df371f",
        "type": "inject",
        "z": "df04831a8742eac0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 790,
        "y": 860,
        "wires": [
            [
                "6de02d7bcbdd9e14"
            ]
        ]
    },
    {
        "id": "4e2373b45c095c0c",
        "type": "debug",
        "z": "df04831a8742eac0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 840,
        "wires": []
    },
    {
        "id": "ed49eb0c0b2391d3",
        "type": "SMB",
        "z": "df04831a8742eac0",
        "name": "",
        "config": "5b3a2dafd7890641",
        "operation": "read-dir",
        "path": "\\",
        "path_new": "",
        "format": "string",
        "x": 1000,
        "y": 980,
        "wires": [
            [
                "4e2373b45c095c0c"
            ]
        ]
    },
    {
        "id": "47483a6b9d41681f",
        "type": "inject",
        "z": "df04831a8742eac0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 770,
        "y": 980,
        "wires": [
            [
                "ed49eb0c0b2391d3"
            ]
        ]
    },
    {
        "id": "4c21ef519ea65406",
        "type": "api-call-service",
        "z": "a8c13c8811cc5927",
        "name": "",
        "server": "a5e643a4b8a035cf",
        "version": 5,
        "debugenabled": false,
        "domain": "xiaomi_miot_raw",
        "service": "speak_text",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "media_player.l05c_cloud_671277"
        ],
        "data": "",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 620,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "1e7dbd0b7150d96c",
        "type": "function",
        "z": "a8c13c8811cc5927",
        "name": "推送内容处理",
        "func": "var a = msg.payload\nmsg.payload = {}\nmsg.payload.data = {\"text\":a};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 120,
        "wires": [
            [
                "aec42c02fa10e73a",
                "4c21ef519ea65406"
            ]
        ]
    },
    {
        "id": "aec42c02fa10e73a",
        "type": "debug",
        "z": "a8c13c8811cc5927",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 180,
        "wires": []
    },
    {
        "id": "c6c8a537b84428f6",
        "type": "ui_toast",
        "z": "a8c13c8811cc5927",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 360,
        "y": 200,
        "wires": []
    },
    {
        "id": "f34c670953e66af3",
        "type": "ui_button",
        "z": "a8c13c8811cc5927",
        "name": "",
        "group": "3208b3404cb0f2e8",
        "order": 2,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "button",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "123",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 170,
        "y": 200,
        "wires": [
            [
                "c6c8a537b84428f6"
            ]
        ]
    },
    {
        "id": "9a74671bbcd5bca4",
        "type": "ui_text_input",
        "z": "a8c13c8811cc5927",
        "name": "",
        "label": "语音消息输入",
        "tooltip": "",
        "group": "3208b3404cb0f2e8",
        "order": 1,
        "width": 19,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 140,
        "y": 120,
        "wires": [
            [
                "1e7dbd0b7150d96c",
                "c6c8a537b84428f6",
                "aec42c02fa10e73a"
            ]
        ]
    },
    {
        "id": "4dba106a4bc01a7b",
        "type": "api-current-state",
        "z": "0143542654182c64",
        "name": "",
        "server": "a5e643a4b8a035cf",
        "version": 3,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "switch.cp2_cloud_460494",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 380,
        "y": 180,
        "wires": [
            [
                "7d9a2f0e9a7534ad",
                "87b24f458884d9a7",
                "89f98002b259b124",
                "f708af4e4078808f",
                "35539877ad8863d6"
            ]
        ]
    },
    {
        "id": "387b0e77ad351a95",
        "type": "inject",
        "z": "0143542654182c64",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 180,
        "wires": [
            [
                "b8e29557b95b46b0",
                "4dba106a4bc01a7b"
            ]
        ]
    },
    {
        "id": "7d9a2f0e9a7534ad",
        "type": "ui_text",
        "z": "0143542654182c64",
        "group": "c7879eafe39970e1",
        "order": 32,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "开关状态",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 820,
        "y": 100,
        "wires": []
    },
    {
        "id": "87b24f458884d9a7",
        "type": "ui_text",
        "z": "0143542654182c64",
        "group": "c7879eafe39970e1",
        "order": 33,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "用电量",
        "format": "{{msg.data.attributes.power_cons_power_consumption}}",
        "layout": "row-spread",
        "className": "",
        "x": 810,
        "y": 140,
        "wires": []
    },
    {
        "id": "89f98002b259b124",
        "type": "ui_text",
        "z": "0143542654182c64",
        "group": "c7879eafe39970e1",
        "order": 34,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "当前电压",
        "format": "{{msg.data.attributes.power_cons_voltage}}",
        "layout": "row-spread",
        "className": "",
        "x": 820,
        "y": 180,
        "wires": []
    },
    {
        "id": "f708af4e4078808f",
        "type": "ui_text",
        "z": "0143542654182c64",
        "group": "c7879eafe39970e1",
        "order": 35,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "当前电流",
        "format": "{{msg.data.attributes.power_cons_electric_current}}",
        "layout": "row-spread",
        "className": "",
        "x": 820,
        "y": 220,
        "wires": []
    },
    {
        "id": "b8e29557b95b46b0",
        "type": "api-current-state",
        "z": "0143542654182c64",
        "name": "",
        "server": "a5e643a4b8a035cf",
        "version": 3,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "switch.212a01_cloud_147486",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 390,
        "y": 260,
        "wires": [
            [
                "35539877ad8863d6"
            ]
        ]
    },
    {
        "id": "a5517bbb0af4189a",
        "type": "ui_text",
        "z": "0143542654182c64",
        "group": "c7879eafe39970e1",
        "order": 36,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "灯泡状态",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 940,
        "y": 340,
        "wires": []
    },
    {
        "id": "96c55c3ed3dcef72",
        "type": "function",
        "z": "0143542654182c64",
        "name": "",
        "func": "var a = \"\"\na = \"开关状态:\"+msg.payload+\" \\r \"+\"色温:\"+msg.data.attributes.light_color_temperature\nmsg.payload = {}\nmsg.payload = a\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 340,
        "wires": [
            [
                "a5517bbb0af4189a"
            ]
        ]
    },
    {
        "id": "2f4857a4b0c7b899",
        "type": "ui_text",
        "z": "0143542654182c64",
        "group": "c7879eafe39970e1",
        "order": 37,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "text",
        "format": "灯泡状态:{{msg.payload}}色温:{{msg.data.attributes.light_color_temperature}}",
        "layout": "row-left",
        "className": "",
        "x": 810,
        "y": 380,
        "wires": []
    },
    {
        "id": "35539877ad8863d6",
        "type": "function",
        "z": "0143542654182c64",
        "name": "",
        "func": "var d = new Date();\nif(d.getHours()>=22 || d.getHours()<=10){\n    if(msg.payload == \"on\"){\n        msg.topic = \"提醒\"\n        if(msg.data.entity_id == \"switch.212a01_cloud_147486\"){\n            id = \"电视\"\n        }else{\n            id = \"热水器\"\n        }\n        msg.payload = id + \"还没关闭\"\n        return msg;\n    }else{\n        //msg.payload=d.getHours()\n        return null\n    }\n}else{\n    return null\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 260,
        "wires": [
            [
                "58cc6e177e575df5"
            ]
        ]
    },
    {
        "id": "58cc6e177e575df5",
        "type": "link call",
        "z": "0143542654182c64",
        "name": "发邮件",
        "links": [
            "7bcc9e0bad949cea"
        ],
        "timeout": "30",
        "x": 970,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "898b28230e558eea",
        "type": "snmp",
        "z": "0143542654182c64",
        "host": "192.168.0.211",
        "community": "public",
        "version": "2c",
        "oids": "1.3.6.1.4.1.2021.10.1.3.1,1.3.6.1.4.1.2021.10.1.3.2,1.3.6.1.4.1.2021.10.1.3.3,1.3.6.1.4.1.2021.11.9.0,1.3.6.1.2.1.25.2.2.0,1.3.6.1.2.1.1.1.0",
        "timeout": 5,
        "name": "",
        "x": 320,
        "y": 480,
        "wires": [
            [
                "6cc76bcdb612f345",
                "1efdceaa7cbd92a3"
            ]
        ]
    },
    {
        "id": "1db9fe9eab5a86d8",
        "type": "inject",
        "z": "0143542654182c64",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 480,
        "wires": [
            [
                "898b28230e558eea"
            ]
        ]
    },
    {
        "id": "6cc76bcdb612f345",
        "type": "debug",
        "z": "0143542654182c64",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 480,
        "wires": []
    },
    {
        "id": "1efdceaa7cbd92a3",
        "type": "function",
        "z": "0143542654182c64",
        "name": "",
        "func": "\nattributes = {\n    'load1': msg.payload[0].value,\n    'load5': msg.payload[1].value,\n    'load15': msg.payload[2].value,\n    'cpu': msg.payload[3].value,\n    'ram': parseInt(msg.payload[4].value/1024).toString() + 'M',\n    'os': msg.payload[5].value\n}\nmsg.payload={\n    'state': attributes.load1,\n    'attributes': attributes\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 560,
        "wires": [
            [
                "6cc76bcdb612f345",
                "6efd403af327ca32"
            ]
        ]
    },
    {
        "id": "6efd403af327ca32",
        "type": "ha-entity",
        "z": "0143542654182c64",
        "name": "newifi3",
        "server": "a5e643a4b8a035cf",
        "version": 2,
        "debugenabled": false,
        "outputs": 1,
        "entityType": "sensor",
        "config": [
            {
                "property": "name",
                "value": "newifi3"
            },
            {
                "property": "device_class",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            },
            {
                "property": "unit_of_measurement",
                "value": ""
            },
            {
                "property": "state_class",
                "value": ""
            },
            {
                "property": "last_reset",
                "value": ""
            }
        ],
        "state": "payload",
        "stateType": "msg",
        "attributes": [],
        "resend": true,
        "outputLocation": "payload",
        "outputLocationType": "none",
        "inputOverride": "allow",
        "outputOnStateChange": false,
        "outputPayload": "",
        "outputPayloadType": "str",
        "x": 880,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "b944fb4e914dc9c8",
        "type": "html",
        "z": "2d47d0348f062886",
        "name": "",
        "property": "payload",
        "outproperty": "payload",
        "tag": ".blog-posts h2 a",
        "ret": "attr",
        "as": "single",
        "x": 460,
        "y": 80,
        "wires": [
            [
                "9d3583c7caca0d38"
            ]
        ]
    },
    {
        "id": "a4191da274d39c2d",
        "type": "inject",
        "z": "2d47d0348f062886",
        "name": "长风节点",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "21600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 80,
        "wires": [
            [
                "7a89fddc8e005960"
            ]
        ]
    },
    {
        "id": "7a89fddc8e005960",
        "type": "http request",
        "z": "2d47d0348f062886",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://www.cfmem.com/search/label/free",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 280,
        "y": 80,
        "wires": [
            [
                "b944fb4e914dc9c8"
            ]
        ]
    },
    {
        "id": "0cd4b5175782a796",
        "type": "html",
        "z": "2d47d0348f062886",
        "name": "",
        "property": "payload",
        "outproperty": "payload",
        "tag": "[role] div [face]",
        "ret": "html",
        "as": "single",
        "x": 1020,
        "y": 80,
        "wires": [
            [
                "d3618b7dff124e43"
            ]
        ]
    },
    {
        "id": "9ed2fd8641f07fef",
        "type": "http request",
        "z": "2d47d0348f062886",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 840,
        "y": 80,
        "wires": [
            [
                "0cd4b5175782a796"
            ]
        ]
    },
    {
        "id": "d3618b7dff124e43",
        "type": "function",
        "z": "2d47d0348f062886",
        "name": " 获取yaml的url地址",
        "func": "var a = msg.payload[1];\n//寻找字符\nvar n = a.indexOf(\"https\")\n//取出字符\nvar b = a.substr(n);\n//msg.payload = \"\";\n//msg.payload = b;\nmsg.url = b;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 80,
        "wires": [
            [
                "f70e8d02ea9e8f48"
            ]
        ]
    },
    {
        "id": "9d3583c7caca0d38",
        "type": "function",
        "z": "2d47d0348f062886",
        "name": "更新页面地址",
        "func": "msg.url = msg.payload[0].href;\nmsg.payload = \"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 80,
        "wires": [
            [
                "9ed2fd8641f07fef"
            ]
        ]
    },
    {
        "id": "f70e8d02ea9e8f48",
        "type": "http request",
        "z": "2d47d0348f062886",
        "name": "http获取yaml数据",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 310,
        "y": 140,
        "wires": [
            [
                "4409fabb0e57f7d5",
                "a70bce6f21ed1df8"
            ]
        ]
    },
    {
        "id": "4ba894f18eae7272",
        "type": "debug",
        "z": "2d47d0348f062886",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 140,
        "wires": []
    },
    {
        "id": "4409fabb0e57f7d5",
        "type": "function",
        "z": "2d47d0348f062886",
        "name": "put 数据",
        "func": "var yaml = msg.payload\nmsg.headers = {};\nmsg.headers = {\n  'Authorization': 'Bearer glpat-bix9rWK6svSw7qEzB-tS'\n}\nmsg.url = \"https://gitlab.com/api/v4/projects/34199133/repository/files/data%2Fv2ray%2F123.yaml\"\nmsg.payload = {};\nmsg.payload={'branch': 'main',\n    'content': yaml,\n    'commit_message': 'update file'\n    \n};\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "ce66ea369c0dfbdf",
        "type": "http request",
        "z": "2d47d0348f062886",
        "name": "update file",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 670,
        "y": 140,
        "wires": [
            [
                "4ba894f18eae7272"
            ]
        ]
    },
    {
        "id": "a70bce6f21ed1df8",
        "type": "function",
        "z": "2d47d0348f062886",
        "name": "判断变化",
        "func": "if(context.flow.get('justChanged')==msg.payload){\n    return\n}\n\ncontext.flow.set('justChanged',msg.payload);\nvar yaml = msg.payload\nmsg.headers = {};\nmsg.headers = {\n  'Authorization': 'Bearer glpat-bix9rWK6svSw7qEzB-tS'\n}\nmsg.url = \"https://gitlab.com/api/v4/projects/34199133/repository/files/data%2Fv2ray%2Fcf.yaml\"\nmsg.payload = {};\nmsg.payload={'branch': 'main',\n    'content': yaml,\n    'commit_message': 'update file'\n    \n};\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 140,
        "wires": [
            [
                "ce66ea369c0dfbdf"
            ]
        ]
    },
    {
        "id": "c290fefea23eca97",
        "type": "ui_template",
        "z": "2d47d0348f062886",
        "group": "3208b3404cb0f2e8",
        "name": "节点转换",
        "order": 21,
        "width": 0,
        "height": 0,
        "format": "<script>\nfunction  create() {\n    var input = document.getElementById('content');\n    var kd = document.getElementById('kd');\n    var filepath = document.getElementById('filepath');\n    var subtype = document.getElementById('subtype');\n    if (filepath.value===\"\"){\n        alert(\"本地节点文件路径不能为空！\");\n        return false;\n    }\n    kd.href = 'http://192.168.0.210:25500/sub?target='+subtype.value+'&url='+encodeURIComponent((filepath.value).replace(/\\n/g,\"|\"))+'&insert=false&config=https%3A%2F%2Fraw.githubusercontent.com%2FACL4SSR%2FACL4SSR%2Fmaster%2FClash%2Fconfig%2FACL4SSR_Online_Mini_MultiMode.ini&emoji=true&list=false&udp=false&tfo=false&scv=false&fdn=false&sort=false'; \n    kd.style = ''; \n    kd.innerText = 'http://192.168.0.210:25500/sub?target='+subtype.value+'&url='+encodeURIComponent((filepath.value).replace(/\\n/g,\"|\"))+'&insert=false&config=https%3A%2F%2Fraw.githubusercontent.com%2FACL4SSR%2FACL4SSR%2Fmaster%2FClash%2Fconfig%2FACL4SSR_Online_Mini_MultiMode.ini&emoji=true&list=false&udp=false&tfo=false&scv=false&fdn=false&sort=false'; \n\n}\n</script>\n\n\n<script>\n    this.scope.action = function() {\n        var input = document.getElementById('content');\n        var filepath = document.getElementById('filepath');\n        var subtype = document.getElementById('subtype');\n        var value = 'http://192.168.0.210:25500/sub?target='+subtype.value+'&url='+encodeURIComponent((filepath.value).replace(/\\n/g,\"|\"))+'&insert=false'\n        return value; \n    }\n</script>\n<md-button ng-click=\"send({payload:action()})\">\n    Click me to send a hello world\n</md-button>\n\n\n\n<div id=\"pagewrap\">\n   1.节点文件路径：<br><textarea placeholder=\"支持单个节点、多个节点、直链和本地文件路径\" id=\"filepath\" cols=\"50\" rows=\"10\"></textarea><br>\n   2.将格式转换为：<select id=\"subtype\">\n  <option value=\"clash\">clash</option>\n  <option value=\"mixed\">Base64通用</option>\n</select><br>\n   <input type=\"button\" value=\"生成链接\" onclick=\"create();\"> <br> <br>\n   <a id=\"kd\" style=\"pointer-events: none;\">请先生成链接！</a><br><br>\n\n</div>\n\n\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1040,
        "y": 140,
        "wires": [
            [
                "a347121adb196bcc"
            ]
        ]
    },
    {
        "id": "a347121adb196bcc",
        "type": "debug",
        "z": "2d47d0348f062886",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 140,
        "wires": []
    },
    {
        "id": "e27e569517e1731c",
        "type": "function",
        "z": "2d47d0348f062886",
        "name": "",
        "func": "reg = /<input type=\"hidden\" name=\"token\" value=\"(.*?)\" \\/>/\ntoken = reg.exec(msg.payload)[1]\nmsg.url = \"http://192.168.0.213/cgi-bin/luci/admin/services/openclash/config-subscribe\"\nmsg.payload={\n    'token': token,\n    'cbi.submit': '1',\n    'cbi.cbe.openclash.config.auto_update': '1',\n    'cbid.openclash.config.auto_update': '1',\n    'cbid.openclash.config.config_auto_update_mode': '0',\n    'cbid.openclash.config.config_update_week_time': '*',\n    'cbid.openclash.config.auto_update_time': '13',\n    'cbi.sts.openclash.config_subscribe': '',\n    'cbi.cbe.openclash.cfg15b6bc.enabled': '1',\n    'cbid.openclash.cfg15b6bc.enabled': '1',\n    'cbid.openclash.cfg15b6bc.address': msg.url1,\n    'cbid.table.1.Apply': '更新配置'\n}\nmsg.headers = {\n    'Content-Type': 'multipart/form-data',\n    // 'Content-Length': '1070',\n    //'Accept': '*/*',\n    'Cookie': msg.cookie,\n    'Host': '192.168.0.213',\n    'Origin': 'http://192.168.0.213',\n    'Referer': 'http://192.168.0.213/cgi-bin/luci/admin/services/openclash/config-subscribe',\n    'Upgrade-Insecure-Requests': '1',\n    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.74 Safari/537.36 Edg/99.0.1150.46'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 520,
        "wires": [
            [
                "c80f71166a6b3d95",
                "21303edc8c744e72"
            ]
        ]
    },
    {
        "id": "21303edc8c744e72",
        "type": "http request",
        "z": "2d47d0348f062886",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1040,
        "y": 520,
        "wires": [
            [
                "688eb60c3730c57f"
            ]
        ]
    },
    {
        "id": "046efd2ab0826820",
        "type": "http request",
        "z": "2d47d0348f062886",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 440,
        "y": 520,
        "wires": [
            [
                "3c740a64f48dc8e1"
            ]
        ]
    },
    {
        "id": "8795456d1255b15f",
        "type": "function",
        "z": "2d47d0348f062886",
        "name": "",
        "func": "// if(msg.payload =='1'){\n//     msg.url1 = 'http://192.168.0.210:25500/sub?target=clash&url=https%3A%2F%2Fgitlab.com%2Fapi%2Fv4%2Fprojects%2F34199133%2Frepository%2Ffiles%2Fdata%252Fv2ray%252F123456.yaml%2Fraw%3Fref%3Dmain%26private_token%3Dglpat-bix9rWK6svSw7qEzB-tS&insert=false&config=https%3A%2F%2Fraw.githubusercontent.com%2FACL4SSR%2FACL4SSR%2Fmaster%2FClash%2Fconfig%2FACL4SSR_Online_Mini_MultiMode.ini&emoji=true&list=false&udp=false&tfo=false&scv=false&fdn=false&sort=false'\n// }else{\n//     msg.url1 = 'http://192.168.0.210:25500/sub?target=clash&url=https%3A%2F%2Fgitlab.com%2Fapi%2Fv4%2Fprojects%2F34199133%2Frepository%2Ffiles%2Fdata%252Fv2ray%252F123456.yaml%2Fraw%3Fref%3Dmain%26private_token%3Dglpat-bix9rWK6svSw7qEzB-tS%7Chttps%3A%2F%2Fgitlab.com%2Fapi%2Fv4%2Fprojects%2F34199133%2Frepository%2Ffiles%2Fdata%252Fv2ray%252F123.txt%2Fraw%3Fref%3Dmain%26private_token%3Dglpat-bix9rWK6svSw7qEzB-tS&insert=false&config=https%3A%2F%2Fraw.githubusercontent.com%2FACL4SSR%2FACL4SSR%2Fmaster%2FClash%2Fconfig%2FACL4SSR_Online_Mini_MultiMode.ini&emoji=true&list=false&udp=false&tfo=false&scv=false&fdn=false&sort=false'\n// }\nmsg.url1 = msg.payload\nmsg.url = 'http://192.168.0.213/cgi-bin/luci/'\nmsg.payload={\n    'luci_username': 'root',\n    'luci_password': 'password'\n}\nmsg.headers = {\n    'Content-Type': 'application/x-www-form-urlencoded',\n    //'Accept': 'application/json',\n    'Cookie': 'sysauth=bdc717e93b225fe3f1d7749721fb8ce4; agh_session=e8dc8a70b7b509eb4b1698564924210b',\n    'Host': '192.168.0.213',\n    'Origin': 'http://192.168.0.213',\n    'Referer': 'http://192.168.0.213/cgi-bin/luci/',\n    'Upgrade-Insecure-Requests': '1',\n    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.74 Safari/537.36 Edg/99.0.1150.46'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 520,
        "wires": [
            [
                "046efd2ab0826820"
            ]
        ]
    },
    {
        "id": "3c740a64f48dc8e1",
        "type": "function",
        "z": "2d47d0348f062886",
        "name": "",
        "func": "msg.headers = {}\nmsg.headers['Cookie'] = 'sysauth='+msg.redirectList[0].cookies.sysauth.value+'; agh_session=e8dc8a70b7b509eb4b1698564924210b'\nmsg.url = 'http://192.168.0.213/cgi-bin/luci/admin/services/openclash'\nmsg.cookie=msg.headers['Cookie']\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 520,
        "wires": [
            [
                "230bb5fdcd154069"
            ]
        ]
    },
    {
        "id": "230bb5fdcd154069",
        "type": "http request",
        "z": "2d47d0348f062886",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 740,
        "y": 520,
        "wires": [
            [
                "e27e569517e1731c"
            ]
        ]
    },
    {
        "id": "13a04be37629cde7",
        "type": "http request",
        "z": "2d47d0348f062886",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://github.com/alanbobs999/TopFreeProxies",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 340,
        "y": 360,
        "wires": [
            [
                "739eb8095e450051"
            ]
        ]
    },
    {
        "id": "211e629de4af4e86",
        "type": "inject",
        "z": "2d47d0348f062886",
        "name": "查看github节点更新",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 360,
        "wires": [
            [
                "13a04be37629cde7"
            ]
        ]
    },
    {
        "id": "c80f71166a6b3d95",
        "type": "debug",
        "z": "2d47d0348f062886",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 440,
        "wires": []
    },
    {
        "id": "1e3c339aa72883e3",
        "type": "function",
        "z": "2d47d0348f062886",
        "name": "",
        "func": "var count = context.get('count')||'';\nif(count == msg.payload[0].datetime){\n    return\n}else{\n    count = msg.payload[0].datetime\n    context.set('count',count);\n    msg.topic = '节点有更新'\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 360,
        "wires": [
            [
                "9f603bd5c2bbaeb5",
                "0badc744f1b956c9"
            ]
        ]
    },
    {
        "id": "739eb8095e450051",
        "type": "html",
        "z": "2d47d0348f062886",
        "name": "",
        "property": "payload",
        "outproperty": "payload",
        "tag": "div:nth-child(8) > div.color-fg-muted.text-right > time-ago[datetime]",
        "ret": "attr",
        "as": "single",
        "x": 680,
        "y": 360,
        "wires": [
            [
                "1e3c339aa72883e3"
            ]
        ]
    },
    {
        "id": "409c0e1fe309c7b7",
        "type": "function",
        "z": "2d47d0348f062886",
        "name": "",
        "func": "msg.payload = {\"name\":\"♻️ 自动选择\"}\nmsg.url = 'http://192.168.0.213:9090/proxies/🚀 节点选择'\n msg.headers = {\n    'Authorization': 'Bearer 123456',\n    'Connection': 'keep-alive',\n    //'Content-Length': '30',\n    'Content-Type': 'application/json',\n    'Cookie': 'agh_session=e8dc8a70b7b509eb4b1698564924210b',\n    'Host': '192.168.0.213:9090',\n    'Origin': 'http://192.168.0.213:9090',\n    'Referer': 'http://192.168.0.213:9090/ui/?host=192.168.0.213&port=9090&secret=123456',\n    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.74 Safari/537.36 Edg/99.0.1150.46'\n }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 860,
        "wires": [
            [
                "45a2b32bc1bfbf00"
            ]
        ]
    },
    {
        "id": "45a2b32bc1bfbf00",
        "type": "http request",
        "z": "2d47d0348f062886",
        "name": "",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 400,
        "y": 860,
        "wires": [
            [
                "c3954da1757d0960"
            ]
        ]
    },
    {
        "id": "2f11ac93546b2601",
        "type": "function",
        "z": "2d47d0348f062886",
        "name": "",
        "func": "msg.payload = {\"name\":\"🔯 故障转移\"}\nmsg.url = 'http://192.168.0.213:9090/proxies/🚀 节点选择'\n msg.headers = {\n    'Authorization': 'Bearer 123456',\n    'Connection': 'keep-alive',\n    //'Content-Length': '30',\n    'Content-Type': 'application/json',\n    'Cookie': 'agh_session=e8dc8a70b7b509eb4b1698564924210b',\n    'Host': '192.168.0.213:9090',\n    'Origin': 'http://192.168.0.213:9090',\n    'Referer': 'http://192.168.0.213:9090/ui/?host=192.168.0.213&port=9090&secret=123456',\n    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.74 Safari/537.36 Edg/99.0.1150.46'\n }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 920,
        "wires": [
            [
                "45a2b32bc1bfbf00"
            ]
        ]
    },
    {
        "id": "da3e3cb8f54e2528",
        "type": "function",
        "z": "2d47d0348f062886",
        "name": "",
        "func": "msg.payload = {\"name\":\"🔮 负载均衡\"}\nmsg.url = 'http://192.168.0.213:9090/proxies/🚀 节点选择'\n msg.headers = {\n    'Authorization': 'Bearer 123456',\n    'Connection': 'keep-alive',\n    //'Content-Length': '30',\n    'Content-Type': 'application/json',\n    'Cookie': 'agh_session=e8dc8a70b7b509eb4b1698564924210b',\n    'Host': '192.168.0.213:9090',\n    'Origin': 'http://192.168.0.213:9090',\n    'Referer': 'http://192.168.0.213:9090/ui/?host=192.168.0.213&port=9090&secret=123456',\n    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.74 Safari/537.36 Edg/99.0.1150.46'\n }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 980,
        "wires": [
            [
                "45a2b32bc1bfbf00"
            ]
        ]
    },
    {
        "id": "7cde97d19b6ac706",
        "type": "function",
        "z": "2d47d0348f062886",
        "name": "",
        "func": "msg.payload = {\"name\":\"DIRECT\"}\nmsg.url = 'http://192.168.0.213:9090/proxies/🚀 节点选择'\n msg.headers = {\n    'Authorization': 'Bearer 123456',\n    'Connection': 'keep-alive',\n    //'Content-Length': '30',\n    'Content-Type': 'application/json',\n    'Cookie': 'agh_session=e8dc8a70b7b509eb4b1698564924210b',\n    'Host': '192.168.0.213:9090',\n    'Origin': 'http://192.168.0.213:9090',\n    'Referer': 'http://192.168.0.213:9090/ui/?host=192.168.0.213&port=9090&secret=123456',\n    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.74 Safari/537.36 Edg/99.0.1150.46'\n }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 1040,
        "wires": [
            [
                "45a2b32bc1bfbf00"
            ]
        ]
    },
    {
        "id": "c3954da1757d0960",
        "type": "function",
        "z": "2d47d0348f062886",
        "name": "",
        "func": "msg.payload = ''\nmsg.url = 'http://192.168.0.213:9090/providers/proxies'\nmsg.headers = {\n    'Authorization': 'Bearer 123456',\n    'Connection': 'keep-alive',\n    'Cookie': 'agh_session=e8dc8a70b7b509eb4b1698564924210b',\n    'Host': '192.168.0.213:9090',\n    'Referer': 'http://192.168.0.213:9090/ui/?host=192.168.0.213&port=9090&secret=123456',\n    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.74 Safari/537.36 Edg/99.0.1150.46'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 860,
        "wires": [
            [
                "10d32d09ed2a733c"
            ]
        ]
    },
    {
        "id": "10d32d09ed2a733c",
        "type": "http request",
        "z": "2d47d0348f062886",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 700,
        "y": 860,
        "wires": [
            [
                "53d87ccfbabed377",
                "4faa59c19ff81afe"
            ]
        ]
    },
    {
        "id": "ac2d80f7c5a9ee83",
        "type": "inject",
        "z": "2d47d0348f062886",
        "name": "获取节点选择模式",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 330,
        "y": 800,
        "wires": [
            [
                "c3954da1757d0960"
            ]
        ]
    },
    {
        "id": "53d87ccfbabed377",
        "type": "change",
        "z": "2d47d0348f062886",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.state",
                "pt": "msg",
                "to": "payload.providers[\"🎯 全球直连\"].proxies[1].now",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "10fadd7af7843abc",
        "type": "ha-entity",
        "z": "2d47d0348f062886",
        "name": "节点选择",
        "server": "a5e643a4b8a035cf",
        "version": 2,
        "debugenabled": false,
        "outputs": 1,
        "entityType": "sensor",
        "config": [
            {
                "property": "name",
                "value": "节点选择"
            },
            {
                "property": "device_class",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            },
            {
                "property": "unit_of_measurement",
                "value": ""
            },
            {
                "property": "state_class",
                "value": ""
            },
            {
                "property": "last_reset",
                "value": ""
            }
        ],
        "state": "payload",
        "stateType": "msg",
        "attributes": [],
        "resend": true,
        "outputLocation": "payload",
        "outputLocationType": "none",
        "inputOverride": "allow",
        "outputOnStateChange": false,
        "outputPayload": "",
        "outputPayloadType": "str",
        "x": 1120,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "51c3350b870cd183",
        "type": "ha-entity",
        "z": "2d47d0348f062886",
        "name": "自动选择",
        "server": "a5e643a4b8a035cf",
        "version": 2,
        "debugenabled": false,
        "outputs": 2,
        "entityType": "switch",
        "config": [
            {
                "property": "name",
                "value": "自动选择"
            },
            {
                "property": "device_class",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            },
            {
                "property": "unit_of_measurement",
                "value": ""
            },
            {
                "property": "state_class",
                "value": ""
            },
            {
                "property": "last_reset",
                "value": ""
            }
        ],
        "state": "payload",
        "stateType": "msg",
        "attributes": [],
        "resend": true,
        "outputLocation": "payload",
        "outputLocationType": "none",
        "inputOverride": "allow",
        "outputOnStateChange": true,
        "outputPayload": "1",
        "outputPayloadType": "str",
        "x": 80,
        "y": 860,
        "wires": [
            [
                "409c0e1fe309c7b7"
            ],
            []
        ]
    },
    {
        "id": "3d6a2eef80d1114c",
        "type": "ha-entity",
        "z": "2d47d0348f062886",
        "name": "DIRECT",
        "server": "a5e643a4b8a035cf",
        "version": 2,
        "debugenabled": false,
        "outputs": 2,
        "entityType": "switch",
        "config": [
            {
                "property": "name",
                "value": "DIRECT"
            },
            {
                "property": "device_class",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            },
            {
                "property": "unit_of_measurement",
                "value": ""
            },
            {
                "property": "state_class",
                "value": ""
            },
            {
                "property": "last_reset",
                "value": ""
            }
        ],
        "state": "payload",
        "stateType": "msg",
        "attributes": [],
        "resend": true,
        "outputLocation": "payload",
        "outputLocationType": "none",
        "inputOverride": "allow",
        "outputOnStateChange": true,
        "outputPayload": "1",
        "outputPayloadType": "str",
        "x": 80,
        "y": 1040,
        "wires": [
            [
                "7cde97d19b6ac706"
            ],
            []
        ]
    },
    {
        "id": "3113e145d2c940ea",
        "type": "api-call-service",
        "z": "2d47d0348f062886",
        "name": "",
        "server": "a5e643a4b8a035cf",
        "version": 5,
        "debugenabled": false,
        "domain": "switch",
        "service": "turn_off",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "switch.fu_zai_jun_heng",
            "switch.gu_zhang_zhuan_yi",
            "switch.zi_dong_xuan_ze"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1080,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "35749d4c0e1f6c8a",
        "type": "ha-entity",
        "z": "2d47d0348f062886",
        "name": "故障转移",
        "server": "a5e643a4b8a035cf",
        "version": 2,
        "debugenabled": false,
        "outputs": 2,
        "entityType": "switch",
        "config": [
            {
                "property": "name",
                "value": "故障转移"
            },
            {
                "property": "device_class",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            },
            {
                "property": "unit_of_measurement",
                "value": ""
            },
            {
                "property": "state_class",
                "value": ""
            },
            {
                "property": "last_reset",
                "value": ""
            }
        ],
        "state": "payload",
        "stateType": "msg",
        "attributes": [],
        "resend": true,
        "outputLocation": "payload",
        "outputLocationType": "none",
        "inputOverride": "allow",
        "outputOnStateChange": true,
        "outputPayload": "1",
        "outputPayloadType": "str",
        "x": 80,
        "y": 920,
        "wires": [
            [
                "2f11ac93546b2601"
            ],
            []
        ]
    },
    {
        "id": "f7ebb5315cbc2a45",
        "type": "ha-entity",
        "z": "2d47d0348f062886",
        "name": "负载均衡",
        "server": "a5e643a4b8a035cf",
        "version": 2,
        "debugenabled": false,
        "outputs": 2,
        "entityType": "switch",
        "config": [
            {
                "property": "name",
                "value": "负载均衡"
            },
            {
                "property": "device_class",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            },
            {
                "property": "unit_of_measurement",
                "value": ""
            },
            {
                "property": "state_class",
                "value": ""
            },
            {
                "property": "last_reset",
                "value": ""
            }
        ],
        "state": "payload",
        "stateType": "msg",
        "attributes": [],
        "resend": true,
        "outputLocation": "payload",
        "outputLocationType": "none",
        "inputOverride": "allow",
        "outputOnStateChange": true,
        "outputPayload": "1",
        "outputPayloadType": "str",
        "x": 80,
        "y": 980,
        "wires": [
            [
                "da3e3cb8f54e2528"
            ],
            []
        ]
    },
    {
        "id": "a74018e3cefe2b0c",
        "type": "api-call-service",
        "z": "2d47d0348f062886",
        "name": "",
        "server": "a5e643a4b8a035cf",
        "version": 5,
        "debugenabled": false,
        "domain": "switch",
        "service": "turn_off",
        "areaId": [],
        "deviceId": [],
        "entityId": [],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 860,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "73c2bd3c047b04d0",
        "type": "api-call-service",
        "z": "2d47d0348f062886",
        "name": "",
        "server": "a5e643a4b8a035cf",
        "version": 5,
        "debugenabled": false,
        "domain": "switch",
        "service": "turn_off",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "switch.fu_zai_jun_heng",
            "switch.zi_dong_xuan_ze",
            "switch.direct"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 840,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "b9be8c698a1bee92",
        "type": "api-call-service",
        "z": "2d47d0348f062886",
        "name": "",
        "server": "a5e643a4b8a035cf",
        "version": 5,
        "debugenabled": false,
        "domain": "switch",
        "service": "turn_off",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "switch.gu_zhang_zhuan_yi",
            "switch.zi_dong_xuan_ze",
            "switch.direct"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1080,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "9f603bd5c2bbaeb5",
        "type": "http request",
        "z": "2d47d0348f062886",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://raw.githubusercontent.com/alanbobs999/TopFreeProxies/master/Eternity",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 280,
        "y": 440,
        "wires": [
            [
                "f8b2e240938a02dd"
            ]
        ]
    },
    {
        "id": "c96e538ca31e7c7f",
        "type": "inject",
        "z": "2d47d0348f062886",
        "name": "节点过滤上传",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 440,
        "wires": [
            [
                "9f603bd5c2bbaeb5"
            ]
        ]
    },
    {
        "id": "f8b2e240938a02dd",
        "type": "base64",
        "z": "2d47d0348f062886",
        "name": "",
        "action": "b64",
        "property": "payload",
        "x": 440,
        "y": 440,
        "wires": [
            [
                "85a7fe55905e6a3b"
            ]
        ]
    },
    {
        "id": "85a7fe55905e6a3b",
        "type": "function",
        "z": "2d47d0348f062886",
        "name": "",
        "func": "reg = /trojan:\\/\\/(.*)/g\nret = msg.payload.replace(reg, '')\nmsg.payload = ret\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 440,
        "wires": [
            [
                "21e1045b3874ea39"
            ]
        ]
    },
    {
        "id": "21e1045b3874ea39",
        "type": "base64",
        "z": "2d47d0348f062886",
        "name": "",
        "action": "str",
        "property": "payload",
        "x": 740,
        "y": 440,
        "wires": [
            [
                "1cef1eedb2b0af24"
            ]
        ]
    },
    {
        "id": "1cef1eedb2b0af24",
        "type": "function",
        "z": "2d47d0348f062886",
        "name": "put 数据",
        "func": "var yaml = msg.payload\nmsg.headers = {};\nmsg.headers = {\n  'Authorization': 'Bearer glpat-bix9rWK6svSw7qEzB-tS'\n}\nmsg.url = \"https://gitlab.com/api/v4/projects/34199133/repository/files/data%2Fv2ray%2Fgithub.yaml\"\nmsg.payload = {};\nmsg.payload={'branch': 'main',\n    'content': yaml,\n    'commit_message': 'update file'\n    \n};\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 440,
        "wires": [
            [
                "041ca33050e5c924"
            ]
        ]
    },
    {
        "id": "041ca33050e5c924",
        "type": "http request",
        "z": "2d47d0348f062886",
        "name": "update file",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1070,
        "y": 440,
        "wires": [
            [
                "c80f71166a6b3d95"
            ]
        ]
    },
    {
        "id": "971c64646a9857f8",
        "type": "inject",
        "z": "2d47d0348f062886",
        "name": "路由器订阅更新",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "3",
        "x": 120,
        "y": 520,
        "wires": [
            [
                "8795456d1255b15f"
            ]
        ]
    },
    {
        "id": "bb36a6e6682b8f44",
        "type": "ha-entity",
        "z": "2d47d0348f062886",
        "name": "更新openclash",
        "server": "a5e643a4b8a035cf",
        "version": 2,
        "debugenabled": false,
        "outputs": 2,
        "entityType": "switch",
        "config": [
            {
                "property": "name",
                "value": "更新openclash"
            },
            {
                "property": "device_class",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            },
            {
                "property": "unit_of_measurement",
                "value": ""
            },
            {
                "property": "state_class",
                "value": ""
            },
            {
                "property": "last_reset",
                "value": ""
            }
        ],
        "state": "payload",
        "stateType": "msg",
        "attributes": [],
        "resend": true,
        "outputLocation": "payload",
        "outputLocationType": "none",
        "inputOverride": "allow",
        "outputOnStateChange": true,
        "outputPayload": "http://192.168.0.210:25500/sub?target=clash&url=https%3A%2F%2Fgitlab.com%2Fapi%2Fv4%2Fprojects%2F34199133%2Frepository%2Ffiles%2Fdata%252Fv2ray%252Fgithub.yaml%2Fraw%3Fref%3Dmain%26private_token%3Dglpat-bix9rWK6svSw7qEzB-tS&insert=false&config=https%3A%2F%2Fraw.githubusercontent.com%2FACL4SSR%2FACL4SSR%2Fmaster%2FClash%2Fconfig%2FACL4SSR_Online_Mini_MultiMode.ini&emoji=true&list=false&udp=false&tfo=false&scv=false&fdn=false&sort=false",
        "outputPayloadType": "str",
        "x": 100,
        "y": 600,
        "wires": [
            [
                "8795456d1255b15f",
                "4489dc8343172b9c"
            ],
            []
        ]
    },
    {
        "id": "688eb60c3730c57f",
        "type": "api-call-service",
        "z": "2d47d0348f062886",
        "name": "",
        "server": "a5e643a4b8a035cf",
        "version": 5,
        "debugenabled": false,
        "domain": "switch",
        "service": "turn_off",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "switch.geng_xin_shang_chuan",
            "switch.geng_xin_openclash",
            "switch.geng_xin_openclash2"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1220,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "96b49962af9aff83",
        "type": "server-state-changed",
        "z": "2d47d0348f062886",
        "name": "节点选择状态",
        "server": "a5e643a4b8a035cf",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "sensor.jie_dian_xuan_ze",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 1,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 410,
        "y": 1000,
        "wires": [
            [
                "0de1fcd504bdc7ba"
            ]
        ]
    },
    {
        "id": "0de1fcd504bdc7ba",
        "type": "switch",
        "z": "2d47d0348f062886",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "♻️ 自动选择",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "🔯 故障转移",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "🔮 负载均衡",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "DIRECT",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 590,
        "y": 1000,
        "wires": [
            [
                "87e5651103fc7a2f"
            ],
            [
                "73c2bd3c047b04d0"
            ],
            [
                "b9be8c698a1bee92"
            ],
            [
                "3113e145d2c940ea"
            ]
        ]
    },
    {
        "id": "60a1ea1930f75b4d",
        "type": "ui_template",
        "z": "2d47d0348f062886",
        "group": "3208b3404cb0f2e8",
        "name": "节点上传",
        "order": 4,
        "width": 19,
        "height": 6,
        "format": "<script>\n    this.scope.action = function() {\n        var text = document.getElementById('text');\n        var value = {'text':text.value};\n        return value; \n    }\n</script>\n<div id=\"pagewrap\">\n   节点：<br><textarea placeholder=\"请输入节点信息\" id=\"text\" cols=\"20\" rows=\"5\"></textarea><br>\n    <md-button id=\"btn01\" ng-click=\"send({payload:action()})\">上传</md-button>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 980,
        "y": 200,
        "wires": [
            [
                "7967ec77977cf4bf"
            ]
        ]
    },
    {
        "id": "09232fb2994d0571",
        "type": "function",
        "z": "2d47d0348f062886",
        "name": "put 数据",
        "func": "var yaml = msg.payload\nmsg.headers = {};\nmsg.headers = {\n  'Authorization': 'Bearer glpat-bix9rWK6svSw7qEzB-tS'\n}\nmsg.url = \"https://gitlab.com/api/v4/projects/34199133/repository/files/data%2Fv2ray%2Fshangchuan.txt\"\nmsg.payload = {};\nmsg.payload={'branch': 'main',\n    'content': yaml,\n    'commit_message': 'update file'\n    \n};\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 260,
        "wires": [
            [
                "c5502097d040f335"
            ]
        ]
    },
    {
        "id": "c5502097d040f335",
        "type": "http request",
        "z": "2d47d0348f062886",
        "name": "update file",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1310,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "7967ec77977cf4bf",
        "type": "function",
        "z": "2d47d0348f062886",
        "name": "",
        "func": "msg.payload =msg.payload.text\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 200,
        "wires": [
            [
                "2ecdfde88f6b967d"
            ]
        ]
    },
    {
        "id": "2ecdfde88f6b967d",
        "type": "base64",
        "z": "2d47d0348f062886",
        "name": "",
        "action": "str",
        "property": "payload",
        "x": 980,
        "y": 260,
        "wires": [
            [
                "09232fb2994d0571"
            ]
        ]
    },
    {
        "id": "0710e8b321f301cf",
        "type": "function",
        "z": "2d47d0348f062886",
        "name": "",
        "func": "reg = /trojan:\\/\\/(.*)/g\nret = msg.payload.replace(reg, '')\nmsg.payload = ret\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 200,
        "wires": [
            [
                "2ecdfde88f6b967d"
            ]
        ]
    },
    {
        "id": "9712fb1596b73e09",
        "type": "ha-entity",
        "z": "2d47d0348f062886",
        "name": "更新openclash2",
        "server": "a5e643a4b8a035cf",
        "version": 2,
        "debugenabled": false,
        "outputs": 2,
        "entityType": "switch",
        "config": [
            {
                "property": "name",
                "value": "更新openclash2"
            },
            {
                "property": "device_class",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            },
            {
                "property": "unit_of_measurement",
                "value": ""
            },
            {
                "property": "state_class",
                "value": ""
            },
            {
                "property": "last_reset",
                "value": ""
            }
        ],
        "state": "payload",
        "stateType": "msg",
        "attributes": [],
        "resend": true,
        "outputLocation": "payload",
        "outputLocationType": "none",
        "inputOverride": "allow",
        "outputOnStateChange": true,
        "outputPayload": "http://192.168.0.210:25500/sub?target=clash&url=https%3A%2F%2Fgitlab.com%2Fapi%2Fv4%2Fprojects%2F34199133%2Frepository%2Ffiles%2Fdata%252Fv2ray%252F123456.yaml%2Fraw%3Fref%3Dmain%26private_token%3Dglpat-bix9rWK6svSw7qEzB-tS%7Chttps%3A%2F%2Fgitlab.com%2Fapi%2Fv4%2Fprojects%2F34199133%2Frepository%2Ffiles%2Fdata%252Fv2ray%252F123.txt%2Fraw%3Fref%3Dmain%26private_token%3Dglpat-bix9rWK6svSw7qEzB-tS&insert=false&config=https%3A%2F%2Fraw.githubusercontent.com%2FACL4SSR%2FACL4SSR%2Fmaster%2FClash%2Fconfig%2FACL4SSR_Online_Mini_MultiMode.ini&emoji=true&list=false&udp=false&tfo=false&scv=false&fdn=false&sort=false",
        "outputPayloadType": "str",
        "x": 100,
        "y": 660,
        "wires": [
            [
                "8795456d1255b15f",
                "4489dc8343172b9c"
            ],
            []
        ]
    },
    {
        "id": "16540988d46a25db",
        "type": "ha-entity",
        "z": "2d47d0348f062886",
        "name": "更新上传",
        "server": "a5e643a4b8a035cf",
        "version": 2,
        "debugenabled": false,
        "outputs": 2,
        "entityType": "switch",
        "config": [
            {
                "property": "name",
                "value": "更新上传"
            },
            {
                "property": "device_class",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            },
            {
                "property": "unit_of_measurement",
                "value": ""
            },
            {
                "property": "state_class",
                "value": ""
            },
            {
                "property": "last_reset",
                "value": ""
            }
        ],
        "state": "payload",
        "stateType": "msg",
        "attributes": [],
        "resend": true,
        "outputLocation": "payload",
        "outputLocationType": "none",
        "inputOverride": "allow",
        "outputOnStateChange": true,
        "outputPayload": "http://192.168.0.210:25500/sub?target=clash&url=https%3A%2F%2Fgitlab.com%2Fapi%2Fv4%2Fprojects%2F34199133%2Frepository%2Ffiles%2Fdata%252Fv2ray%252Fshangchuan.txt%2Fraw%3Fref%3Dmain%26private_token%3Dglpat-bix9rWK6svSw7qEzB-tS&insert=false&config=https%3A%2F%2Fraw.githubusercontent.com%2FACL4SSR%2FACL4SSR%2Fmaster%2FClash%2Fconfig%2FACL4SSR_Online_Mini_MultiMode.ini&emoji=true&list=false&udp=false&tfo=false&scv=false&fdn=false&sort=false",
        "outputPayloadType": "str",
        "x": 80,
        "y": 720,
        "wires": [
            [
                "8795456d1255b15f",
                "4489dc8343172b9c"
            ],
            []
        ]
    },
    {
        "id": "87e5651103fc7a2f",
        "type": "function",
        "z": "2d47d0348f062886",
        "name": "",
        "func": "msg.payload = {\n    \"domain\": \"switch\",\n    \"service\": \"turn_off\",\n    \"target\": {\n        // \"area_id\": [\"kitchen\"],\n        // \"device_id\": [\"8932894082930482903\"],\n        \"entity_id\": [\"switch.direct\"]\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 920,
        "wires": [
            [
                "a74018e3cefe2b0c"
            ]
        ]
    },
    {
        "id": "678316b53583a30c",
        "type": "function",
        "z": "2d47d0348f062886",
        "name": "",
        "func": "var arr = msg.payload.providers[\"♻️ 自动选择\"].proxies\n// delete arr.DIRECT\nvar arr1 = []\n//创建数组\nvar n = 0\nfor(var a in arr){\n    n = arr[a].history.length - 1\n    arr1.push([arr[a].history[n].delay,arr[a].name])\n}\n// 排序\narr1.sort(function(x, y){\n  return (x[0]-y[0]);\n});\n\nvar list = context.get('list')||[];\nlist.push(msg.state)\n// context.set('list',list);\n\n\n//取出数组之中和list中元素不同的节点名称\nfor(var i = 0;i<arr1.length;i++){\n    if(arr1[i][0]>0){\n        for(var t =0;t<list.length;t++){\n            if(arr1[i][1] == list[t]){\n                break\n            }else if(t==(list.length-1)){\n                msg.payload = arr1[i]\n                context.set('list',list);\n                return msg;\n            }\n        }\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 1420,
        "wires": [
            [
                "6a052bb651b79b1d"
            ]
        ]
    },
    {
        "id": "6a052bb651b79b1d",
        "type": "function",
        "z": "2d47d0348f062886",
        "name": "",
        "func": "msg.payload = {\"name\": msg.payload[1]}\nmsg.url = 'http://192.168.0.213:9090/proxies/🚀 节点选择'\n msg.headers = {\n    'Authorization': 'Bearer 123456',\n    'Connection': 'keep-alive',\n    //'Content-Length': '30',\n    'Content-Type': 'application/json',\n    'Cookie': 'agh_session=e8dc8a70b7b509eb4b1698564924210b',\n    'Host': '192.168.0.213:9090',\n    'Origin': 'http://192.168.0.213:9090',\n    'Referer': 'http://192.168.0.213:9090/ui/?host=192.168.0.213&port=9090&secret=123456',\n    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.74 Safari/537.36 Edg/99.0.1150.46'\n }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 1420,
        "wires": [
            [
                "175286de773d893c"
            ]
        ]
    },
    {
        "id": "175286de773d893c",
        "type": "http request",
        "z": "2d47d0348f062886",
        "name": "自动选择节点",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 840,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "8787e53e10616bab",
        "type": "link out",
        "z": "2d47d0348f062886",
        "name": "",
        "mode": "link",
        "links": [
            "1e0eb8d8f07cbb57"
        ],
        "x": 955,
        "y": 820,
        "wires": []
    },
    {
        "id": "1e0eb8d8f07cbb57",
        "type": "link in",
        "z": "2d47d0348f062886",
        "name": "",
        "links": [
            "8787e53e10616bab"
        ],
        "x": 65,
        "y": 1420,
        "wires": [
            [
                "e0112db317d0fbb1"
            ]
        ]
    },
    {
        "id": "01eaaf0dbb6e8651",
        "type": "function",
        "z": "2d47d0348f062886",
        "name": "N1",
        "func": "msg.url = 'http://192.168.0.213/cgi-bin/luci/admin/services/passwall/connect_status?type=google&url=https://www.google.com/generate_204&_=0.8077079259791362'\nmsg.headers = {\n    'Cookie': 'sysauth=45f593ef676afd2f3d354f5089f5ba78; agh_session=e8dc8a70b7b509eb4b1698564924210b',\n    'Host': '192.168.0.213',\n    'Referer': 'http://192.168.0.213/cgi-bin/luci/admin/services/passwall',\n    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.74 Safari/537.36 Edg/99.0.1150.55'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 1500,
        "wires": [
            [
                "79a4ba7b3a0a5e49"
            ]
        ]
    },
    {
        "id": "79a4ba7b3a0a5e49",
        "type": "http request",
        "z": "2d47d0348f062886",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 420,
        "y": 1500,
        "wires": [
            [
                "21bb90c40de292cb"
            ]
        ]
    },
    {
        "id": "58987ae0925178d8",
        "type": "inject",
        "z": "2d47d0348f062886",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 90,
        "y": 1680,
        "wires": [
            [
                "fbbd9b97a4706c37"
            ]
        ]
    },
    {
        "id": "a45a06ce63d232bd",
        "type": "http request",
        "z": "2d47d0348f062886",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 840,
        "y": 1620,
        "wires": [
            [
                "ae116e17917032de"
            ]
        ]
    },
    {
        "id": "eebc77287dfee955",
        "type": "function",
        "z": "2d47d0348f062886",
        "name": "",
        "func": "msg.url = 'http://192.168.0.211/cgi-bin/luci/'\nmsg.payload={\n    'luci_username': 'root',\n    'luci_password': 'password'\n}\nmsg.headers = {\n    'Content-Type': 'application/x-www-form-urlencoded',\n    'Cookie': 'sysauth=8bc041b0450ac814fb80ab10595427f5; agh_session=7cd651ae2eac08640f50ee89c87d66d5',\n    'Host': '192.168.0.211',\n    'Origin': 'http://192.168.0.211',\n    'Referer': 'http://192.168.0.211/cgi-bin/luci/',\n    'Upgrade-Insecure-Requests': '1',\n    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.74 Safari/537.36 Edg/99.0.1150.46'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 1620,
        "wires": [
            [
                "a45a06ce63d232bd"
            ]
        ]
    },
    {
        "id": "21bb90c40de292cb",
        "type": "ha-entity",
        "z": "2d47d0348f062886",
        "name": "网络状态",
        "server": "a5e643a4b8a035cf",
        "version": 2,
        "debugenabled": false,
        "outputs": 1,
        "entityType": "sensor",
        "config": [
            {
                "property": "name",
                "value": "网络状态"
            },
            {
                "property": "device_class",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            },
            {
                "property": "unit_of_measurement",
                "value": ""
            },
            {
                "property": "state_class",
                "value": ""
            },
            {
                "property": "last_reset",
                "value": ""
            }
        ],
        "state": "payload.use_time",
        "stateType": "msg",
        "attributes": [],
        "resend": true,
        "outputLocation": "payload",
        "outputLocationType": "none",
        "inputOverride": "allow",
        "outputOnStateChange": false,
        "outputPayload": "",
        "outputPayloadType": "str",
        "x": 580,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "b61f71e605330b2a",
        "type": "function",
        "z": "2d47d0348f062886",
        "name": "newifi3",
        "func": "var count = context.get('count')||'sysauth=8bc041b0450ac814fb80ab10595427f5; agh_session=7cd651ae2eac08640f50ee89c87d66d5';\nif(msg.topic == '2'){\n    count = msg.payload\n    \n    msg.topic = '1'\n}\nmsg.url = 'http://192.168.0.211/cgi-bin/luci/admin/services/shadowsocksr/check?set=google&_=0.6529891977372675'\nmsg.headers = {\n    'Cookie': count,\n    'Host': '192.168.0.211',\n    'Referer': 'http://192.168.0.211/cgi-bin/luci/admin/services/shadowsocksr/status',\n    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.74 Safari/537.36 Edg/99.0.1150.55'\n}\ncontext.set('count',count);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1560,
        "wires": [
            [
                "7306f57c4f6e9548"
            ]
        ]
    },
    {
        "id": "7306f57c4f6e9548",
        "type": "http request",
        "z": "2d47d0348f062886",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 680,
        "y": 1560,
        "wires": [
            [
                "e6ce61ef6bfc487d"
            ]
        ]
    },
    {
        "id": "e6ce61ef6bfc487d",
        "type": "function",
        "z": "2d47d0348f062886",
        "name": "",
        "func": "if(msg.statusCode == 403){\n    msg.topic = '2'\n}else{\n    msg.topic = '1'\n}\nif(msg.statusCode == 200 && msg.payload.ret == 0){\n    msg.payload ='连接正常'\n    return msg\n}else{\n    msg.payload = '连接错误'\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 1560,
        "wires": [
            [
                "37217d51e694d23e"
            ]
        ]
    },
    {
        "id": "37217d51e694d23e",
        "type": "switch",
        "z": "2d47d0348f062886",
        "name": "判断获取cookie",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1000,
        "y": 1560,
        "wires": [
            [
                "c0b147f0f34769a1"
            ],
            [
                "eebc77287dfee955"
            ]
        ]
    },
    {
        "id": "ae116e17917032de",
        "type": "function",
        "z": "2d47d0348f062886",
        "name": "获取cookie",
        "func": "msg.payload = 'sysauth='+msg.redirectList[0].cookies.sysauth.value+'; agh_session=e8dc8a70b7b509eb4b1698564924210b'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 1620,
        "wires": [
            [
                "b61f71e605330b2a"
            ]
        ]
    },
    {
        "id": "447c766c1a85c49a",
        "type": "function",
        "z": "2d47d0348f062886",
        "name": "",
        "func": "proxies = msg.payload\nfor(var i =0;i<proxies.length;i++){\n    msg.url = 'http://192.168.0.213:9090/proxies/'+proxies[i]+'/delay?timeout=5000&url=http://www.gstatic.com/generate_204'\n    msg.headers = {\n    'Authorization': 'Bearer 123456',\n    'Connection': 'keep-alive',\n    'Cookie': 'agh_session=e8dc8a70b7b509eb4b1698564924210b',\n    'Host': '192.168.0.213:9090',\n    'Referer': 'http://192.168.0.213:9090/ui/?host=192.168.0.213&port=9090&secret=123456',\n    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.74 Safari/537.36 Edg/99.0.1150.55'\n    }\n    node.send(msg)\n}\nreturn",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1680,
        "wires": [
            [
                "fb45a385da3183b1"
            ]
        ]
    },
    {
        "id": "34b89bdf52df296e",
        "type": "debug",
        "z": "2d47d0348f062886",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1290,
        "y": 1680,
        "wires": []
    },
    {
        "id": "fb45a385da3183b1",
        "type": "http request",
        "z": "2d47d0348f062886",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1140,
        "y": 1680,
        "wires": [
            [
                "34b89bdf52df296e"
            ]
        ]
    },
    {
        "id": "a4159ceb7d5514e8",
        "type": "function",
        "z": "2d47d0348f062886",
        "name": "",
        "func": "msg.payload = ''\nmsg.url = 'http://192.168.0.213:9090/providers/proxies'\nmsg.headers = {\n    'Authorization': 'Bearer 123456',\n    'Connection': 'keep-alive',\n    'Cookie': 'agh_session=e8dc8a70b7b509eb4b1698564924210b',\n    'Host': '192.168.0.213:9090',\n    'Referer': 'http://192.168.0.213:9090/ui/?host=192.168.0.213&port=9090&secret=123456',\n    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.74 Safari/537.36 Edg/99.0.1150.46'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 1680,
        "wires": [
            [
                "be2176a697e5bb3e"
            ]
        ]
    },
    {
        "id": "be2176a697e5bb3e",
        "type": "http request",
        "z": "2d47d0348f062886",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 700,
        "y": 1680,
        "wires": [
            [
                "f3829dd153fb6d69"
            ]
        ]
    },
    {
        "id": "1f0bbbe1a58eef71",
        "type": "inject",
        "z": "2d47d0348f062886",
        "name": "定时测速",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "1",
        "x": 100,
        "y": 1740,
        "wires": [
            [
                "d6a27028857219c2"
            ]
        ]
    },
    {
        "id": "f3829dd153fb6d69",
        "type": "function",
        "z": "2d47d0348f062886",
        "name": "",
        "func": "var arr = msg.payload.providers[\"♻️ 自动选择\"].proxies\n// delete arr.DIRECT\nvar arr1 = []\n//创建数组\nfor(var a in arr){\n    arr1.push(arr[a].name)\n}\nmsg.payload = arr1\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1680,
        "wires": [
            [
                "447c766c1a85c49a"
            ]
        ]
    },
    {
        "id": "c0b147f0f34769a1",
        "type": "function",
        "z": "2d47d0348f062886",
        "name": "判断连接状态",
        "func": "var count = context.get('count')||[0,0];\n//count[0] 连接成功次数\n//count[1]连接错误次数\nif(msg.payload == '连接正常'){\n    count[0] = count[0] + 1\n    context.set('count',count);\n    return null\n}else{\n    count[1] = count[1] + 1\n    if(count[1] >= 5){\n        if(count[0] == 0){\n             msg.topic = '0'\n            count[1] = 0\n            context.set('count',count);\n            return msg;\n        }else{\n            count = [0,0]\n            context.set('count',count);\n            return null\n        }\n    }\n    context.set('count',count);\n    return null\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1560,
        "wires": [
            [
                "019340b2c81c126e",
                "f8936c472372c9ca"
            ]
        ]
    },
    {
        "id": "449781a1d68b186d",
        "type": "link in",
        "z": "2d47d0348f062886",
        "name": "",
        "links": [
            "019340b2c81c126e"
        ],
        "x": 395,
        "y": 760,
        "wires": [
            [
                "c3954da1757d0960"
            ]
        ]
    },
    {
        "id": "019340b2c81c126e",
        "type": "link out",
        "z": "2d47d0348f062886",
        "name": "",
        "mode": "link",
        "links": [
            "449781a1d68b186d"
        ],
        "x": 1325,
        "y": 1560,
        "wires": []
    },
    {
        "id": "4faa59c19ff81afe",
        "type": "switch",
        "z": "2d47d0348f062886",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 850,
        "y": 820,
        "wires": [
            [
                "8787e53e10616bab"
            ]
        ]
    },
    {
        "id": "e0112db317d0fbb1",
        "type": "api-current-state",
        "z": "2d47d0348f062886",
        "name": "",
        "server": "a5e643a4b8a035cf",
        "version": 3,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "sensor.jie_dian_xuan_ze",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "state",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 280,
        "y": 1420,
        "wires": [
            [
                "678316b53583a30c"
            ]
        ]
    },
    {
        "id": "243bad553ca53b04",
        "type": "inject",
        "z": "2d47d0348f062886",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 1500,
        "wires": [
            [
                "01eaaf0dbb6e8651"
            ]
        ]
    },
    {
        "id": "18556a1bcf6078ba",
        "type": "function",
        "z": "2d47d0348f062886",
        "name": "",
        "func": "msg.url ='http://192.168.0.213:9090/ui/?host=192.168.0.213&port=9090&secret=123456'\nmsg.headers = {\n    'Cookie': 'agh_session=e8dc8a70b7b509eb4b1698564924210b',\n    'Host': '192.168.0.213:9090',\n    // If-Modified-Since: Sat, 26 Mar 2022 01:36:39 GMT\n    'Upgrade-Insecure-Requests': '1',\n    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.74 Safari/537.36 Edg/99.0.1150.55'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 1740,
        "wires": [
            [
                "bf1a4778b487973d"
            ]
        ]
    },
    {
        "id": "bf1a4778b487973d",
        "type": "http request",
        "z": "2d47d0348f062886",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 700,
        "y": 1740,
        "wires": [
            [
                "8a45c58996906376"
            ]
        ]
    },
    {
        "id": "8a4e9d1e84609412",
        "type": "switch",
        "z": "2d47d0348f062886",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 410,
        "y": 1740,
        "wires": [
            [
                "a4159ceb7d5514e8"
            ],
            [
                "18556a1bcf6078ba"
            ]
        ]
    },
    {
        "id": "8a45c58996906376",
        "type": "switch",
        "z": "2d47d0348f062886",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 850,
        "y": 1740,
        "wires": [
            [
                "3b981e242549045b"
            ]
        ]
    },
    {
        "id": "d6a27028857219c2",
        "type": "function",
        "z": "2d47d0348f062886",
        "name": "",
        "func": "\nvar state1 = global.get('state1') || false;\n\nif(state1 == true){\n    msg.topic = '1'\n}else{\n    msg.topic = '3'\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 1740,
        "wires": [
            [
                "8a4e9d1e84609412"
            ]
        ]
    },
    {
        "id": "4489dc8343172b9c",
        "type": "function",
        "z": "2d47d0348f062886",
        "name": "",
        "func": "var state1 = global.get('state1') || false;\nglobal.set(\"state1\",false);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 640,
        "wires": [
            [
                "0035c2f4855198c7"
            ]
        ]
    },
    {
        "id": "3b981e242549045b",
        "type": "function",
        "z": "2d47d0348f062886",
        "name": "",
        "func": "var state1 = global.get('state1');\nglobal.set(\"state1\",true);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1740,
        "wires": [
            [
                "724656b6e18a172b"
            ]
        ]
    },
    {
        "id": "724656b6e18a172b",
        "type": "debug",
        "z": "2d47d0348f062886",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 1740,
        "wires": []
    },
    {
        "id": "fbbd9b97a4706c37",
        "type": "function",
        "z": "2d47d0348f062886",
        "name": "",
        "func": "\nvar state1 = global.get('state1') || false;\n\nif(state1 == true){\n    msg.topic = '1'\n}else{\n    msg.topic = '3'\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 1680,
        "wires": [
            [
                "d352549c331dcd9a"
            ]
        ]
    },
    {
        "id": "d352549c331dcd9a",
        "type": "switch",
        "z": "2d47d0348f062886",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 370,
        "y": 1680,
        "wires": [
            [
                "b61f71e605330b2a"
            ],
            [
                "18556a1bcf6078ba"
            ]
        ]
    },
    {
        "id": "f8936c472372c9ca",
        "type": "debug",
        "z": "2d47d0348f062886",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1230,
        "y": 1620,
        "wires": []
    },
    {
        "id": "0035c2f4855198c7",
        "type": "debug",
        "z": "2d47d0348f062886",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 640,
        "wires": []
    },
    {
        "id": "0badc744f1b956c9",
        "type": "link out",
        "z": "2d47d0348f062886",
        "name": "发邮件",
        "mode": "link",
        "links": [
            "7bcc9e0bad949cea"
        ],
        "x": 1135,
        "y": 360,
        "wires": []
    },
    {
        "id": "17e7c93fb2cab104",
        "type": "inject",
        "z": "5646dda1b303b00d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 80,
        "wires": [
            [
                "7189ec697aaf600f"
            ]
        ]
    },
    {
        "id": "7189ec697aaf600f",
        "type": "exec",
        "z": "5646dda1b303b00d",
        "command": "ls -l /data/flows.json",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "文件时间戳",
        "x": 290,
        "y": 80,
        "wires": [
            [
                "1cfd2da6a38e2d4f"
            ],
            [],
            []
        ]
    },
    {
        "id": "1cfd2da6a38e2d4f",
        "type": "function",
        "z": "5646dda1b303b00d",
        "name": "判断变化",
        "func": "if(context.flow.get('justChanged')==msg.payload){\n    msg.payload = 1;\n    return msg;\n}\n\ncontext.flow.set('justChanged',msg.payload);\nmsg.payload = 2;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 480,
        "y": 80,
        "wires": [
            [
                "0af429e2eba91ca9"
            ]
        ]
    },
    {
        "id": "0af429e2eba91ca9",
        "type": "switch",
        "z": "5646dda1b303b00d",
        "name": "修改过",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 110,
        "y": 180,
        "wires": [
            [
                "b061ae01129df64a"
            ]
        ]
    },
    {
        "id": "b061ae01129df64a",
        "type": "exec",
        "z": "5646dda1b303b00d",
        "command": "cd /data;git add .;git commit -m 'auto commit';git push",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "提交git",
        "x": 270,
        "y": 180,
        "wires": [
            [],
            [
                "153d9ffa6d1cbe04"
            ],
            []
        ]
    },
    {
        "id": "153d9ffa6d1cbe04",
        "type": "debug",
        "z": "5646dda1b303b00d",
        "name": "记录日志",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 180,
        "wires": []
    },
    {
        "id": "fe13f538af391a71",
        "type": "function",
        "z": "f936bcfefd29972a",
        "name": "数据解密",
        "func": "/*\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.1 Copyright (C) Paul Johnston 1999 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\n\n/*\n * Configurable variables. You may need to tweak these to be compatible with\n * the server-side, but the defaults work in most cases.\n */\nvar hexcase = 0;  /* hex output format. 0 - lowercase; 1 - uppercase        */\nvar b64pad  = \"\"; /* base-64 pad character. \"=\" for strict RFC compliance   */\nvar chrsz   = 8;  /* bits per input character. 8 - ASCII; 16 - Unicode      */\n\n/*\n * These are the functions you'll usually want to call\n * They take string arguments and return either hex or base-64 encoded strings\n */\nfunction hex_md5(s){ return binl2hex(core_md5(str2binl(s), s.length * chrsz));}\nfunction b64_md5(s){ return binl2b64(core_md5(str2binl(s), s.length * chrsz));}\nfunction str_md5(s){ return binl2str(core_md5(str2binl(s), s.length * chrsz));}\nfunction hex_hmac_md5(key, data) { return binl2hex(core_hmac_md5(key, data)); }\nfunction b64_hmac_md5(key, data) { return binl2b64(core_hmac_md5(key, data)); }\nfunction str_hmac_md5(key, data) { return binl2str(core_hmac_md5(key, data)); }\n\n/*\n * Perform a simple self-test to see if the VM is working\n */\nfunction md5_vm_test()\n{\n  return hex_md5(\"abc\") == \"900150983cd24fb0d6963f7d28e17f72\";\n}\n\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length\n */\nfunction core_md5(x, len)\n{\n  /* append padding */\n  x[len >> 5] |= 0x80 << ((len) % 32);\n  x[(((len + 64) >>> 9) << 4) + 14] = len;\n\n  var a =  1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d =  271733878;\n\n  for(var i = 0; i < x.length; i += 16)\n  {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n\n    a = md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936);\n    d = md5_ff(d, a, b, c, x[i+ 1], 12, -389564586);\n    c = md5_ff(c, d, a, b, x[i+ 2], 17,  606105819);\n    b = md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330);\n    a = md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897);\n    d = md5_ff(d, a, b, c, x[i+ 5], 12,  1200080426);\n    c = md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341);\n    b = md5_ff(b, c, d, a, x[i+ 7], 22, -45705983);\n    a = md5_ff(a, b, c, d, x[i+ 8], 7 ,  1770035416);\n    d = md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417);\n    c = md5_ff(c, d, a, b, x[i+10], 17, -42063);\n    b = md5_ff(b, c, d, a, x[i+11], 22, -1990404162);\n    a = md5_ff(a, b, c, d, x[i+12], 7 ,  1804603682);\n    d = md5_ff(d, a, b, c, x[i+13], 12, -40341101);\n    c = md5_ff(c, d, a, b, x[i+14], 17, -1502002290);\n    b = md5_ff(b, c, d, a, x[i+15], 22,  1236535329);\n\n    a = md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510);\n    d = md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632);\n    c = md5_gg(c, d, a, b, x[i+11], 14,  643717713);\n    b = md5_gg(b, c, d, a, x[i+ 0], 20, -373897302);\n    a = md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691);\n    d = md5_gg(d, a, b, c, x[i+10], 9 ,  38016083);\n    c = md5_gg(c, d, a, b, x[i+15], 14, -660478335);\n    b = md5_gg(b, c, d, a, x[i+ 4], 20, -405537848);\n    a = md5_gg(a, b, c, d, x[i+ 9], 5 ,  568446438);\n    d = md5_gg(d, a, b, c, x[i+14], 9 , -1019803690);\n    c = md5_gg(c, d, a, b, x[i+ 3], 14, -187363961);\n    b = md5_gg(b, c, d, a, x[i+ 8], 20,  1163531501);\n    a = md5_gg(a, b, c, d, x[i+13], 5 , -1444681467);\n    d = md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784);\n    c = md5_gg(c, d, a, b, x[i+ 7], 14,  1735328473);\n    b = md5_gg(b, c, d, a, x[i+12], 20, -1926607734);\n\n    a = md5_hh(a, b, c, d, x[i+ 5], 4 , -378558);\n    d = md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463);\n    c = md5_hh(c, d, a, b, x[i+11], 16,  1839030562);\n    b = md5_hh(b, c, d, a, x[i+14], 23, -35309556);\n    a = md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060);\n    d = md5_hh(d, a, b, c, x[i+ 4], 11,  1272893353);\n    c = md5_hh(c, d, a, b, x[i+ 7], 16, -155497632);\n    b = md5_hh(b, c, d, a, x[i+10], 23, -1094730640);\n    a = md5_hh(a, b, c, d, x[i+13], 4 ,  681279174);\n    d = md5_hh(d, a, b, c, x[i+ 0], 11, -358537222);\n    c = md5_hh(c, d, a, b, x[i+ 3], 16, -722521979);\n    b = md5_hh(b, c, d, a, x[i+ 6], 23,  76029189);\n    a = md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487);\n    d = md5_hh(d, a, b, c, x[i+12], 11, -421815835);\n    c = md5_hh(c, d, a, b, x[i+15], 16,  530742520);\n    b = md5_hh(b, c, d, a, x[i+ 2], 23, -995338651);\n\n    a = md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844);\n    d = md5_ii(d, a, b, c, x[i+ 7], 10,  1126891415);\n    c = md5_ii(c, d, a, b, x[i+14], 15, -1416354905);\n    b = md5_ii(b, c, d, a, x[i+ 5], 21, -57434055);\n    a = md5_ii(a, b, c, d, x[i+12], 6 ,  1700485571);\n    d = md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606);\n    c = md5_ii(c, d, a, b, x[i+10], 15, -1051523);\n    b = md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799);\n    a = md5_ii(a, b, c, d, x[i+ 8], 6 ,  1873313359);\n    d = md5_ii(d, a, b, c, x[i+15], 10, -30611744);\n    c = md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380);\n    b = md5_ii(b, c, d, a, x[i+13], 21,  1309151649);\n    a = md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070);\n    d = md5_ii(d, a, b, c, x[i+11], 10, -1120210379);\n    c = md5_ii(c, d, a, b, x[i+ 2], 15,  718787259);\n    b = md5_ii(b, c, d, a, x[i+ 9], 21, -343485551);\n\n    a = safe_add(a, olda);\n    b = safe_add(b, oldb);\n    c = safe_add(c, oldc);\n    d = safe_add(d, oldd);\n  }\n  return Array(a, b, c, d);\n\n}\n\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\nfunction md5_cmn(q, a, b, x, s, t)\n{\n  return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s),b);\n}\nfunction md5_ff(a, b, c, d, x, s, t)\n{\n  return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);\n}\nfunction md5_gg(a, b, c, d, x, s, t)\n{\n  return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);\n}\nfunction md5_hh(a, b, c, d, x, s, t)\n{\n  return md5_cmn(b ^ c ^ d, a, b, x, s, t);\n}\nfunction md5_ii(a, b, c, d, x, s, t)\n{\n  return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);\n}\n\n/*\n * Calculate the HMAC-MD5, of a key and some data\n */\nfunction core_hmac_md5(key, data)\n{\n  var bkey = str2binl(key);\n  if(bkey.length > 16) bkey = core_md5(bkey, key.length * chrsz);\n\n  var ipad = Array(16), opad = Array(16);\n  for(var i = 0; i < 16; i++)\n  {\n    ipad[i] = bkey[i] ^ 0x36363636;\n    opad[i] = bkey[i] ^ 0x5C5C5C5C;\n  }\n\n  var hash = core_md5(ipad.concat(str2binl(data)), 512 + data.length * chrsz);\n  return core_md5(opad.concat(hash), 512 + 128);\n}\n\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\nfunction safe_add(x, y)\n{\n  var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return (msw << 16) | (lsw & 0xFFFF);\n}\n\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\nfunction bit_rol(num, cnt)\n{\n  return (num << cnt) | (num >>> (32 - cnt));\n}\n\n/*\n * Convert a string to an array of little-endian words\n * If chrsz is ASCII, characters >255 have their hi-byte silently ignored.\n */\nfunction str2binl(str)\n{\n  var bin = Array();\n  var mask = (1 << chrsz) - 1;\n  for(var i = 0; i < str.length * chrsz; i += chrsz)\n    bin[i>>5] |= (str.charCodeAt(i / chrsz) & mask) << (i%32);\n  return bin;\n}\n\n/*\n * Convert an array of little-endian words to a string\n */\nfunction binl2str(bin)\n{\n  var str = \"\";\n  var mask = (1 << chrsz) - 1;\n  for(var i = 0; i < bin.length * 32; i += chrsz)\n    str += String.fromCharCode((bin[i>>5] >>> (i % 32)) & mask);\n  return str;\n}\n\n/*\n * Convert an array of little-endian words to a hex string.\n */\nfunction binl2hex(binarray)\n{\n  var hex_tab = hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\n  var str = \"\";\n  for(var i = 0; i < binarray.length * 4; i++)\n  {\n    str += hex_tab.charAt((binarray[i>>2] >> ((i%4)*8+4)) & 0xF) +\n           hex_tab.charAt((binarray[i>>2] >> ((i%4)*8  )) & 0xF);\n  }\n  return str;\n}\n\n/*\n * Convert an array of little-endian words to a base-64 string\n */\nfunction binl2b64(binarray)\n{\n  var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n  var str = \"\";\n  for(var i = 0; i < binarray.length * 4; i += 3)\n  {\n    var triplet = (((binarray[i   >> 2] >> 8 * ( i   %4)) & 0xFF) << 16)\n                | (((binarray[i+1 >> 2] >> 8 * ((i+1)%4)) & 0xFF) << 8 )\n                |  ((binarray[i+2 >> 2] >> 8 * ((i+2)%4)) & 0xFF);\n    for(var j = 0; j < 4; j++)\n    {\n      if(i * 8 + j * 6 > binarray.length * 32) str += b64pad;\n      else str += tab.charAt((triplet >> 6*(3-j)) & 0x3F);\n    }\n  }\n  return str;\n}\n\n\n\n\n\n//获取CODE\nfunction abc(id1,id2) {\n    var _pr = id1;\n    var _pu = id2;\n    var _puArr = [];\n    var _newArr = [];\n    var _code = '';\n\n    for (var i = 0; i < _pu.length; i++) {\n        _puArr.push({'id': _pu[i], 'text': _pr[i]});//将新元素添加到数组的末尾，并返回新的长度。\n    }\n//对密钥重新进行排序\n    _newArr = _puArr.sort(compare(\"id\"));\n    for (var n = 0; n < _newArr.length; n++) {\n\n        _code += _newArr[n]['text'];\n    }\n    return _code\n}\n\nfunction compare(_0x209a13) {\n    var _0x2b0a5b = {\n        'hupwx': function(_0x28592c, _0x5c0aae) {\n            return _0x28592c - _0x5c0aae;\n        }\n    };\n    return function(_0x4490c6, _0x47bde8) {\n        var _0x11d139 = _0x4490c6[_0x209a13];\n        var _0x2b383f = _0x47bde8[_0x209a13];\n        return _0x2b0a5b['hupwx'](_0x11d139, _0x2b383f);\n    }\n        ;\n}\n\n//通过加密的URL和abc函数获取的CODE，进行AES解密\nfunction secret(enStr, code) {\n    code = hex_md5(code); //32位md5  //修改\n    var iv = code.substring(0, 16);  //取前16位\n    var key = code.substring(16);    //取后16位\n    //return CryptoJS['AES']['decrypt'](enStr, key, {\n    //    'iv': iv,\n    //    'padding': CryptoJS['pad']['Pkcs7']\n    //})['toString'](CryptoJS['enc']['Utf8']);\n    msg.iv = iv\n    msg.key = key\n    //msg.payload = enStr\n    return msg\n}\n\n\n//var id1 = \"STjYY8dGUW\"\n//var id2 = \"1023469758\"\n//var code1 = abc(id1,id2)\n//var enurl = \"Nz84DMyw9UfIWXLWhcnJtjho0ZbUnA+3Hsa+4ohVAPu4ClmQy7O/EgCfdfn0uP67GJnEqxxKPIUierd/0DEeacbYkvK2euLMISNBYplmWUqEiDMVx5D3+qPfbgImdTPjoYToH0l07kw/rtEHdCGJLR/TEcdm/wF6auf/hiPUxjUYesZL6mr39Z0B67z2TIReqKZWIAcN5jNDqg2wd3xvD3MJ7U4xtJr+A35j/SGTQrhOAh2WguPQrigc0zDsKyVBvhP45fP8ChxFt/wfjFPF/mKRiX737g+7s5anW6E+4D+BkhcJHtkrZxalsMwQPdP6u7IXj+o3SvB5MSCY1hiBdIKWcq62QoDk/x7H/9Z0K5Ec1OFDDuado/1qgRt+TW7YhR3M51F3hE+qurn9w+jm9n7HIAu4DPh3ptWclDzR8/5CEYWhBL4KmxPTJNWA1oPkpsUvwu3JV3V+OXxQVOs8tpeciqBL6Ffjmm9717uEGdVlBnVAvKBgJw3TaCEVIXve1npGE8jO02z32Zp1KG4Qxw==\"\n//msg.ab = secret(enurl, code1)\n\nvar id1 = msg.id1\nvar id2 = msg.id2\nvar code1 = abc(id1,id2)\n//msg.payload = \"\"\nvar enurl = msg.enurl\n//msg.code1=code1\nsecret(enurl, code1)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 100,
        "y": 340,
        "wires": [
            [
                "ac0ba2fd437ac44c"
            ]
        ]
    },
    {
        "id": "9468455c333c2f37",
        "type": "function",
        "z": "f936bcfefd29972a",
        "name": "解析地址",
        "func": "//url = \"https://v.qq.com/x/cover/m441e3rjq9kwpsc/h00426dqsjd.html\"\nurl = msg.hurl[msg.count]\nmsg.url = \"https://jx.parwix.com:4433/player/analysis.php?v=\"+url\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 240,
        "wires": [
            [
                "21af72c8b35f1a0d"
            ]
        ]
    },
    {
        "id": "21af72c8b35f1a0d",
        "type": "http request",
        "z": "f936bcfefd29972a",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "persist": false,
        "authType": "",
        "senderr": false,
        "x": 440,
        "y": 240,
        "wires": [
            [
                "5a0c7f92b542e8db"
            ]
        ]
    },
    {
        "id": "5a0c7f92b542e8db",
        "type": "function",
        "z": "f936bcfefd29972a",
        "name": "",
        "func": "var html = msg.payload\nvar id1 = /id=\"vod_(.*?)\"/.exec(html);\nvar id2 = /id=\"vod_([0-9]{10})\"/.exec(html);\nvar enurl = /\"url\": \"(.*?)\"/.exec(html);\nmsg.id1 = id1[1]\nmsg.id2=id2[1]\nmsg.enurl = enurl[1]\nmsg.payload = []\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 240,
        "wires": [
            [
                "fe13f538af391a71"
            ]
        ]
    },
    {
        "id": "2e679043967dd87b",
        "type": "function",
        "z": "f936bcfefd29972a",
        "name": "发送数据",
        "func": "\n//msg.payload='O7Hbb8RzGxfLcTZM0vRPOtUFWktElIzDbmnnNlosqN9h21mqvM0TEXiTwrjAwvzhEYUl9L7OWr9VFTYcIxwBheYS6xQEXlnt6bW2qndHrKIhIhAuApryK6ltIRXjnqaBYxJK9%2BRrBjROl4Uo8lUcJfzSThkJUr3WZ6wLLNXWeJhCz0IS7i1e35M55tvChQGu7NHNXDdtLifilsbWqAHjYs%2BJz4X0d0PfgIN5w3%2FAE83ymZ2j2TWBeKXLfBSmxUKfdqCDzXXNG8pcYuwX3rWmQwKvqiLk4ZrBH7LHFAMbrK5NWO%2BKAxErdWdos6skmpUBpKsmJQ%2FeZQCqD759b4iD167Scj9soaR2u5rUl6peslIHnl7lrFSA549WgywDq6b78S3LyU7IS5s%2Fsrzeom54iMKvLjHsscH0n%2Fr9nw7ryAfQ9TngtEb27%2FOt9l6G5SsL0HeUmtl5HmQaXgmLzqgb4ZlWPN7obuu3DothARVbXhkWNwzRa7SFBrC1pHzPPdQAK2mzIdSENugVlvaZkHNYlG7S%2FBMrjHFPGGMh7ASnPj93maVaOQf6%2Fxk540gD%2B1KV39uSCRE%2BlZwe3Ri%2BxQGyDkQJb5TKvUyTbuSQNqT1baw%3D'\nmsg.payload='data='+msg.payload+'&type=aes_decrypt&encode=Base64&key='+msg.key+'&digit=128&mode=CBC&pad=Pkcs5Padding&iv='+msg.iv\nmsg.headers = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n}\nmsg.url = \"\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 340,
        "wires": [
            [
                "615772126df71e14"
            ]
        ]
    },
    {
        "id": "615772126df71e14",
        "type": "http request",
        "z": "f936bcfefd29972a",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://www.mklab.cn/utils/handle",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 580,
        "y": 340,
        "wires": [
            [
                "88266a1091e85134"
            ]
        ]
    },
    {
        "id": "9057e80b4dfa1328",
        "type": "debug",
        "z": "f936bcfefd29972a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 340,
        "wires": []
    },
    {
        "id": "ac0ba2fd437ac44c",
        "type": "function",
        "z": "f936bcfefd29972a",
        "name": "编码",
        "func": "var enurl = msg.enurl\n\nvar a = enurl.replace(/=/g, \"%3D\")\nvar b = a.replace(/\\//g, \"%2F\")\nmsg.payload = b.replace(/\\+/g, \"%2B\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 340,
        "wires": [
            [
                "2e679043967dd87b"
            ]
        ]
    },
    {
        "id": "95c6912954269256",
        "type": "function",
        "z": "f936bcfefd29972a",
        "name": "",
        "func": "//msg.payload={\"url\":\"https://om.tc.qq.com/gzc_1000102_0b537aaaeaaawuahjsrlinrmb6gdal7aabsa.f10218.mp4?vkey=EA074FA79C1491CF3F4911110422CA19FCFF9528388E9D8536C3E4924D32FCBC947BB6E0D15ED4688774ADC8BD5E3984F10E59556D2BBAA83DA1CDBA4B9D98D6C51F6C76985A2E012849C54F272107B0D29019F1CE3A017683771536AEBD5C0B2E74F435FBD1C5A6D50D4C6D7C00AC6B5D04E3D1AD40E6C98179104A372B11F8CE695EF4D5D284C7&sdtfrom=v1080&type=mp4&platform=10201&br=117&fmt=hd&sp=0&guid=1F78117BB3DD94210EC924D61BBE1F21FD660D84\"}\n\nvar url = msg.payload.result\nvar name = (msg.count+1).toString()+\".mp4\"\nvar dir = \"/downloads/\"+msg.name1\nmsg.payload = {}\n\nmsg.payload = {\n    \"jsonrpc\":\"2.0\",\n    \"method\":\"aria2.addUri\",\n    \"id\":\"QXJpYU5nXzE2NDcwODAyMjFfMC4wNjE0NDQxMTQ5NzI0MzA1Mg==\",\n    \"params\":[\"token:P3TERX\",[url],{\n        \"out\": name,\n        \"dir\": dir\n    }]\n}\n\nmsg.url = \"http://192.168.0.210:6800/jsonrpc\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 420,
        "wires": [
            [
                "205b5538c57fad97"
            ]
        ]
    },
    {
        "id": "205b5538c57fad97",
        "type": "http request",
        "z": "f936bcfefd29972a",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 420,
        "y": 420,
        "wires": [
            [
                "48c85de211275e0b"
            ]
        ]
    },
    {
        "id": "50d14380133b26f1",
        "type": "inject",
        "z": "f936bcfefd29972a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 420,
        "wires": [
            [
                "95c6912954269256"
            ]
        ]
    },
    {
        "id": "48c85de211275e0b",
        "type": "debug",
        "z": "f936bcfefd29972a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 420,
        "wires": []
    },
    {
        "id": "88266a1091e85134",
        "type": "json",
        "z": "f936bcfefd29972a",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 730,
        "y": 340,
        "wires": [
            [
                "9057e80b4dfa1328",
                "95c6912954269256"
            ]
        ]
    },
    {
        "id": "e0837fb8765b5415",
        "type": "function",
        "z": "f936bcfefd29972a",
        "name": "合成地址1",
        "func": "//href=\"https://v.qq.com/x/cover/\"+msg.payload[1]+\"/m00253deqqo.html\"\nmsg.url = \"https://v.qq.com/x/cover/\"+msg.payload[1]+\"/\"+msg.payload[2]+\".html\"\nmsg.vid = msg.payload[1]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 110,
        "y": 160,
        "wires": [
            [
                "5f7cf4e1acd6761c"
            ]
        ]
    },
    {
        "id": "5f7cf4e1acd6761c",
        "type": "http request",
        "z": "f936bcfefd29972a",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "persist": false,
        "authType": "",
        "senderr": false,
        "x": 280,
        "y": 160,
        "wires": [
            [
                "e442c0011415cc9e"
            ]
        ]
    },
    {
        "id": "77f5e805c783dc4d",
        "type": "inject",
        "z": "f936bcfefd29972a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "斗罗大陆",
        "payloadType": "str",
        "x": 100,
        "y": 60,
        "wires": [
            [
                "37997b3009e518a0"
            ]
        ]
    },
    {
        "id": "e442c0011415cc9e",
        "type": "function",
        "z": "f936bcfefd29972a",
        "name": "匹配地址参数",
        "func": "var url = []\nvar reg = /\"F\":\\d,\"V\":\"(.*?)\"/g\n//var text = \"\";\nvar i;\nfor (i = 0; i < 410; i++) {\n    url[i] = reg.exec(msg.payload)\n    if(reg.lastIndex==0){\n        msg.payload=url\n        return msg;\n    }\n  //text += \"The number is \" + i + \"<br>\";\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 160,
        "wires": [
            [
                "09d303c90655af90"
            ]
        ]
    },
    {
        "id": "37997b3009e518a0",
        "type": "function",
        "z": "f936bcfefd29972a",
        "name": "搜索数据",
        "func": "url = \"https://v.qq.com/x/search/?q=\"+msg.payload+\"&stag=102&smartbox_ab=\"\nmsg.url = url\nmsg.name1 = msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 60,
        "wires": [
            [
                "7fad866da316b261"
            ]
        ]
    },
    {
        "id": "7fad866da316b261",
        "type": "http request",
        "z": "f936bcfefd29972a",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "persist": false,
        "authType": "",
        "senderr": false,
        "x": 440,
        "y": 60,
        "wires": [
            [
                "191ed70ca8b1975e"
            ]
        ]
    },
    {
        "id": "191ed70ca8b1975e",
        "type": "function",
        "z": "f936bcfefd29972a",
        "name": "正则匹配地址",
        "func": "var reg=/href=\"https:\\/\\/v.qq.com\\/x\\/cover\\/(.*?)\\/(.*?).html\"/\nret = reg.exec(msg.payload)\nmsg.payload = ret\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 60,
        "wires": [
            [
                "e0837fb8765b5415"
            ]
        ]
    },
    {
        "id": "09d303c90655af90",
        "type": "function",
        "z": "f936bcfefd29972a",
        "name": "hurl地址",
        "func": "//msg.payload=url\nvar n;\nvar hurl = []\nvar rsg = msg.payload\nvar a = (rsg.length + 1)/2\nfor (n = 0; n < (rsg.length - 1)/2; n++) {\n    hurl.push(\"https://v.qq.com/x/cover/\"+msg.vid+\"/\"+msg.payload[n][1]+\".html\")\n}\nmsg.hurl = hurl\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 160,
        "wires": [
            [
                "4480ecb71d21e59e"
            ]
        ]
    },
    {
        "id": "4480ecb71d21e59e",
        "type": "function",
        "z": "f936bcfefd29972a",
        "name": "计数",
        "func": "var count = context.get('count')||190;\ncount = count + 1\nmsg.count = count - 2\ncontext.set('count',count);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 160,
        "wires": [
            [
                "18c2e27f4462868d",
                "9468455c333c2f37"
            ]
        ]
    },
    {
        "id": "18c2e27f4462868d",
        "type": "debug",
        "z": "f936bcfefd29972a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 160,
        "wires": []
    },
    {
        "id": "8863ac637c0f61ef",
        "type": "inject",
        "z": "f936bcfefd29972a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 240,
        "wires": [
            [
                "9468455c333c2f37"
            ]
        ]
    },
    {
        "id": "b4a25ca4eefb9fea",
        "type": "function",
        "z": "e3562182c0530220",
        "name": "数据解密",
        "func": "const CryptoJS = global.get('CryptoJS')\nfunction Decrypt(word,key,iv) {\n    let encryptedHexStr = CryptoJS.enc.Base64.parse(word);\n    let srcs = CryptoJS.enc.Base64.stringify(encryptedHexStr);\n    let decrypt = CryptoJS.AES.decrypt(srcs, key, { iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 });\n    let decryptedStr = decrypt.toString(CryptoJS.enc.Utf8);\n    return decryptedStr.toString();\n}\n\n\n//获取CODE\nfunction abc(id1,id2) {\n    var _pr = id1;\n    var _pu = id2;\n    var _puArr = [];\n    var _newArr = [];\n    var _code = '';\n\n    for (var i = 0; i < _pu.length; i++) {\n        _puArr.push({'id': _pu[i], 'text': _pr[i]});//将新元素添加到数组的末尾，并返回新的长度。\n    }\n//对密钥重新进行排序\n    _newArr = _puArr.sort(compare(\"id\"));\n    for (var n = 0; n < _newArr.length; n++) {\n\n        _code += _newArr[n]['text'];\n    }\n    return _code\n}\n\nfunction compare(_0x209a13) {\n    var _0x2b0a5b = {\n        'hupwx': function(_0x28592c, _0x5c0aae) {\n            return _0x28592c - _0x5c0aae;\n        }\n    };\n    return function(_0x4490c6, _0x47bde8) {\n        var _0x11d139 = _0x4490c6[_0x209a13];\n        var _0x2b383f = _0x47bde8[_0x209a13];\n        return _0x2b0a5b['hupwx'](_0x11d139, _0x2b383f);\n    }\n        ;\n}\n\n//通过加密的URL和abc函数获取的CODE，进行AES解密\nfunction secret(enStr, code) {\n    code = CryptoJS.MD5(code).toString(); //32位md5  //修改\n    var iv1 = code.substring(0, 16);  //取前16位\n    var key1 = code.substring(16);    //取后16位\n\n    const key = CryptoJS.enc.Utf8.parse(key1);\n    const iv = CryptoJS.enc.Utf8.parse(iv1);\n    return Decrypt(enStr,key,iv)\n}\n\nvar code1 = abc(msg.id1,msg.id2)\nmsg.payload = secret(msg.enurl, code1)\nreturn msg\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 240,
        "wires": [
            [
                "d77fc4f252879d26"
            ]
        ]
    },
    {
        "id": "8302236d8c86173e",
        "type": "function",
        "z": "e3562182c0530220",
        "name": "解析地址",
        "func": "url = msg.hurl[msg.count]\nmsg.url = \"https://jx.parwix.com:4433/player/analysis.php?v=\"+url\nmsg.headers = {\n  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.74 Safari/537.36 Edg/99.0.1150.46'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 240,
        "wires": [
            [
                "c92aa5711b81cf1b"
            ]
        ]
    },
    {
        "id": "c92aa5711b81cf1b",
        "type": "http request",
        "z": "e3562182c0530220",
        "name": "解析请求",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 440,
        "y": 240,
        "wires": [
            [
                "2f1a688c6bd2e55c"
            ]
        ]
    },
    {
        "id": "2f1a688c6bd2e55c",
        "type": "function",
        "z": "e3562182c0530220",
        "name": "",
        "func": "var html = msg.payload\nvar id1 = /id=\"vod_(.*?)\"/.exec(html);\nvar id2 = /id=\"vod_([0-9]{10})\"/.exec(html);\nvar enurl = /\"url\": \"(.*?)\"/.exec(html);\nmsg.id1 = id1[1]\nmsg.id2=id2[1]\nmsg.enurl = enurl[1]\nmsg.payload = []\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 240,
        "wires": [
            [
                "b4a25ca4eefb9fea"
            ]
        ]
    },
    {
        "id": "fb8044923bd345ae",
        "type": "debug",
        "z": "e3562182c0530220",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1290,
        "y": 300,
        "wires": []
    },
    {
        "id": "46eaf9476dfd7dbe",
        "type": "function",
        "z": "e3562182c0530220",
        "name": "下载数据",
        "func": "msg.payload = {\n    \"jsonrpc\":\"2.0\",\n    \"method\":\"aria2.addUri\",\n    \"id\":\"QXJpYU5nXzE2NDcwODAyMjFfMC4wNjE0NDQxMTQ5NzI0MzA1Mg==\",\n    \"params\":[\"token:P3TERX\",[msg.url],{\n        \"out\": msg.name,\n        \"dir\": msg.dir\n    }]\n}\nmsg.url = \"http://192.168.0.210:6800/jsonrpc\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 300,
        "wires": [
            [
                "9ef716d8da155c8d"
            ]
        ]
    },
    {
        "id": "9ef716d8da155c8d",
        "type": "http request",
        "z": "e3562182c0530220",
        "name": "下载请求",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1140,
        "y": 300,
        "wires": [
            [
                "fb8044923bd345ae"
            ]
        ]
    },
    {
        "id": "1f258e6059572f7e",
        "type": "http request",
        "z": "e3562182c0530220",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "persist": false,
        "authType": "",
        "senderr": false,
        "x": 280,
        "y": 160,
        "wires": [
            [
                "a2ed61e0b7c1379d"
            ]
        ]
    },
    {
        "id": "a2ed61e0b7c1379d",
        "type": "function",
        "z": "e3562182c0530220",
        "name": "匹配地址参数合成地址",
        "func": "var url = []\nvar reg = /\"F\":\\d,\"V\":\"(.*?)\"/g\n\nfor (var i = 0; i < 1000; i++) {\n    url[i] = reg.exec(msg.payload)\n    if(reg.lastIndex==0){\n        msg.payload=url\n        break\n    }\n}\n\n\nvar hurl = []\nvar rsg = msg.payload\nvar a = (rsg.length + 1)/2\nfor (var n = 0; n < (rsg.length - 1)/2; n++) {\n    hurl.push(\"https://v.qq.com/x/cover/\"+msg.vid+\"/\"+msg.payload[n][1]+\".html\")\n}\nmsg.hurl = hurl\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 160,
        "wires": [
            [
                "8302236d8c86173e"
            ]
        ]
    },
    {
        "id": "e8fa4eda9cf19f98",
        "type": "function",
        "z": "e3562182c0530220",
        "name": "搜索数据",
        "func": "msg.url = \"https://v.qq.com/x/search/?q=\"+msg.payload.filepath+\"&stag=102&smartbox_ab=\"\nmsg.name1 = msg.payload.filepath\nmsg.count = Number(msg.payload.filepath1)-2\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 60,
        "wires": [
            [
                "8d8212f5c71789fa"
            ]
        ]
    },
    {
        "id": "8d8212f5c71789fa",
        "type": "http request",
        "z": "e3562182c0530220",
        "name": "搜索请求",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 440,
        "y": 60,
        "wires": [
            [
                "a1e7bdc073415811",
                "471e432e5dd44fce"
            ]
        ]
    },
    {
        "id": "a1e7bdc073415811",
        "type": "function",
        "z": "e3562182c0530220",
        "name": "正则匹配地址",
        "func": "var reg=/href=\"https:\\/\\/v.qq.com\\/x\\/cover\\/(.*?)\\/(.*?).html\"/\nret = reg.exec(msg.payload)\n//msg.payload = ret\nmsg.url = \"https://v.qq.com/x/cover/\"+ret[1]+\"/\"+ret[2]+\".html\"\nmsg.vid = ret[1]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 60,
        "wires": [
            [
                "1f258e6059572f7e"
            ]
        ]
    },
    {
        "id": "4e0fad11af9aa7b5",
        "type": "ui_template",
        "z": "e3562182c0530220",
        "group": "32dbb2ecc043e986",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<script>\n    this.scope.action = function() {\n        var filepath = document.getElementById('filepath');\n        var filepath1 = document.getElementById('filepath1');\n        filepath1.value = Number(filepath1.value) + Number(1)\n        var value = {'filepath':filepath.value,'filepath1':filepath1.value};\n        return value; \n    }\n\n</script>\n<div id=\"pagewrap\">\n   1.影片名称：<br><textarea placeholder=\"请输入影片名称\" id=\"filepath\" cols=\"20\" rows=\"1\"></textarea><br>\n   2.下载集数：<br><textarea placeholder=\"请输入下载集数\" id=\"filepath1\" cols=\"20\" rows=\"1\"></textarea><br>\n    <md-button id=\"btn01\" ng-click=\"send({payload:action()})\">下载</md-button>\n    \n</div>\n<script>\n    var btn01 = document.getElementById('btn01')\n    btn01.onclick = function(){\n        //var filepath1 = document.getElementById('filepath1');\n        //var btn = document.getElementById('btn');\n        //filepath1.value = Number(filepath1.value) + Number(1)\n        alert(\"123\");\n    }\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 100,
        "y": 60,
        "wires": [
            [
                "e8fa4eda9cf19f98"
            ]
        ]
    },
    {
        "id": "471e432e5dd44fce",
        "type": "ui_template",
        "z": "e3562182c0530220",
        "group": "32dbb2ecc043e986",
        "name": "",
        "order": 1,
        "width": "20",
        "height": "23",
        "format": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\">\n<html>\n\n\t<head>\n\t\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n\t\t<title>添加删除记录练习</title>\n\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"ex_2_style/css.css\" />\n\t\t<script type=\"text/javascript\">\n\t\t\n\t\t\t/*\n\t\t\t * 删除tr的响应函数\n\t\t\t */\n\t\t\tfunction delA() {\n\n\t\t\t\t//点击超链接以后需要删除超链接所在的那行\n\t\t\t\t//这里我们点击那个超链接this就是谁\n\t\t\t\t//获取当前tr\n\t\t\t\tvar tr = this.parentNode.parentNode;\n\n\t\t\t\t//获取要删除的员工的名字\n\t\t\t\t//var name = tr.getElementsByTagName(\"td\")[0].innerHTML;\n\t\t\t\tvar name = tr.children[0].innerHTML;\n\n\t\t\t\t//删除之前弹出一个提示框\n\t\t\t\t/*\n\t\t\t\t * confirm()用于弹出一个带有确认和取消按钮的提示框\n\t\t\t\t * \t需要一个字符串作为参数，该字符串将会作为提示文字显示出来\n\t\t\t\t * 如果用户点击确认则会返回true，如果点击取消则返回false\n\t\t\t\t */\n\t\t\t\tvar flag = confirm(\"确认删除\" + name + \"吗?\");\n\n\t\t\t\t//如果用户点击确认\n\t\t\t\tif(flag) {\n\t\t\t\t\t//删除tr\n\t\t\t\t\ttr.parentNode.removeChild(tr);\n\t\t\t\t}\n\n\t\t\t\t/*\n\t\t\t\t * 点击超链接以后，超链接会跳转页面，这个是超链接的默认行为，\n\t\t\t\t * \t但是此时我们不希望出现默认行为，可以通过在响应函数的最后return false来取消默认行为\n\t\t\t\t */\n\t\t\t\treturn false;\n\t\t\t};\n\n\t\t\t\n\n\t\t\t\t/*\n\t\t\t\t * 点击超链接以后，删除一个员工的信息\n\t\t\t\t */\n\n\t\t\t\t//获取所有额超链接\n\t\t\t\tvar allA = document.getElementsByTagName(\"a\");\n\n\t\t\t\t//为每个超链接都绑定一个单击响应函数\n\t\t\t\tfor(var i = 0; i < allA.length; i++) {\n\t\t\t\t\tallA[i].onclick = delA;\n\t\t\t\t}\n\n\t\t\t\t/*\n\t\t\t\t * 添加员工的功能\n\t\t\t\t * \t- 点击按钮以后，将员工的信息添加到表格中\n\t\t\t\t */\n\n\t\t\t\t//为提交按钮绑定一个单击响应函数\n\t\t\t\tvar addEmpButton = document.getElementById(\"addEmpButton\");\n\t\t\t\taddEmpButton.onclick = function() {\n\n\t\t\t\t\t//获取用户添加的员工信息\n\t\t\t\t\t//获取员工的名字\n\t\t\t\t\tvar name = document.getElementById(\"empName\").value;\n\t\t\t\t\t//获取员工的email和salary\n\t\t\t\t\tvar email = document.getElementById(\"email\").value;\n\t\t\t\t\tvar salary = document.getElementById(\"salary\").value;\n\n\t\t\t\t\t//alert(name+\",\"+email+\",\"+salary);\n\t\t\t\t\t/*\n\t\t\t\t\t *  <tr>\n\t\t\t\t\t\t\t<td>Tom</td>\n\t\t\t\t\t\t\t<td>tom@tom.com</td>\n\t\t\t\t\t\t\t<td>5000</td>\n\t\t\t\t\t\t\t<td><a href=\"javascript:;\">Delete</a></td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t需要将获取到的信息保存到tr中\n\t\t\t\t\t */\n\n\t\t\t\t\t//创建一个tr\n\t\t\t\t\tvar tr = document.createElement(\"tr\");\n\n\t\t\t\t\t//设置tr中的内容\n\t\t\t\t\ttr.innerHTML = \"<td>\"+name+\"</td>\"+\n\t\t\t\t\t\t\t\t\t\"<td>\"+email+\"</td>\"+\n\t\t\t\t\t\t\t\t\t\"<td>\"+salary+\"</td>\"+\n\t\t\t\t\t\t\t\t\t\"<td><a href='javascript:;'>Delete</a></td>\";\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t//获取刚刚添加的a元素，并为其绑定单击响应函数\t\t\t\t\n\t\t\t\t\tvar a = tr.getElementsByTagName(\"a\")[0];\n\t\t\t\t\ta.onclick = delA;\n\t\t\t\t\t\n\t\t\t\t\t//获取table\n\t\t\t\t\tvar employeeTable = document.getElementById(\"employeeTable\");\n\t\t\t\t\t//获取employeeTable中的tbody\n\t\t\t\t\tvar tbody = employeeTable.getElementsByTagName(\"tbody\")[0];\n\t\t\t\t\t//将tr添加到tbodye中\n\t\t\t\t\ttbody.appendChild(tr);\n\t\t\t\t\t/*tbody.innerHTML += \"<tr>\"+\n\t\t\t\t\t\n\t\t\t\t\t\"<td>\"+name+\"</td>\"+\n\t\t\t\t\t\t\t\t\t\"<td>\"+email+\"</td>\"+\n\t\t\t\t\t\t\t\t\t\"<td>\"+salary+\"</td>\"+\n\t\t\t\t\t\t\t\t\t\"<td><a href='javascript:;'>Delete</a></td>\"\n\t\t\t\t\t\n\t\t\t\t\t+\"</tr>\";*/\n\n\t\t\t\t};\n\n\t\t\t\n\t\t</script>\n\t</head>\n\n\t<body>\n\n\t\t<table id=\"employeeTable\">\n\t\t\t<tr>\n\t\t\t\t<th>Name</th>\n\t\t\t\t<th>Email</th>\n\t\t\t\t<th>Salary</th>\n\t\t\t\t<th>&nbsp;</th>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td>Tom</td>\n\t\t\t\t<td>tom@tom.com</td>\n\t\t\t\t<td>5000</td>\n\t\t\t\t<td>\n\t\t\t\t\t<a href=\"javascript:;\">Delete</a>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td>Jerry</td>\n\t\t\t\t<td>jerry@sohu.com</td>\n\t\t\t\t<td>8000</td>\n\t\t\t\t<td>\n\t\t\t\t\t<a href=\"deleteEmp?id=002\">Delete</a>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td>Bob</td>\n\t\t\t\t<td>bob@tom.com</td>\n\t\t\t\t<td>10000</td>\n\t\t\t\t<td>\n\t\t\t\t\t<a href=\"deleteEmp?id=003\">Delete</a>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t</table>\n\n\t\t<div id=\"formDiv\">\n\n\t\t\t<h4>添加新员工</h4>\n\n\t\t\t<table>\n\t\t\t\t<tr>\n\t\t\t\t\t<td class=\"word\">name: </td>\n\t\t\t\t\t<td class=\"inp\">\n\t\t\t\t\t\t<input type=\"text\" name=\"empName\" id=\"empName\" />\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td class=\"word\">email: </td>\n\t\t\t\t\t<td class=\"inp\">\n\t\t\t\t\t\t<input type=\"text\" name=\"email\" id=\"email\" />\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td class=\"word\">salary: </td>\n\t\t\t\t\t<td class=\"inp\">\n\t\t\t\t\t\t<input type=\"text\" name=\"salary\" id=\"salary\" />\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td colspan=\"2\" align=\"center\">\n\t\t\t\t\t\t<button id=\"addEmpButton\">\n\t\t\t\t\t\tSubmit\n\t\t\t\t\t</button>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\n\t\t</div>\n\n\t</body>\n\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1020,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "b3f5b8b621d00795",
        "type": "ui_template",
        "z": "e3562182c0530220",
        "group": "32dbb2ecc043e986",
        "name": "",
        "order": 31,
        "width": 0,
        "height": 0,
        "format": "<div layout=\"row\" layout-align=\"space-between\">\n  <p>{{msg.payload}}</p>\n  <font color=\"{{((msg.payload || 0) % 2 === 0) ? 'green' : 'red'}}\">\n    {{(msg.payload || 0) % 2 === 0 ? 'even' : 'odd'}}\n  </font>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1200,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "de128d5638b70ea5",
        "type": "inject",
        "z": "e3562182c0530220",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "123456",
        "payloadType": "num",
        "x": 1030,
        "y": 120,
        "wires": [
            [
                "b3f5b8b621d00795"
            ]
        ]
    },
    {
        "id": "3a84d0f303af75aa",
        "type": "function",
        "z": "e3562182c0530220",
        "name": "",
        "func": "msg.url = 'http://www.kuwo.cn/api/www/search/searchMusicBykeyWord?key=' + msg.payload + '&pn=1&rn=' + msg.count1.toString()\nmsg.headers = {\n    'Connection':'keep-alive',\n    'Cookie':'kw_token=K8GF5NROMGS',\n    'csrf':'K8GF5NROMGS',\n    'Host':'www.kuwo.cn',\n    'Referer':'http://www.kuwo.cn/search/list?key=%E9%99%88%E5%A5%95%E8%BF%85',\n    'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.74 Safari/537.36 Edg/99.0.1150.46',\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 480,
        "wires": [
            [
                "016f66cabdc16e26"
            ]
        ]
    },
    {
        "id": "016f66cabdc16e26",
        "type": "http request",
        "z": "e3562182c0530220",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 600,
        "y": 480,
        "wires": [
            [
                "432e3f31f68b97ad"
            ]
        ]
    },
    {
        "id": "f8544e2a53e20b92",
        "type": "inject",
        "z": "e3562182c0530220",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "t",
                "v": "1",
                "vt": "num"
            },
            {
                "p": "count1",
                "v": "5",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "周杰伦",
        "payloadType": "str",
        "x": 270,
        "y": 480,
        "wires": [
            [
                "3a84d0f303af75aa"
            ]
        ]
    },
    {
        "id": "432e3f31f68b97ad",
        "type": "function",
        "z": "e3562182c0530220",
        "name": "",
        "func": "msg.artist = []\nmsg.rid = []\nmsg.album = []\nmsg.name = []\nmsg.url = []\nfor(var i=0 ; i < msg.payload.data.list.length ; i++){\n    msg.artist.push(msg.payload.data.list[i].artist)\n    msg.rid.push(msg.payload.data.list[i].rid)\n    msg.album.push(msg.payload.data.list[i].album)\n    msg.name.push(msg.payload.data.list[i].name)\n    msg.url.push('http://www.kuwo.cn/api/v1/www/music/playUrl?mid='+msg.rid[i]+'&type=convert_url3&br=320kmp3')\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 560,
        "wires": [
            [
                "63e373f908419a98"
            ]
        ]
    },
    {
        "id": "710c435b977cee1e",
        "type": "http request",
        "z": "e3562182c0530220",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 600,
        "y": 560,
        "wires": [
            [
                "63e373f908419a98",
                "aea0d5d1de20a308"
            ]
        ]
    },
    {
        "id": "63e373f908419a98",
        "type": "function",
        "z": "e3562182c0530220",
        "name": "",
        "func": "var count = context.get('count')||0;\nif(msg.t == 1){\n    count = 0;\n    msg.t = 0\n}\nmsg.url = 'http://www.kuwo.cn/api/v1/www/music/playUrl?mid='+msg.rid[count]+'&type=convert_url3&br=320kmp3'\nmsg.name1 = msg.name[count]\nmsg.artist1 = msg.artist[count]\ncount = count + 1\ncontext.set('count',count);\nif(count < (msg.count1 + 1) && count < (msg.artist.length + 1)){\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 560,
        "wires": [
            [
                "710c435b977cee1e"
            ]
        ]
    },
    {
        "id": "583e3b5a37593547",
        "type": "link in",
        "z": "e3562182c0530220",
        "name": "",
        "links": [
            "041afb39671d545a",
            "a5b256c5138eab3d"
        ],
        "x": 875,
        "y": 300,
        "wires": [
            [
                "46eaf9476dfd7dbe"
            ]
        ]
    },
    {
        "id": "041afb39671d545a",
        "type": "link out",
        "z": "e3562182c0530220",
        "name": "",
        "mode": "link",
        "links": [
            "583e3b5a37593547"
        ],
        "x": 1035,
        "y": 240,
        "wires": []
    },
    {
        "id": "d77fc4f252879d26",
        "type": "function",
        "z": "e3562182c0530220",
        "name": "",
        "func": "var a = {\n    'url': msg.payload,\n    'name': (msg.count+1).toString()+\".mp4\",\n    'dir': \"/downloads/\"+msg.name1\n}\nmsg = a\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 240,
        "wires": [
            [
                "fb8044923bd345ae",
                "041afb39671d545a"
            ]
        ]
    },
    {
        "id": "a5b256c5138eab3d",
        "type": "link out",
        "z": "e3562182c0530220",
        "name": "",
        "mode": "link",
        "links": [
            "583e3b5a37593547"
        ],
        "x": 855,
        "y": 560,
        "wires": []
    },
    {
        "id": "aea0d5d1de20a308",
        "type": "function",
        "z": "e3562182c0530220",
        "name": "",
        "func": "var a = {\n    'url': msg.payload.data.url,\n    'name': msg.name1 + ' - ' + msg.artist1 + \".mp3\",\n    'dir': \"/downloads/music\"\n}\nmsg = a\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 560,
        "wires": [
            [
                "a5b256c5138eab3d"
            ]
        ]
    },
    {
        "id": "5c1fd296cf04e281",
        "type": "http in",
        "z": "e3562182c0530220",
        "name": "",
        "url": "music",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 740,
        "wires": [
            [
                "a61a740e7a186d24"
            ]
        ]
    },
    {
        "id": "93c0f5ddc44ceb60",
        "type": "http response",
        "z": "e3562182c0530220",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1130,
        "y": 740,
        "wires": []
    },
    {
        "id": "03280bbe88ad9bf9",
        "type": "debug",
        "z": "e3562182c0530220",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 800,
        "wires": []
    },
    {
        "id": "a61a740e7a186d24",
        "type": "function",
        "z": "e3562182c0530220",
        "name": "",
        "func": "msg.url = 'http://www.kuwo.cn/api/www/search/searchMusicBykeyWord?key=' + msg.payload.a + '&pn=1&rn='+msg.payload.b.toString()\nmsg.t = 1\nmsg.t1 = 1\nmsg.count1 = msg.payload.b\nmsg.headers = {\n    'Connection':'keep-alive',\n    'Cookie':'kw_token=K8GF5NROMGS',\n    'csrf':'K8GF5NROMGS',\n    'Host':'www.kuwo.cn',\n    'Referer':'http://www.kuwo.cn/search/list?key=%E9%99%88%E5%A5%95%E8%BF%85',\n    'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.74 Safari/537.36 Edg/99.0.1150.46',\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 740,
        "wires": [
            [
                "977d08a2ca167350"
            ]
        ]
    },
    {
        "id": "977d08a2ca167350",
        "type": "http request",
        "z": "e3562182c0530220",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 400,
        "y": 740,
        "wires": [
            [
                "d57c3ceefb224b70"
            ]
        ]
    },
    {
        "id": "d57c3ceefb224b70",
        "type": "function",
        "z": "e3562182c0530220",
        "name": "",
        "func": "msg.artist = []\nmsg.rid = []\nmsg.album = []\nmsg.name = []\nmsg.url = []\nfor(var i=0 ; i < msg.payload.data.list.length ; i++){\n    msg.artist.push(msg.payload.data.list[i].artist)\n    msg.rid.push(msg.payload.data.list[i].rid)\n    msg.album.push(msg.payload.data.list[i].album)\n    msg.name.push(msg.payload.data.list[i].name)\n    msg.url.push('http://www.kuwo.cn/api/v1/www/music/playUrl?mid='+msg.rid[i]+'&type=convert_url3&br=320kmp3')\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 740,
        "wires": [
            [
                "ed1e3d9276ecbe56"
            ]
        ]
    },
    {
        "id": "a9751bcc6d29b738",
        "type": "http request",
        "z": "e3562182c0530220",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 840,
        "y": 740,
        "wires": [
            [
                "ed1e3d9276ecbe56",
                "7db9aeed066b2b02"
            ]
        ]
    },
    {
        "id": "ed1e3d9276ecbe56",
        "type": "function",
        "z": "e3562182c0530220",
        "name": "",
        "func": "var count = context.get('count')||0;\nif(msg.t == 1){\n    count = 0;\n    msg.t = 0\n}\nif(count == 1){\n    msg.t1 =0\n}\nmsg.url = 'http://www.kuwo.cn/api/v1/www/music/playUrl?mid='+msg.rid[count]+'&type=convert_url3&br=320kmp3'\n\nmsg.name1 = msg.name[count]\nmsg.artist1 = msg.artist[count]\nmsg.rid1 = msg.rid[count]\nmsg.album1 = msg.album[count]\n\n\ncount = count + 1\nif(count == msg.name.length){\n    msg.t2 =1\n    // count = 0;\n    // msg.t = 0\n}\ncontext.set('count',count);\nif(count < (msg.count1 + 1) && count < (msg.artist.length + 1)){\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 740,
        "wires": [
            [
                "03280bbe88ad9bf9",
                "a9751bcc6d29b738"
            ]
        ]
    },
    {
        "id": "7db9aeed066b2b02",
        "type": "function",
        "z": "e3562182c0530220",
        "name": "",
        "func": "var list = context.get('list')||{};\nif(msg.t1 == 1){\n    list = {}\n    msg.t1 = 0\n}\n// list.push(\n//     [\n//         msg.name1,\n//         msg.artist1,\n//         msg.album1,\n//         msg.rid1,\n//         msg.payload.data.url\n//     ]\n// )\nlist[msg.name1]=\n    [\n        msg.name1,\n        msg.artist1,\n        msg.album1,\n        msg.rid1,\n        msg.payload.data.url\n    ]\n\nif(msg.t2 == 1){\n    msg.payload = list\n    delete(msg.headers)\n    return msg;\n}\n// context.set('url',url);\ncontext.set('list',list);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 740,
        "wires": [
            [
                "e4d1e93f8ca6cabf",
                "93c0f5ddc44ceb60"
            ]
        ]
    },
    {
        "id": "e4d1e93f8ca6cabf",
        "type": "debug",
        "z": "e3562182c0530220",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 800,
        "wires": []
    },
    {
        "id": "97213dc17b2c5cd1",
        "type": "template",
        "z": "e3562182c0530220",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<html>\n\n<head>\n    <script>\n        window.onload = function () {\n            function add(arr) {\n                for (var val in arr) {\n                    // for (var i = 0; i < arr[val].length; i++) {\n                    var tr = document.createElement(\"tr\");\n                    //设置tr中的内容\n                    tr.innerHTML = \"<td>\" + arr[val][0] + \"</td>\" +\n                        \"<td>\" + arr[val][1] + \"</td>\" +\n                        \"<td>\" + arr[val][2] + \"</td>\" +\n                        \"<td><a href=\"+arr[val][4]+\">下载</a></td>\";\n\n                    //获取刚刚添加的a元素，并为其绑定单击响应函数\t\t\t\t\n                    // var a = tr.getElementsByTagName(\"a\")[0];\n                    // a.onclick = function () { };\n\n                    //获取table\n                    var employeeTable = document.getElementById(\"employeeTable\");\n                    //获取employeeTable中的tbody\n                    var tbody = employeeTable.getElementsByTagName(\"tbody\")[0];\n                    //将tr添加到tbodye中\n                    tbody.appendChild(tr);\n                    // }\n                }\n                \n            };\n            //\n            btn = document.querySelectorAll('button')\n            btn[0].onclick = function () {\n                // alert('hello')\n                getmusic()\n            }\n            text = document.querySelectorAll('input')\n            text[0].value = \"周杰伦\"\n            text[1].value = \"5\"\n            a = document.querySelectorAll('a')\n            function getmusic() {\n\n                var xhr = new XMLHttpRequest();\n                xhr.withCredentials = true;\n\n                xhr.addEventListener(\"readystatechange\", function () {\n                    if (this.readyState === 4) {\n                        console.log(this.responseText);\n                        // ab(this.responseText);\n                        \n                        var response = eval('('+this.responseText+')')\n                        add(response)\n                    }\n                });\n                url = \"http://192.168.0.210:1880/music?a=\"+text[0].value+\"&b=\"+text[1].value\n                dataType: 'json'\n                \n                xhr.open(\"GET\", url);\n                xhr.send();\n                \n            }\n            function ab(txt){\n                a[0].innerHTML = txt\n            }\n        }\n    </script>\n</head>\n\n<body>\n    <div>\n        歌手或歌曲名称\n    </div>\n    <div>\n        <input type=\"text\">\n\n    </div>\n    <div>\n        显示数量\n    </div>\n    <input type=\"text1\">\n    <div>\n        <button>提交</button>\n    </div>\n    <div>\n        <a id=\"abc\"></a>\n    </div>\n    \n    <table id=\"employeeTable\">\n        <tr>\n            <th>Name</th>\n            <th>歌手</th>\n            <th>专辑</th>\n            <th>下载</th>\n        </tr>\n        \n        {{!--<tr>--}}\n        {{!--    <td></td>--}}\n        {{!--    <td></td>--}}\n        {{!--    <td></td>--}}\n        {{!--    <td>--}}\n        {{!--        <a href=\"deleteEmp?id=003\"></a>--}}\n        {{!--    </td>--}}\n        {{!--</tr>--}}\n    </table>\n    {{!--<div id=\"formDiv\">--}}\n\n    {{!--    <h4>添加新员工</h4>--}}\n\n    {{!--    <table>--}}\n    {{!--        <tr>--}}\n    {{!--            <td class=\"word\">name: </td>--}}\n    {{!--            <td class=\"inp\">--}}\n    {{!--                <input type=\"text\" name=\"empName\" id=\"empName\" />--}}\n    {{!--            </td>--}}\n    {{!--        </tr>--}}\n    {{!--        <tr>--}}\n    {{!--            <td class=\"word\">email: </td>--}}\n    {{!--            <td class=\"inp\">--}}\n    {{!--                <input type=\"text\" name=\"email\" id=\"email\" />--}}\n    {{!--            </td>--}}\n    {{!--        </tr>--}}\n    {{!--        <tr>--}}\n    {{!--            <td class=\"word\">salary: </td>--}}\n    {{!--            <td class=\"inp\">--}}\n    {{!--                <input type=\"text\" name=\"salary\" id=\"salary\" />--}}\n    {{!--            </td>--}}\n    {{!--        </tr>--}}\n    {{!--        <tr>--}}\n    {{!--            <td colspan=\"2\" align=\"center\">--}}\n    {{!--                <button id=\"addEmpButton\">--}}\n    {{!--                    Submit--}}\n    {{!--                </button>--}}\n    {{!--            </td>--}}\n    {{!--        </tr>--}}\n    {{!--    </table>--}}\n\n    {{!--</div>--}}\n    \n</body>\n\n</html>",
        "output": "str",
        "x": 230,
        "y": 680,
        "wires": [
            [
                "508d94a9c9102702"
            ]
        ]
    },
    {
        "id": "0771cfe082d23b54",
        "type": "http in",
        "z": "e3562182c0530220",
        "name": "",
        "url": "abc",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 80,
        "y": 680,
        "wires": [
            [
                "97213dc17b2c5cd1"
            ]
        ]
    },
    {
        "id": "508d94a9c9102702",
        "type": "http response",
        "z": "e3562182c0530220",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 370,
        "y": 680,
        "wires": []
    },
    {
        "id": "9a6860d14fdb6f85",
        "type": "http in",
        "z": "e3562182c0530220",
        "name": "",
        "url": "music1",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 940,
        "wires": [
            [
                "4fbe73c94ea53b06"
            ]
        ]
    },
    {
        "id": "4fbe73c94ea53b06",
        "type": "function",
        "z": "e3562182c0530220",
        "name": "",
        "func": "if(msg.payload.a =='' || msg.payload.b == '' || msg.payload.c == ''){\n    return null\n}\nmsg.url = 'http://www.kuwo.cn/api/www/search/searchMusicBykeyWord?key=' + msg.payload.a + '&pn=' + msg.payload.c + '&rn=' + msg.payload.b.toString()\nmsg.t = 1\nmsg.t1 = 1\nmsg.count1 = msg.payload.b\nmsg.headers = {\n    'Connection':'keep-alive',\n    'Cookie':'kw_token=K8GF5NROMGS',\n    'csrf':'K8GF5NROMGS',\n    'Host':'www.kuwo.cn',\n    'Referer':'http://www.kuwo.cn/search/list?key=%E9%99%88%E5%A5%95%E8%BF%85',\n    'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.74 Safari/537.36 Edg/99.0.1150.46',\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 940,
        "wires": [
            [
                "a1e0f4476cc25758",
                "e4d1e93f8ca6cabf"
            ]
        ]
    },
    {
        "id": "a1e0f4476cc25758",
        "type": "http request",
        "z": "e3562182c0530220",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 400,
        "y": 940,
        "wires": [
            [
                "e343ab771d7db640",
                "e4d1e93f8ca6cabf"
            ]
        ]
    },
    {
        "id": "e343ab771d7db640",
        "type": "function",
        "z": "e3562182c0530220",
        "name": "",
        "func": "list = {}\nfor(var i=0 ; i < msg.payload.data.list.length ; i++){\n    list[i]=[\n        msg.payload.data.list[i].artist,\n        msg.payload.data.list[i].rid,\n        msg.payload.data.list[i].album,\n        msg.payload.data.list[i].name,\n        'http://www.kuwo.cn/api/v1/www/music/playUrl?mid='+msg.payload.data.list[i].rid+'&type=convert_url3&br=320kmp3',\n        msg.payload.data.list[i].songTimeMinutes,\n        msg.payload.data.total,\n        msg.payload.data.list[i].pic\n        ]\n    \n}\nmsg.payload = list\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 940,
        "wires": [
            [
                "369073ec0799d0f9"
            ]
        ]
    },
    {
        "id": "369073ec0799d0f9",
        "type": "http response",
        "z": "e3562182c0530220",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 690,
        "y": 940,
        "wires": []
    },
    {
        "id": "086c19ca5b4953b2",
        "type": "template",
        "z": "e3562182c0530220",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<html>\n\n<head>\n    <script>\n        window.onload = function () {\n            \n            btn = document.querySelectorAll('button')\n            btn[0].onclick = function () {\n                // alert('hello')\n                // dele()\n                url = \"http://192.168.0.210:1880/music1?a=\"+text[0].value+\"&b=\"+text[1].value\n                get1(url)\n                \n            }\n            \n            text = document.querySelectorAll('input')//默认数据\n            text[0].value = \"周杰伦\"\n            text[1].value = \"30\"\n            \n            img = document.querySelectorAll('img')[0]//图片\n            abc = document.getElementById('abc');//歌曲数量\n            // iframe = document.querySelectorAll('iframe')//播放器\n            audio = document.querySelectorAll('audio')[0]//播放器\n            \n            function add(arr) {\n                var n = 0\n                for (var val in arr) {\n                   n++\n                    var tr = document.createElement(\"tr\");\n                    //设置tr中的内容\n                    tr.innerHTML = \"<td>\" + n + \"</td>\" +//序号\n                        \"<td align='center'>\" + arr[val][3] + \"</td>\" +//歌曲\n                        \"<td align='center'>\" + arr[val][0] + \"</td>\" +//歌手\n                        \"<td align='center'>\" + arr[val][2] + \"</td>\" +//专辑\n                        \"<td>\" + arr[val][5] + \"</td>\" +//时长\n                        \"<td><a id='a' href=\"+arr[val][4]+\">试听</a></td>\" +//试听\n                        \"<td><a id='b' href=\"+arr[val][4]+\" download='\"+arr[val][3]+\".mp3'>下载</a></td>\";//下载\n                    \n                    \n                    \n                    //获取table\n                    var employeeTable = document.getElementById(\"employeeTable\");\n                    //获取employeeTable中的tbody\n                    var tbody = employeeTable.getElementsByTagName(\"tbody\")[0];\n                    //将tr添加到tbodye中\n                    tbody.appendChild(tr);\n                    \n                }\n                var a = document.querySelectorAll('#a');\n                for(var j=0;j<a.length ; j++){//为a标签创建点击事件\n                    a[j].onclick = dl\n                }\n                var b = document.querySelectorAll('#b');\n                for(var j=0;j<b.length ; j++){//为b标签创建点击事件\n                    b[j].onclick = dl1\n                }\n                abc.innerText = \"总共找到\" + arr['0'][6] + \"首歌曲\"\n                img.src = arr['0'][7]\n            };\n            //\n            function dl() {\n\t\t\t\tvar url = this.href;\n\t\t\t\t\n\t\t\t\tget2(url)\n\t\t\t\treturn false;\n\t\t\t};\n\t\t\tfunction dl1() {\n\t\t\t\tvar url = this.href;\n\t\t\t\tvar tr = this\n\t\t\t\tconsole.log(/320kmp3/i.test(this.href))\n\t\t\t\tif(/320kmp3/i.test(this.href)){\n\t\t\t\t    get3(url,tr)\n\t\t\t\t    return false;\n\t\t\t\t    \n\t\t\t\t}else{\n\t\t\t\t    // return false;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// return false;\n\t\t\t\t// this.href=\"https://other-web-nf01-sycdn.kuwo.cn/a671d57649748dcf5919b5527daab6cb/6246e6af/resource/n2/61/74/2962541098.mp3\";\n\t\t\t\t\n\t\t\t\t// return false;\n\t\t\t};\n            \n            function get1(url) {\n                var xhr = new XMLHttpRequest();\n                xhr.open(\"GET\", url);\n                xhr.send();\n                xhr.onreadystatechange = function(){\n                    if(xhr.readyState===4){\n                        if(xhr.status >= 200 && xhr.status < 300){\n                            console.log(xhr.response)\n                            var response = eval('('+this.responseText+')')\n                            add(response)\n                        }\n                    }\n                }\n                \n            }\n            \n            function get2(url) {\n                var xhr = new XMLHttpRequest();\n                xhr.open(\"GET\", url);\n                xhr.send();\n                xhr.onreadystatechange = function(){\n                    if(xhr.readyState===4){\n                        if(xhr.status >= 200 && xhr.status < 300){\n                            // console.log(xhr.response)\n                            var response = eval('('+this.responseText+')')\n                            audio.src = response['data']['url']\n                            \n                        }\n                    }\n                }\n                \n            }\n            function get3(url,tr) {\n                var xhr = new XMLHttpRequest();\n                xhr.open(\"GET\", url);\n                xhr.send();\n                xhr.onreadystatechange = function(){\n                    if(xhr.readyState===4){\n                        if(xhr.status >= 200 && xhr.status < 300){\n                            // console.log(xhr.response)\n                            var response = eval('('+this.responseText+')')\n                            // iframe[0].src = response['data']['url']\n                            // console.log(tr)\n                            tr.href = response['data']['url']\n                            // tr.click()\n                            // window.location.href=response['data']['url']\n                            // window.open(response['data']['url'])\n                            \n                        }\n                    }\n                }\n                \n            }\n        }\n    </script>\n</head>\n\n<body>\n    <div>\n        歌手或歌曲名称\n    </div>\n    <div>\n        <input type=\"text\">\n    </div>\n    <div>\n        显示数量\n    </div>\n    <input type=\"text1\">\n    <div>\n        <button>提交</button>\n    </div>\n    {{!--<iframe src=\"https://sy-sycdn.kuwo.cn/0a5a93b6b3ac975cc29780d61d0cc40d/624690cd/resource/n1/84/19/2974502628.mp3\"></iframe>--}}\n    <audio src=\"https://sy-sycdn.kuwo.cn/0a5a93b6b3ac975cc29780d61d0cc40d/624690cd/resource/n1/84/19/2974502628.mp3\" controls></audio>\n    <div>\n        <a id=\"abc\"></a>\n    </div>\n    <div>\n        <a id=\"dl\" href=\"\" download=\"\"></a>\n    </div>\n    \n    <table id=\"employeeTable\">\n        <tr>\n            <img class=\"cover\" src=\"\" lazy=\"loaded\">\n            <th>序号</th>\n            <th>歌曲</th>\n            <th>歌手</th>\n            <th>专辑</th>\n            <th>时长</th>\n            <th>试听</th>\n            <th>下载</th>\n        </tr>\n    </table>\n</body>\n\n</html>",
        "output": "str",
        "x": 230,
        "y": 880,
        "wires": [
            [
                "bd310d29fc3d2fc3"
            ]
        ]
    },
    {
        "id": "55c668c65c115327",
        "type": "http in",
        "z": "e3562182c0530220",
        "name": "",
        "url": "abc01",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 880,
        "wires": [
            [
                "086c19ca5b4953b2"
            ]
        ]
    },
    {
        "id": "bd310d29fc3d2fc3",
        "type": "http response",
        "z": "e3562182c0530220",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 370,
        "y": 880,
        "wires": []
    },
    {
        "id": "24a18897cd78284d",
        "type": "http in",
        "z": "e3562182c0530220",
        "name": "",
        "url": "get",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 80,
        "y": 1040,
        "wires": [
            [
                "398fb8b6fae49298",
                "74fe857140521c33"
            ]
        ]
    },
    {
        "id": "74fe857140521c33",
        "type": "http response",
        "z": "e3562182c0530220",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 370,
        "y": 1040,
        "wires": []
    },
    {
        "id": "130608304db819dd",
        "type": "http in",
        "z": "e3562182c0530220",
        "name": "",
        "url": "post",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 80,
        "y": 1080,
        "wires": [
            [
                "398fb8b6fae49298",
                "74fe857140521c33"
            ]
        ]
    },
    {
        "id": "398fb8b6fae49298",
        "type": "debug",
        "z": "e3562182c0530220",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 1140,
        "wires": []
    },
    {
        "id": "5eb1cf1af6710fd8",
        "type": "template",
        "z": "e3562182c0530220",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<html>\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n    <script src=\"https://cdn.bootcdn.net/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n    <style>\n        div a::before {\n            content: \"⇒\";\n        }\n\n        ul {\n            list-style: none;\n        }\n\n        li,\n        i {\n            float: left;\n            width: 42px;\n            height: 42px;\n            /*  设置垂直居中 */\n            line-height: 42px;\n            /* 设置水平居中 */\n            text-align: center;\n\n        }\n\n        li:hover {\n            background-color: orange;\n        }\n\n        i:hover {\n            background-color: orange;\n        }\n\n        /* .pagedown:before {\n            content: \"\\e647\";\n        } */\n    </style>\n\n    <script>\n        window.onload = function () {\n            var N = 0//当前页面索引\n            $('#btn1').click(function () {//为提交按钮绑定事件\n                url = \"http://192.168.0.210:1880/music1?a=\" + text[0].value + \"&b=30&c=1\"\n                $.get(url, {}, function (data) {\n                    console.log(data)\n                    add(data, 1)\n                }, 'json')\n            })\n\n\n            text = document.querySelectorAll('input')//默认数据\n            text[0].value = \"周杰伦\"//默认数据\n\n\n            img = document.querySelectorAll('img')[0]//图片\n            abc = document.getElementById('abc');//歌曲数量\n            audio = document.querySelectorAll('audio')[0]//播放器\n\n            function add(arr, nrindex) {//创建表格 arr表示表格数据 nrindex 表示第几页\n                //删除元素\n                $('tr').remove()\n                console.log($('td'))\n                N = nrindex//记录当前页面索引\n                var n = (nrindex - 1) * 30\n                for (var val in arr) {\n                    n++\n                    var tr = document.createElement(\"tr\");\n                    //设置tr中的内容\n                    tr.innerHTML = \"<td>\" + n + \"</td>\" +//序号\n                        \"<td align='center'>\" + arr[val][3] + \"</td>\" +//歌曲\n                        \"<td align='center'>\" + arr[val][0] + \"</td>\" +//歌手\n                        \"<td align='center'>\" + arr[val][2] + \"</td>\" +//专辑\n                        \"<td>\" + arr[val][5] + \"</td>\" +//时长\n                        \"<td><a id='a' href=\" + arr[val][4] + \">试听</a></td>\" +//试听\n                        \"<td><a id='b' href=\" + arr[val][4] + \" download='\" + arr[val][3] + \".mp3'>下载</a></td>\";//下载\n\n                    //获取table\n                    var employeeTable = document.getElementById(\"employeeTable\");\n                    //获取employeeTable中的tbody\n                    var tbody = employeeTable.getElementsByTagName(\"tbody\")[0];\n                    //将tr添加到tbodye中\n                    tbody.appendChild(tr);\n                }\n\n                // var abcde = $('td > #a')//子代选择器\n                // console.log(abcde)\n                $('td > #a').on('click', function () {\n                    // console.log(\"下标\" + $(this).index())\n                    console.log(this.href)\n                    url = this.href\n                    $.get(url, {}, function (data) {\n                        console.log(data)\n\n                        audio.src = data['data']['url']\n                        // return false\n                    }, 'json')\n                    return false\n                })\n\n                $('td > #b').on('click', function () {\n                    console.log(this.href)\n                    url = this.href\n                    $.get(url, {}, function (data) {\n                        console.log(data)\n                        console.log(data['data']['url'])\n                        var a = document.createElement('a');\n                        a.href = data['data']['url'];\n                        a.click()\n                    }, 'json')\n                    return false\n                })\n\n                //创建ul////\n                // var ul = $(\"<ul></ul>\");\n                var nr = Math.ceil(arr['0'][6] / 30)//页数\n                console.log($('ul li span').length)\n                if ($('ul li span').length) {//判断是否存在翻页标签\n\n                } else {\n                    createul(nr)//创建翻页图标\n                }\n\n                // var user = data[val];\n                // var li = \"<li><span>\" + nr + \"</span></li>\"\n                // ul.append(li)\n                // $(\"body\").append(ul)\n\n\n                abc.innerText = \"总共找到\" + arr['0'][6] + \"首歌曲\"//查询结果\n                img.src = arr['0'][7]\n            };\n            //\n\n            function createul(nr) {//创建翻页图标\n                var ul = $(\"<ul></ul>\");\n                // var nr = Math.ceil(nr/ 30)//页数\n                // var user = data[val];\n\n                var li = \"<i class='pageup'>&lt;</i>\" +\n                    \"<li><span>1</span></li>\" +\n                    \"<li><span>2</span></li>\" +\n                    \"<li><span>3</span></li>\" +\n                    \"<li><span>\" + nr + \"</span></li>\" +\n                    \"<i class='pagedown'>&gt;</i>\"\n\n                ul.append(li)\n                $(\"body\").append(ul)\n\n\n                //为li标签设置点击事件\n                $('ul > li').on('click', function () {\n                    // var nrindex = $(this).index()\n\n                    var nrindex = Number(this.innerText)\n                    console.log(nrindex)\n                    url = \"http://192.168.0.210:1880/music1?a=\" + text[0].value + \"&b=30&c=\" + nrindex\n                    $.get(url, {}, function (data) {\n                        console.log(data)\n                        add(data, nrindex)\n                    }, 'json')\n                })\n                //为i标签设置点击事件\n                $('ul > i').on('click', function () {\n                    // var nrindex = $(this).index()\n                    if ($(this).index() == 0) {//判断是第几个i标签\n                        if ($(this).index() == N) {\n                        } else {\n                            var nrindex = N - 1\n                            console.log(nrindex)\n                            url = \"http://192.168.0.210:1880/music1?a=\" + text[0].value + \"&b=30&c=\" + nrindex\n                            $.get(url, {}, function (data) {\n                                console.log(data)\n                                add(data, nrindex)\n                            }, 'json')\n                        }\n\n                    } else {//如果是后面的i标签\n                        if ($(this).index() == N) {\n                        } else {\n                            var nrindex = N + 1\n                            console.log(nrindex)\n                            url = \"http://192.168.0.210:1880/music1?a=\" + text[0].value + \"&b=30&c=\" + nrindex\n                            $.get(url, {}, function (data) {\n                                console.log(data)\n                                add(data, nrindex)\n                            }, 'json')\n                        }\n\n                    }\n\n                })\n            }\n            // var ul = $(\"<ul></ul>\");\n            // var li = \"<li><span>&lt;</span></li>\" +\n            //     \"<li><span>1</span></li>\" +\n            //     \"<li><span>2</span></li>\" +\n            //     \"<li><span>3</span></li>\" +\n            //     \"<li><span>264</span></li>\" +\n            //     \"<li><span>&gt;</span></li>\"\n\n            // ul.append(li)\n            // $(\"body\").append(ul)\n\n\n\n\n        }\n    </script>\n</head>\n\n<body>\n    <div>\n        <div>\n            歌手或歌曲名称\n        </div>\n        <div>\n            <input type=\"text\">\n        </div>\n\n\n        <div>\n            <button id=\"btn1\">搜索</button>\n        </div>\n\n        <audio src=\"https://sy-sycdn.kuwo.cn/0a5a93b6b3ac975cc29780d61d0cc40d/624690cd/resource/n1/84/19/2974502628.mp3\"\n            controls autoplay loop></audio>\n        <!-- 允许控制 自动播放 循环播放 -->\n        <div>\n            <a id=\"abc\"></a>\n        </div>\n        <div>\n            <a id=\"dl\" href=\"\" download=\"\"></a>\n        </div>\n        <DIV>\n            <img class=\"cover\" src=\"\" lazy=\"loaded\">\n        </DIV>\n    </div>\n\n    <table id=\"employeeTable\">\n        <tr>\n            <th>序号</th>\n            <th>歌曲</th>\n            <th>歌手</th>\n            <th>专辑</th>\n            <th>时长</th>\n            <th>试听</th>\n            <th>下载</th>\n        </tr>\n    </table>\n    <div id=\"rn\">\n\n    </div>\n</body>\n\n</html>",
        "output": "str",
        "x": 230,
        "y": 1220,
        "wires": [
            [
                "29c3470b3659dfcb"
            ]
        ]
    },
    {
        "id": "ad53347eaea416ad",
        "type": "http in",
        "z": "e3562182c0530220",
        "name": "",
        "url": "abc1",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 80,
        "y": 1220,
        "wires": [
            [
                "5eb1cf1af6710fd8"
            ]
        ]
    },
    {
        "id": "29c3470b3659dfcb",
        "type": "http response",
        "z": "e3562182c0530220",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 370,
        "y": 1220,
        "wires": []
    },
    {
        "id": "02790a228ee04062",
        "type": "http in",
        "z": "e3562182c0530220",
        "name": "",
        "url": "video",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 80,
        "y": 1380,
        "wires": [
            [
                "eb86c7628f04c3d9",
                "6819f8944193ed6a"
            ]
        ]
    },
    {
        "id": "eb86c7628f04c3d9",
        "type": "template",
        "z": "e3562182c0530220",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <link href=\"//vjs.zencdn.net/7.10.2/video-js.min.css\" rel=\"stylesheet\">\n    <script src=\"//vjs.zencdn.net/7.10.2/video.min.js\"></script>\n    <script src=\"https://cdn.bootcdn.net/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n    <title>video</title>\n    <style>\n        video {\n            width: 9000px;\n            height: 300px;\n        }\n    </style>\n    <script>\n        window.onload = function () {\n            //加载播放器\n            // var player = videojs('my-player', {\n            //     // muted: true,\n            //     // controls: true,\n            //     height: 300,\n            //     width: 300,\n            //     // loop: true,\n            //     // 更多配置.....\n            // });\n            // console.log(player)\n\n\n            input = document.querySelectorAll('input')[0]//默认数据\n            input.value = \"斗罗大陆\"//默认数据\n            $('button').on('click', function () {\n                url = 'http://192.168.0.210:1880/videoname?videoname=' + input.value\n                $.get(url, {}, function (data) {\n                    console.log(data)\n                    addtr(data)\n                }, 'json')\n            })\n\n\n            function addtr(data) {\n\n                for (var val in data) {\n                    var tr = $(\"<tr></tr>\");\n                    var td = \"<td>\" + val + \"</td><td><a href='\" + data[val] + \"' target='_blank'>观看</a></td>\"\n\n                    tr.append(td)\n                    $(\"tbody\").append(tr)\n                }\n\n                $('a').on('click', function () {\n                    url = 'http://192.168.0.210:1880/jiexi?url=' + this.href\n\n                    $.get(url, {}, function (data) {\n                        console.log(data)\n\n                        // video.pause()\n                        // source.setAttribute('src', '2.mp4');\n                        // video.load();\n                        // video.play();\n                        var player = videojs('my-player');\n                        player.src(data['a']);\n                        player.load();\n                    }, 'json')\n                    return false\n                })\n\n            }\n\n        }\n    </script>\n</head>\n<div>\n    <input type=\"text\" name=\"search\" id=\"\">\n</div>\n<div>\n    <button>搜索</button>\n</div>\n<div>\n    <!-- poster=\"//vjs.zencdn.net/v/oceans.png\" -->\n    <video id=\"my-player\" class=\"video-js\" controls preload=\"auto\" poster=\"\" width=\"800px\" height=\"600px\"\n        data-setup='{}'>\n        <source id=\"playersource\"\n            src=\"https://om.tc.qq.com/gzc_1000102_0b535yaaiaaaomapahbgkbrmb3wdatuaaaca.f10218.mp4?vkey=64BEFDC49EAD0DBFE056C4AEE07A3F80D5F453072AC9D37210092908083A1AD2D89CF430415FCCC2F07B3E4FED7F02CC20559078F65E91DF90EA3E1ADCDA3C7B14A31A9DDC091CBFDCA348B1258E55FCFC03B81E6A00FAABC9657E7F2B69498ECBF7898C704C758DCAC0BDEA99EED9EDBA13CEC6E54E6C41EAE6FE2B15946C874AB1E36375CA7146&amp;sdtfrom=v1080&amp;type=mp4&amp;platform=10201&amp;br=117&amp;fmt=hd&amp;sp=0&amp;guid=1F78117BB3DD94210EC924D61BBE1F21FD660D84\"\n            type=\"video/mp4\">\n\n        <!-- <p class=\"vjs-no-js\">\n            To view this video please enable JavaScript, and consider upgrading to a\n            web browser that\n            <a href=\"https://videojs.com/html5-video-support/\" target=\"_blank\">\n                supports HTML5 video\n            </a>\n        </p> -->\n    </video>\n</div>\n\n<body>\n    <table>\n        <tbody>\n\n        </tbody>\n\n    </table>\n\n</body>\n\n</html>",
        "output": "str",
        "x": 230,
        "y": 1380,
        "wires": [
            [
                "91c10d300c1fa3c3"
            ]
        ]
    },
    {
        "id": "91c10d300c1fa3c3",
        "type": "http response",
        "z": "e3562182c0530220",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 370,
        "y": 1380,
        "wires": []
    },
    {
        "id": "a350c50fc76f53ce",
        "type": "function",
        "z": "e3562182c0530220",
        "name": "搜索数据",
        "func": "msg.url = \"https://v.qq.com/x/search/?q=\"+msg.payload.videoname+\"&stag=102&smartbox_ab=\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 1440,
        "wires": [
            [
                "5e914ce5d5cfab5e"
            ]
        ]
    },
    {
        "id": "5904b9fc91de03b9",
        "type": "http in",
        "z": "e3562182c0530220",
        "name": "",
        "url": "videoname",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 1440,
        "wires": [
            [
                "a350c50fc76f53ce"
            ]
        ]
    },
    {
        "id": "6819f8944193ed6a",
        "type": "debug",
        "z": "e3562182c0530220",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 1340,
        "wires": []
    },
    {
        "id": "25b7f40c09229aee",
        "type": "debug",
        "z": "e3562182c0530220",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 1540,
        "wires": []
    },
    {
        "id": "2ccb59dc5c62c948",
        "type": "html",
        "z": "e3562182c0530220",
        "name": "标题",
        "property": "payload",
        "outproperty": "payload",
        "tag": "#search_container > div.wrapper > div.wrapper_main > div.mix_warp > div:nth-child(1) > div > div > div._infos > div > div > div:nth-child(1) > span.content",
        "ret": "text",
        "as": "single",
        "x": 810,
        "y": 1380,
        "wires": [
            [
                "ccdc92de7da7cc2f"
            ]
        ]
    },
    {
        "id": "ccdc92de7da7cc2f",
        "type": "function",
        "z": "e3562182c0530220",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "46555be84e33a3f4",
        "type": "http response",
        "z": "e3562182c0530220",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1190,
        "y": 1440,
        "wires": []
    },
    {
        "id": "b4e75227c3eaadbe",
        "type": "http request",
        "z": "e3562182c0530220",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "persist": false,
        "authType": "",
        "senderr": false,
        "x": 800,
        "y": 1440,
        "wires": [
            [
                "0d148007def0bac5"
            ]
        ]
    },
    {
        "id": "0d148007def0bac5",
        "type": "function",
        "z": "e3562182c0530220",
        "name": "匹配地址参数合成地址",
        "func": "var url = []\nvar reg = /\"F\":\\d,\"V\":\"(.*?)\"/g\n\nfor (var i = 0; i < 1000; i++) {\n    url[i] = reg.exec(msg.payload)\n    if(reg.lastIndex==0){\n        msg.payload=url\n        break\n    }\n}\n\n\nvar hurl = []\nvar rsg = msg.payload\nvar a = (rsg.length + 1)/2\nfor (var n = 0; n < (rsg.length - 1)/2; n++) {\n    hurl.push(\"https://v.qq.com/x/cover/\"+msg.vid+\"/\"+msg.payload[n][1]+\".html\")\n}\nvar txt ={}\nfor(var j=0;j<hurl.length;j++){\n    var title = '第'+(j+1).toString()+'集'\n    txt[title]=hurl[j]\n}\nmsg.payload = txt\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 1440,
        "wires": [
            [
                "46555be84e33a3f4",
                "25b7f40c09229aee"
            ]
        ]
    },
    {
        "id": "5e914ce5d5cfab5e",
        "type": "http request",
        "z": "e3562182c0530220",
        "name": "搜索请求",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 440,
        "y": 1440,
        "wires": [
            [
                "15c34cdf4be0c5a3"
            ]
        ]
    },
    {
        "id": "15c34cdf4be0c5a3",
        "type": "function",
        "z": "e3562182c0530220",
        "name": "正则匹配地址",
        "func": "var reg=/href=\"https:\\/\\/v.qq.com\\/x\\/cover\\/(.*?)\\/(.*?).html\"/\nret = reg.exec(msg.payload)\n//msg.payload = ret\nmsg.url = \"https://v.qq.com/x/cover/\"+ret[1]+\"/\"+ret[2]+\".html\"\nmsg.vid = ret[1]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 1440,
        "wires": [
            [
                "b4e75227c3eaadbe"
            ]
        ]
    },
    {
        "id": "a153046caf92febe",
        "type": "http in",
        "z": "e3562182c0530220",
        "name": "",
        "url": "jiexi",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 80,
        "y": 1500,
        "wires": [
            [
                "c409abeb6e8b5294"
            ]
        ]
    },
    {
        "id": "7a212cbeebc0ec3c",
        "type": "function",
        "z": "e3562182c0530220",
        "name": "数据解密",
        "func": "const CryptoJS = global.get('CryptoJS')\nfunction Decrypt(word,key,iv) {\n    let encryptedHexStr = CryptoJS.enc.Base64.parse(word);\n    let srcs = CryptoJS.enc.Base64.stringify(encryptedHexStr);\n    let decrypt = CryptoJS.AES.decrypt(srcs, key, { iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 });\n    let decryptedStr = decrypt.toString(CryptoJS.enc.Utf8);\n    return decryptedStr.toString();\n}\n\n\n//获取CODE\nfunction abc(id1,id2) {\n    var _pr = id1;\n    var _pu = id2;\n    var _puArr = [];\n    var _newArr = [];\n    var _code = '';\n\n    for (var i = 0; i < _pu.length; i++) {\n        _puArr.push({'id': _pu[i], 'text': _pr[i]});//将新元素添加到数组的末尾，并返回新的长度。\n    }\n//对密钥重新进行排序\n    _newArr = _puArr.sort(compare(\"id\"));\n    for (var n = 0; n < _newArr.length; n++) {\n\n        _code += _newArr[n]['text'];\n    }\n    return _code\n}\n\nfunction compare(_0x209a13) {\n    var _0x2b0a5b = {\n        'hupwx': function(_0x28592c, _0x5c0aae) {\n            return _0x28592c - _0x5c0aae;\n        }\n    };\n    return function(_0x4490c6, _0x47bde8) {\n        var _0x11d139 = _0x4490c6[_0x209a13];\n        var _0x2b383f = _0x47bde8[_0x209a13];\n        return _0x2b0a5b['hupwx'](_0x11d139, _0x2b383f);\n    }\n        ;\n}\n\n//通过加密的URL和abc函数获取的CODE，进行AES解密\nfunction secret(enStr, code) {\n    code = CryptoJS.MD5(code).toString(); //32位md5  //修改\n    var iv1 = code.substring(0, 16);  //取前16位\n    var key1 = code.substring(16);    //取后16位\n\n    const key = CryptoJS.enc.Utf8.parse(key1);\n    const iv = CryptoJS.enc.Utf8.parse(iv1);\n    return Decrypt(enStr,key,iv)\n}\n\nvar code1 = abc(msg.id1,msg.id2)\nmsg.payload = secret(msg.enurl, code1)\nreturn msg\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 1500,
        "wires": [
            [
                "b6ee143b6f20909d"
            ]
        ]
    },
    {
        "id": "c409abeb6e8b5294",
        "type": "function",
        "z": "e3562182c0530220",
        "name": "解析地址",
        "func": "url = msg.payload.url\nmsg.url = \"https://jx.parwix.com:4433/player/analysis.php?v=\"+url\nmsg.headers = {\n  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.74 Safari/537.36 Edg/99.0.1150.46'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 1500,
        "wires": [
            [
                "67c567ad9e6bb0d5"
            ]
        ]
    },
    {
        "id": "67c567ad9e6bb0d5",
        "type": "http request",
        "z": "e3562182c0530220",
        "name": "解析请求",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 400,
        "y": 1500,
        "wires": [
            [
                "0fc0be25835ee7c8"
            ]
        ]
    },
    {
        "id": "0fc0be25835ee7c8",
        "type": "function",
        "z": "e3562182c0530220",
        "name": "",
        "func": "var html = msg.payload\nvar id1 = /id=\"vod_(.*?)\"/.exec(html);\nvar id2 = /id=\"vod_([0-9]{10})\"/.exec(html);\nvar enurl = /\"url\": \"(.*?)\"/.exec(html);\nmsg.id1 = id1[1]\nmsg.id2=id2[1]\nmsg.enurl = enurl[1]\nmsg.payload = []\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1500,
        "wires": [
            [
                "7a212cbeebc0ec3c"
            ]
        ]
    },
    {
        "id": "b6ee143b6f20909d",
        "type": "function",
        "z": "e3562182c0530220",
        "name": "",
        "func": "var url = {}\nurl['a'] = msg.payload\nmsg.payload = url\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 1500,
        "wires": [
            [
                "b443439c81afcf12",
                "25b7f40c09229aee"
            ]
        ]
    },
    {
        "id": "b443439c81afcf12",
        "type": "http response",
        "z": "e3562182c0530220",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1030,
        "y": 1500,
        "wires": []
    },
    {
        "id": "b31ac3c5c0b6d873",
        "type": "function",
        "z": "e3562182c0530220",
        "name": "搜索数据",
        "func": "msg.url = \"https://v.qq.com/x/search/?q=\"+msg.payload.videoname+\"&stag=102&smartbox_ab=\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 1680,
        "wires": [
            [
                "fe7fab976184bdf5"
            ]
        ]
    },
    {
        "id": "ba61111a43c59b2d",
        "type": "http in",
        "z": "e3562182c0530220",
        "name": "",
        "url": "search",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 1680,
        "wires": [
            [
                "b31ac3c5c0b6d873"
            ]
        ]
    },
    {
        "id": "580301050448b715",
        "type": "http response",
        "z": "e3562182c0530220",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1170,
        "y": 1760,
        "wires": []
    },
    {
        "id": "a2dd37be4ed7e9ae",
        "type": "http request",
        "z": "e3562182c0530220",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "persist": false,
        "authType": "",
        "senderr": false,
        "x": 420,
        "y": 1940,
        "wires": [
            [
                "1155f433ae3e7fb7"
            ]
        ]
    },
    {
        "id": "1155f433ae3e7fb7",
        "type": "function",
        "z": "e3562182c0530220",
        "name": "匹配地址参数合成地址",
        "func": "var url = []\nvar reg = /\"F\":\\d,\"V\":\"(.*?)\"/g\n\nfor (var i = 0; i < 1000; i++) {\n    url[i] = reg.exec(msg.payload)\n    if(reg.lastIndex==0){\n        msg.payload=url\n        break\n    }\n}\n\n\nvar hurl = []\nvar rsg = msg.payload\nvar a = (rsg.length + 1)/2\nfor (var n = 0; n < (rsg.length - 1)/2; n++) {\n    hurl.push(\"https://v.qq.com/x/cover/\"+msg.vid+\"/\"+msg.payload[n][1]+\".html\")\n}\nvar txt ={}\nfor(var j=0;j<hurl.length;j++){\n    var title = '第'+(j+1).toString()+'集'\n    txt[title]=hurl[j]\n}\nmsg.payload = txt\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 1940,
        "wires": [
            [
                "6986c5b47efa4309",
                "e252656781e2dd6a"
            ]
        ]
    },
    {
        "id": "fe7fab976184bdf5",
        "type": "http request",
        "z": "e3562182c0530220",
        "name": "搜索请求",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 440,
        "y": 1680,
        "wires": [
            [
                "c46712a45f949ea3"
            ]
        ]
    },
    {
        "id": "c46712a45f949ea3",
        "type": "function",
        "z": "e3562182c0530220",
        "name": "",
        "func": "msg.html = msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1680,
        "wires": [
            [
                "eba6a7ae73bff6bb"
            ]
        ]
    },
    {
        "id": "eba6a7ae73bff6bb",
        "type": "html",
        "z": "e3562182c0530220",
        "name": "前两条信息地址href",
        "property": "payload",
        "outproperty": "url1",
        "tag": "#search_container > div.wrapper > div.wrapper_main > div.mix_warp > div > div > div > div._infos > div > h2 > a",
        "ret": "attr",
        "as": "single",
        "x": 770,
        "y": 1680,
        "wires": [
            [
                "ed33c196276d0e2f"
            ]
        ]
    },
    {
        "id": "ed33c196276d0e2f",
        "type": "html",
        "z": "e3562182c0530220",
        "name": "前两条信息地址href",
        "property": "payload",
        "outproperty": "imgurl",
        "tag": "#search_container > div.wrapper > div.wrapper_main > div.mix_warp > div > div:nth-child(1) > div > div._infos > div > a > img",
        "ret": "attr",
        "as": "single",
        "x": 990,
        "y": 1680,
        "wires": [
            [
                "b0528caa388fd1a1"
            ]
        ]
    },
    {
        "id": "b0528caa388fd1a1",
        "type": "function",
        "z": "e3562182c0530220",
        "name": "",
        "func": "var reg = /totalData: '(.*?)'/i\nret = reg.exec(msg.payload)\n// msg.payload = ret[1]\nret1 = decodeURIComponent(ret[1])\nmsg.payload = ret1\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1760,
        "wires": [
            [
                "24c8adcfc63d46f6"
            ]
        ]
    },
    {
        "id": "24c8adcfc63d46f6",
        "type": "json",
        "z": "e3562182c0530220",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 730,
        "y": 1760,
        "wires": [
            [
                "21320c82c6bb22ed"
            ]
        ]
    },
    {
        "id": "6986c5b47efa4309",
        "type": "debug",
        "z": "e3562182c0530220",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 1820,
        "wires": []
    },
    {
        "id": "21320c82c6bb22ed",
        "type": "function",
        "z": "e3562182c0530220",
        "name": "",
        "func": "// img = ''\n// url = ''\n// name = ''\nlist = {}\nvar i = 0\narr = msg.payload.itemList\nfor(var val in arr){\n    list[val] = [\n        arr[i].videoInfo.title,\n        arr[i].videoInfo.url,\n        arr[i].videoInfo.imgUrl\n        ]\n    i++\n}\nname1 = msg.imgurl[0].alt\nname2 = msg.imgurl[1].alt\nurl1 = msg.url1[0].href\nurl2 = msg.url1[1].href\nimgurl1 = msg.imgurl[0].src\nimgurl2 = msg.imgurl[1].src\njson = {}\njson['0']=[name1,url1,imgurl1]\njson['1']=[name2,url2,imgurl2]\ni = 2\nfor(var val1 in list){\n    json[i.toString()] = list[val1]\n    i++\n}\nmsg.payload = json\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 1760,
        "wires": [
            [
                "6986c5b47efa4309",
                "580301050448b715"
            ]
        ]
    },
    {
        "id": "e5bbae4f9ddad347",
        "type": "http in",
        "z": "e3562182c0530220",
        "name": "",
        "url": "videoinfo",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 1940,
        "wires": [
            [
                "329a24a20ea51231"
            ]
        ]
    },
    {
        "id": "329a24a20ea51231",
        "type": "function",
        "z": "e3562182c0530220",
        "name": "",
        "func": "msg.url = msg.payload.url\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 1940,
        "wires": [
            [
                "a2dd37be4ed7e9ae"
            ]
        ]
    },
    {
        "id": "e252656781e2dd6a",
        "type": "http response",
        "z": "e3562182c0530220",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 830,
        "y": 1940,
        "wires": []
    }
]